<!DOCTYPE html>
<!-- saved from url=(0047)https://juejin.im/post/5a77211b6fb9a0635774d61a -->
<html lang="zh-Hans"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8"><meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1"><meta name="viewport" content="width=device-width,initial-scale=1,user-scalable=no,viewport-fit=cover"><meta name="google-site-verification" content="cCHsgG9ktuCTgWgYfqCJql8AeR4gAne4DTZqztPoirE"><meta name="google-site-verification" content="nPvn9R5NJLsZKTv5VKIbn0OmkRcJ4PC6KdDoTX3n5Mw"><meta name="apple-itunes-app" content="app-id=987739104"><meta name="baidu-site-verification" content="qiK2a1kcFc"><meta name="360-site-verification" content="4c3c7d57d59f0e1a308462fbc7fd7e51"><meta name="sogou_site_verification" content="c49WUDZczQ"><style>body {
        font-size: 16px;
        line-height: 2;
      }
      a, button, input {
        margin: 1rem 1.5rem;
      }
      img {
        width: 0;
        height: 0;
      }
      #juejin {
        overflow-x: hidden;
      }</style><meta data-vue-meta="true" data-vmid="keywords" name="keywords" content="前端,设计模式,TypeScript"><meta data-vue-meta="true" data-vmid="description" name="description" content="作者简介 joey 蚂蚁金服·数据体验技术团队 本文是typescript设计模式系列文章的最后一篇，介绍了最后5个对象行为型的设计模式~ 观察者模式 状态模式 策略模式 模板模式 访问者模式 Observer（观察者） 意图 定义对象间的一种一对多的"><title data-vue-meta="true">Typescript玩转设计模式 之 对象行为型模式（下） - 掘金</title><link rel="apple-touch-icon" sizes="180x180" href="https://b-gold-cdn.xitu.io/favicons/v2/apple-touch-icon.png"><link rel="icon" type="image/png" sizes="32x32" href="https://b-gold-cdn.xitu.io/favicons/v2/favicon-32x32.png"><link rel="icon" type="image/png" sizes="16x16" href="https://b-gold-cdn.xitu.io/favicons/v2/favicon-16x16.png"><link rel="manifest" href="https://b-gold-cdn.xitu.io/favicons/v2/manifest.json"><link rel="mask-icon" href="https://b-gold-cdn.xitu.io/favicons/v2/safari-pinned-tab.svg" color="#5bbad5"><link rel="shortcut icon" href="https://b-gold-cdn.xitu.io/favicons/v2/favicon.ico"><meta name="msapplication-config" content="https://b-gold-cdn.xitu.io/favicons/v2/browserconfig.xml"><meta name="theme-color" content="#ffffff"><link rel="search" title="掘金" href="https://b-gold-cdn.xitu.io/conf/search.xml" type="application/opensearchdescription+xml"><link rel="stylesheet" href="./Typescript玩转设计模式 之 对象行为型模式（下） - 掘金_files/ionicons.min.css"><link rel="stylesheet" href="./Typescript玩转设计模式 之 对象行为型模式（下） - 掘金_files/iconfont.css"><link href="./Typescript玩转设计模式 之 对象行为型模式（下） - 掘金_files/0.ca43282eb976179da109.css" rel="stylesheet"><script async="" src="./Typescript玩转设计模式 之 对象行为型模式（下） - 掘金_files/hm.js"></script><script async="" src="./Typescript玩转设计模式 之 对象行为型模式（下） - 掘金_files/analytics.js"></script><script type="text/javascript" async="" src="./Typescript玩转设计模式 之 对象行为型模式（下） - 掘金_files/vds.js"></script><script type="text/javascript" async="" src="./Typescript玩转设计模式 之 对象行为型模式（下） - 掘金_files/collect-v.3.2.14.js"></script><script charset="utf-8" src="./Typescript玩转设计模式 之 对象行为型模式（下） - 掘金_files/4.4811a1c86fde15d0b829.js"></script></head><body><div id="juejin" data-v-2a21baac=""><div class="global-component-box" data-v-2a21baac=""><!----><div data-v-ba54b7e8="" data-v-2a21baac="" class="alert-list alert-list"></div><div data-v-78376140="" data-v-2a21baac="" class="suspension-panel suspension-panel"><button data-v-78376140="" title="回到顶部" class="btn to-top-btn" style=""><i data-v-78376140="" class="ion-android-arrow-dropup"></i></button><button data-v-78376140="" title="建议反馈" class="btn meiqia-btn" style=""><i data-v-78376140="" class="ion-chatbubble-working"></i></button></div><!----><!----><div class="emoji-barrage" data-v-c9c21dda="" data-v-2a21baac=""><!----></div><div class="book-new-user-award-popup" style="display:none;" data-v-1127fe6e="" data-v-2a21baac=""><div class="content-box" style="display:;" data-v-1127fe6e=""><div class="close ion-close-round" data-v-1127fe6e=""></div><div class="header" data-v-1127fe6e=""><div class="icon" data-v-1127fe6e=""><img src="./Typescript玩转设计模式 之 对象行为型模式（下） - 掘金_files/icon.a87e5ae.svg" data-v-1127fe6e=""></div><div class="txt" data-v-1127fe6e="">新人专享好礼</div></div><div class="desc" data-v-1127fe6e="">凡未购买过小册的用户，均可领取三张 5 折新人专享券，购买小册时自动使用专享券，最高可节省 45 元。</div><div class="tickets" data-v-1127fe6e=""><div class="ticket" data-v-1127fe6e=""><div class="ticket__inner" data-v-1127fe6e=""><div class="enjoy" data-v-1127fe6e=""><span class="new-title" data-v-1127fe6e="">小册新人 5 折券</span></div><div class="sale" data-v-1127fe6e="">最高可省 15 元</div></div></div><div class="ticket" data-v-1127fe6e=""><div class="ticket__inner" data-v-1127fe6e=""><div class="enjoy" data-v-1127fe6e=""><span class="new-title" data-v-1127fe6e="">小册新人 5 折券</span></div><div class="sale" data-v-1127fe6e="">最高可省 15 元</div></div></div><div class="ticket" data-v-1127fe6e=""><div class="ticket__inner" data-v-1127fe6e=""><div class="enjoy" data-v-1127fe6e=""><span class="new-title" data-v-1127fe6e="">小册新人 5 折券</span></div><div class="sale" data-v-1127fe6e="">最高可省 15 元</div></div></div></div><div class="remark" data-v-1127fe6e="">注：专享券的使用期限在领券的七天内。</div><div class="submit-btn" data-v-1127fe6e="">一键领取</div></div><div class="model success" style="display:none;" data-v-1127fe6e=""><div class="heading" data-v-1127fe6e="">领取成功</div><div class="content-text" data-v-1127fe6e="">购买小册时自动使用专享券</div><div class="btn-success-footer" data-v-1127fe6e=""><div class="btn-ok" data-v-1127fe6e="">知道了</div><div class="btn-ok btn-link" data-v-1127fe6e="">前往小册首页</div></div></div><div class="model fail" style="display:none;" data-v-1127fe6e=""><div class="heading" data-v-1127fe6e="">领取失败</div><div class="content-text" data-v-1127fe6e="">本活动仅适用于小册新用户</div><div class="btn-ok" data-v-1127fe6e="">知道了</div></div></div><!----><!----><div class="bind-phone-number-modal-box" data-v-76bf06d9="" data-v-2a21baac=""><div st:block="bindPhoneNumberModal" class="modal-mask" style="display:none;" data-v-76bf06d9=""></div><form class="bind-phone-number-form" style="display:none;" data-v-76bf06d9=""><i title="关闭" class="close-btn ion-close-round" data-v-76bf06d9=""></i><h1 class="title" data-v-76bf06d9="">提示</h1><h2 class="hint" data-v-76bf06d9="">根据我国<a href="http://www.cac.gov.cn/2017-08/25/c_1121541842.htm" target="_blank" style="color:#007fff">《互联网跟帖评论服务管理规定》</a>，您需要绑定手机号后才可在掘金社区内发布内容。</h2><div class="input-group" data-v-76bf06d9=""><div class="input-box" data-v-76bf06d9=""><input maxlength="64" placeholder="请输入要绑定的手机号码" value="" class="input" data-v-76bf06d9=""></div><!----><!----></div><button st:name="bindBtn" class="btn" data-v-76bf06d9="">绑定手机</button></form></div></div><!----><div data-v-0f848c07="" data-v-50ff96fb="" data-v-2a21baac="" class="view-container"><div data-v-0f848c07="" class="main-header-box"><header data-v-89995ec0="" data-v-0f848c07="" class="main-header main-header unauthorized visible"><div data-v-89995ec0="" class="container"><a data-v-89995ec0="" href="https://juejin.im/" class="logo"><img data-v-89995ec0="" src="./Typescript玩转设计模式 之 对象行为型模式（下） - 掘金_files/logo.a7995ad.svg" alt="掘金" class="logo-img"><img data-v-89995ec0="" src="./Typescript玩转设计模式 之 对象行为型模式（下） - 掘金_files/simplify-logo.3e3c253.svg" alt="掘金" class="mobile"></a><nav data-v-89995ec0="" role="navigation" class="main-nav"><ul data-v-89995ec0="" class="nav-list"><li data-v-89995ec0="" class="main-nav-list"><div data-v-89995ec0="" class="phone-show-menu"><span data-v-89995ec0="">首页</span><div data-v-89995ec0="" class="icon ion-arrow-down-b"></div></div><ul data-v-89995ec0="" class="phone-hide"><li data-v-89995ec0="" class="nav-item link-item route-active"><a data-v-89995ec0="" href="https://juejin.im/">首页</a></li><li data-v-89995ec0="" class="nav-item link-item activities"><a data-v-89995ec0="" href="https://juejin.im/pins">沸点</a></li><li data-v-89995ec0="" class="nav-item link-item"><a data-v-89995ec0="" href="https://juejin.im/topics">话题</a></li><li data-v-89995ec0="" class="nav-item link-item book"><a data-v-89995ec0="" href="https://juejin.im/books">小册</a></li><li data-v-89995ec0="" class="nav-item link-item"><a data-v-89995ec0="" href="https://juejin.im/events/all">活动</a></li></ul></li><li data-v-89995ec0="" class="nav-item search"><form data-v-89995ec0="" role="search" class="search-form"><input data-v-89995ec0="" type="search" maxlength="32" placeholder="搜索掘金" class="search-input"><img data-v-89995ec0="" src="./Typescript玩转设计模式 之 对象行为型模式（下） - 掘金_files/juejin-search-icon.6f8ba1b.svg" alt="搜索" class="search-icon"></form></li><!----><!----><!----><li data-v-89995ec0="" class="nav-item submit"><img data-v-89995ec0="" src="./Typescript玩转设计模式 之 对象行为型模式（下） - 掘金_files/submit-icon.53f4253.svg" class="icon"><span data-v-89995ec0="">写文章</span><!----></li><li data-v-89995ec0="" class="nav-item auth"><span data-v-89995ec0="" class="login">登录</span><span data-v-89995ec0="" class="register">注册</span></li></ul></nav></div></header></div><main data-v-0f848c07="" class="container main-container"><div data-v-50ff96fb="" data-v-0f848c07="" class="view column-view"><div data-v-50ff96fb="" data-v-0f848c07="" class="main-area article-area shadow"><article data-v-50ff96fb="" itemscope="itemscope" itemtype="http://schema.org/Article" class="article" data-v-0f848c07=""><meta itemprop="url" content="https://juejin.im/post/5a77211b6fb9a0635774d61a"><meta itemprop="headline" content="Typescript玩转设计模式 之 对象行为型模式（下）"><meta itemprop="keywords" content="前端,设计模式,TypeScript"><meta itemprop="datePublished" content="2018-02-04T15:12:31.521Z"><meta itemprop="image" content="https://user-gold-cdn.xitu.io/2018/2/4/161615fa10f7a8ec?w=797&amp;h=485&amp;f=png&amp;s=385879"><div itemprop="author" itemscope="itemscope" itemtype="http://schema.org/Person"><meta itemprop="name" content="蚂蚁金服数据体验技术"><meta itemprop="url" content="https://juejin.im/user/59659aff5188250cf956e6dd"></div><div itemprop="publisher" itemscope="itemscope" itemtype="http://schema.org/Organization"><meta itemprop="name" content="掘金"><div itemprop="logo" itemscope="itemscope" itemtype="https://schema.org/ImageObject"><meta itemprop="url" content="https://b-gold-cdn.xitu.io/icon/icon-white-180.png"><meta itemprop="width" content="180"><meta itemprop="height" content="180"></div></div><div data-v-50ff96fb="" class="author-info-block"><a data-v-50ff96fb="" href="https://juejin.im/user/59659aff5188250cf956e6dd" target="_blank" rel="" class="avatar-link"><div data-v-261e638e="" data-v-b49070bc="" data-v-50ff96fb="" data-src="https://user-gold-cdn.xitu.io/2017/9/7/217d533ac647f900de33fcd6f7d64c64?imageView2/1/w/100/h/100/q/85/format/webp/interlace/1" class="lazy avatar avatar loaded" style="background-image: url(&quot;https://user-gold-cdn.xitu.io/2017/9/7/217d533ac647f900de33fcd6f7d64c64?imageView2/1/w/100/h/100/q/85/format/webp/interlace/1&quot;);"></div></a><div data-v-50ff96fb="" class="author-info-box"><a data-v-1a54813b="" data-v-50ff96fb="" href="https://juejin.im/user/59659aff5188250cf956e6dd" target="_blank" rel="" class="username username ellipsis">蚂蚁金服数据体验技术<a data-v-3a430c94="" data-v-1a54813b="" href="https://juejin.im/book/5c90640c5188252d7941f5bb/section/5c9065385188252da6320022" target="_blank" rel="" class="rank"><img data-v-3a430c94="" src="./Typescript玩转设计模式 之 对象行为型模式（下） - 掘金_files/lv-6.74bd93a.svg" alt="lv-6"></a></a><div data-v-50ff96fb="" class="meta-box"><time data-v-50ff96fb="" datetime="2018-02-04T15:12:31.521Z" title="Sun Feb 04 2018 23:12:31 GMT+0800 (中国标准时间)" class="time">2018年02月04日</time><span data-v-50ff96fb="" class="views-count">阅读 1511</span><!----></div></div><button data-v-d05fee10="" data-v-50ff96fb="" class="follow-button follow">关注</button></div><div data-v-261e638e="" data-v-a98f170a="" data-v-50ff96fb="" data-src="https://user-gold-cdn.xitu.io/2018/2/4/161615fa10f7a8ec?imageView2/1/w/1304/h/734/q/85/format/webp/interlace/1" class="lazy thumb article-hero loaded" style="background-image: url(&quot;https://user-gold-cdn.xitu.io/2018/2/4/161615fa10f7a8ec?imageView2/1/w/1304/h/734/q/85/format/webp/interlace/1&quot;); background-size: cover;"></div><h1 data-v-50ff96fb="" class="article-title">Typescript玩转设计模式 之 对象行为型模式（下）</h1><div data-v-50ff96fb="" data-id="5a7722df5188257a6d635a43" itemprop="articleBody" class="article-content"><blockquote>
<p>作者简介 joey 蚂蚁金服·数据体验技术团队</p>
</blockquote>
<p>本文是typescript设计模式系列文章的最后一篇，介绍了最后5个对象行为型的设计模式~</p>
<ul>
<li>观察者模式</li>
<li>状态模式</li>
<li>策略模式</li>
<li>模板模式</li>
<li>访问者模式</li>
</ul>
<h1 class="heading" data-id="heading-0">Observer（观察者）</h1>
<h2 class="heading" data-id="heading-1">意图</h2>
<blockquote>
<p>定义对象间的一种一对多的依赖关系，当一个对象的状态发生改变时，所有依赖于它的对象都得到通知并被自动更新。</p>
</blockquote>
<h2 class="heading" data-id="heading-2">结构</h2>
<p>观察者模式包含以下角色：</p>
<ul>
<li>Subject（目标）：目标又称为主题，它是指被观察的对象。在目标中定义了一个观察者集合，一个观察目标可以接受任意数量的观察者来观察，它提供一系列方法来增加和删除观察者对象，同时它定义了通知方法notify()。目标类可以是接口，也可以是抽象类或具体类。</li>
<li>ConcreteSubject（具体目标）：具体目标是目标类的子类，通常它包含有经常发生改变的数据，当它的状态发生改变时，向它的各个观察者发出通知；同时它还实现了在目标类中定义的抽象业务逻辑方法（如果有的话）。如果无须扩展目标类，则具体目标类可以省略。</li>
<li>Observer（观察者）：观察者将对观察目标的改变做出反应，观察者一般定义为接口，该接口声明了更新数据的方法update()，因此又称为抽象观察者。</li>
<li>ConcreteObserver（具体观察者）：在具体观察者中维护一个指向具体目标对象的引用，它存储具体观察者的有关状态，这些状态需要和具体目标的状态保持一致；它实现了在抽象观察者Observer中定义的update()方法。通常在实现时，可以调用具体目标类的attach()方法将自己添加到目标类的集合中或通过detach()方法将自己从目标类的集合中删除。</li>
</ul>
<p></p><figure><img class="lazyload inited loaded" data-src="https://user-gold-cdn.xitu.io/2018/2/4/161615c08fd81275?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" data-width="1274" data-height="1180" src="./Typescript玩转设计模式 之 对象行为型模式（下） - 掘金_files/161615c08fd81275"><figcaption></figcaption></figure><p></p>
<h2 class="heading" data-id="heading-3">示例</h2>
<h3 class="heading" data-id="heading-4">推模型</h3>
<p>目标向观察者发送关于改变的“详细信息”，而不管它们需要与否。由目标维护观察者。</p>
<pre><code class="hljs bash copyable" lang="bash">  // 场景：顾客点菜后，服务员记下顾客的信息，菜做好后广播通知顾客领取

  // 观察者基类
  class Observer {
    take(msg: string): void {}
  }

  // 目标基类
  class Subject {
    <span class="hljs-built_in">set</span>: Set&lt;Observer&gt; = new Set();
    // 注册回调
    add(observer: Observer): void {
      this.set.add(observer);
    }
    // 注销回调
    remove(observer: Observer): void {
      this.set.delete(observer);
    }
    // 触发所有已注册的回调
    notify(msg: string): void {
      this.set.forEach(observer =&gt; {
        observer.take(msg);
      });
    }
  }

  // 具体目标，服务员类
  class Waiter extends Subject {
    // 菜做完后通知所有注册了的顾客
    ready(): void {
      this.notify(<span class="hljs-string">'ready'</span>);
    }
  }

  // 具体观察者，顾客类
  class Client extends Observer {
    name: string;
    // 初始化时将自身注册到目标，以便接收通知
    constructor(name: string, waiter: Waiter) {
      super();
      this.name = name;
      waiter.add(this);
    }
    take(msg: string) {
      console.log(`顾客 <span class="hljs-variable">${this.name}</span> 收到了消息显示状态是&lt;<span class="hljs-variable">${msg}</span>&gt;， 到吧台领取了菜`);
    }
  }

  <span class="hljs-keyword">function</span> <span class="hljs-function"><span class="hljs-title">observerPushDemo</span></span>() {
    const waiter = new Waiter();
    // 顾客点菜后，等待服务员通知
    const bob = new Client(<span class="hljs-string">'Bob'</span>, waiter);
    const mick = new Client(<span class="hljs-string">'Mick'</span>, waiter);
    // 菜准备好后，服务员广播通知顾客可以到吧台领取了
    waiter.ready();
  }
<span class="copy-code-btn">复制代码</span></code></pre><h3 class="heading" data-id="heading-5">拉模型</h3>
<p>目标除了“最小通知”外什么也不送出，而在此之后由观察者显式地向目标询问细节。观察者里维护了目标对象。</p>
<pre><code class="hljs bash copyable" lang="bash">  // 场景：顾客点菜后，收到通知从服务员处询问详细信息

  // 观察者基类
  class Observer {
    take(subject: Subject): void {}
  }

  // 目标基类
  class Subject {
    <span class="hljs-built_in">set</span>: Set&lt;Observer&gt; = new Set();
    // 注册回调
    add(observer: Observer): void {
      this.set.add(observer);
    }
    // 注销回调
    remove(observer: Observer): void {
      this.set.delete(observer);
    }
    // 触发所有已注册的回调
    notify(): void {
      this.set.forEach(observer =&gt; {
        observer.take(this);
      });
    }
  }

  // 具体目标，服务员类
  class Waiter extends Subject {
    status = <span class="hljs-string">'doing'</span>;
    // 与推模式的区别是，只发送通知，不发送详细数据
    ready(): void {
      this.status = <span class="hljs-string">'ready'</span>;
      this.notify();
    }
    // 提供访问详细数据接口，让观察者访问详细数据
    getStatus(): string {
      <span class="hljs-built_in">return</span> this.status;
    }
  }

  // 具体观察者，顾客类
  class Client extends Observer {
    name: string;
    // 初始化时将自身注册到目标，以便接收通知
    constructor(name: string, waiter: Waiter) {
      super();
      this.name = name;
      waiter.add(this);
    }
    // 与推模式的区别是，收到通知后，没有数据传入，需要从目标里读取
    take(waiter: Waiter) {
      const msg = waiter.getStatus();
      console.log(`顾客 <span class="hljs-variable">${this.name}</span> 收到通知，询问服务员后发现状态是 &lt;<span class="hljs-variable">${msg}</span>&gt; 后领取了菜`);
    }
  }

  <span class="hljs-keyword">function</span> <span class="hljs-function"><span class="hljs-title">observerPushDemo</span></span>() {
    const waiter = new Waiter();
    // 顾客点菜
    const bob = new Client(<span class="hljs-string">'Bob'</span>, waiter);
    const mick = new Client(<span class="hljs-string">'Mick'</span>, waiter);
    // 菜准备完后，服务员通知了下所有顾客状态改变了，但没有发送内容出去，需要顾客再询问一下服务员才知道最新状态
    waiter.ready();
  }
<span class="copy-code-btn">复制代码</span></code></pre><h2 class="heading" data-id="heading-6">适用场景</h2>
<ul>
<li>当一个抽象模型有两个方面，其中一个方面依赖于另一方面。将这两者封装在独立的对象中以使它们可以各自独立地改变和复用；</li>
<li>当一个对象的改变需要同时改变其他对象，而不知道具体有多少对象有待改变；</li>
<li>当一个对象必须通知其他对象，而它又不能假定其他对象是谁。换言之，你不希望这些对象是紧密耦合的；</li>
</ul>
<h2 class="heading" data-id="heading-7">优点</h2>
<ul>
<li>目标和观察者间的抽象耦合。一个目标所知道的仅仅是它有一系列观察者，每个都符合抽象的Observer类的简单接口。目标不需要知道任何一个观察者属于哪一个具体的类。</li>
<li>支持广播通信。目标发现的通知不需要指定它的接收者。目标对象并不关心有多少观察者对象对自己感兴趣，唯一的职责就是通知已注册的各观察者。</li>
</ul>
<h2 class="heading" data-id="heading-8">缺点</h2>
<ul>
<li>意外的更新。因为一个观察者并不知道其他观察者的存在，它可能对改变目标的最终代价一无所知。在目标上一个看似无害的操作可能会引起一系列对观察者以及依赖于这些观察者的那些对象的更新。由此引发的问题常常难以追踪。</li>
</ul>
<h2 class="heading" data-id="heading-9">相关模式</h2>
<ul>
<li>Mediator：通过封装复杂的更新语义，ChangeManager充当目标和观察者之间的中介者。</li>
<li>Singleton：ChangeManager可使用单例模式来保证它是唯一的并且是可全局访问的。</li>
</ul>
<h1 class="heading" data-id="heading-10">State（状态）</h1>
<h2 class="heading" data-id="heading-11">意图</h2>
<blockquote>
<p>允许一个对象在其内部状态改变时改变它的行为。对象看起来似乎修改了它的类。</p>
</blockquote>
<h2 class="heading" data-id="heading-12">结构</h2>
<p>状态模式包含以下角色：</p>
<ul>
<li>Context（环境类）：环境类又称为上下文类，它是拥有多种状态的对象。由于环境类的状态存在多样性且在不同状态下对象的行为有所不同，因此将状态独立出去形成单独的状态类。在环境类中维护一个抽象状态类State的实例，这个实例定义当前状态，在具体实现时，它是一个State子类的对象。</li>
<li>State（抽象状态类）：它用于定义一个接口以封装与环境类的一个特定状态相关的行为，在抽象状态类中声明了各种不同状态对应的方法，而在其子类中实现类这些方法，由于不同状态下对象的行为可能不同，因此在不同子类中方法的实现可能存在不同，相同的方法可以写在抽象状态类中。</li>
<li>ConcreteState（具体状态类）：它是抽象状态类的子类，每一个子类实现一个与环境类的一个状态相关的行为，每一个具体状态类对应环境的一个具体状态，不同的具体状态类其行为有所不同。</li>
</ul>
<p></p><figure><img class="lazyload inited loaded" data-src="https://user-gold-cdn.xitu.io/2018/2/4/161615c5fe631c12?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" data-width="1280" data-height="483" src="./Typescript玩转设计模式 之 对象行为型模式（下） - 掘金_files/161615c5fe631c12"><figcaption></figcaption></figure><p></p>
<h2 class="heading" data-id="heading-13">示例</h2>
<pre><code class="hljs bash copyable" lang="bash">  // 账户有几种状态：正常，透支，受限

  // 账户类，代表状态模式中的环境
  class Account {
    private name: string;
    private state: State;
    // 余额
    private balance = 0;
    // 初始时为正常状态
    constructor(name: string) {
      this.name = name;
      this.state = new NormalState(this);
      console.log(`用户 <span class="hljs-variable">${this.name}</span> 开户，余额为 <span class="hljs-variable">${this.balance}</span>`);
      console.log(<span class="hljs-string">'--------'</span>);
    }
    getBalance(): number {
      <span class="hljs-built_in">return</span> this.balance;
    }
    <span class="hljs-built_in">set</span>Balance(balance: number) {
      this.balance = balance;
    }
    <span class="hljs-built_in">set</span>State(state: State) {
      this.state = state;
    }
    // 存款
    deposit(amount: number) {
      this.state.deposit(amount);
      console.log(`存款 <span class="hljs-variable">${amount}</span>`);
      console.log(`余额为 <span class="hljs-variable">${this.balance}</span>`);
      console.log(`账户状态为 <span class="hljs-variable">${this.state.getName()}</span>`);
      console.log(<span class="hljs-string">'--------'</span>);
    }
    // 取款
    withdraw(amount: number) {
      this.state.withdraw(amount);
      console.log(`取款 <span class="hljs-variable">${amount}</span>`);
      console.log(`余额为 <span class="hljs-variable">${this.balance}</span>`);
      console.log(`账户状态为 <span class="hljs-variable">${this.state.getName()}</span>`);
      console.log(<span class="hljs-string">'--------'</span>);
    }
    // 结算利息
    <span class="hljs-function"><span class="hljs-title">computeInterest</span></span>() {
      this.state.computeInterest();
    }
  }

  // 状态抽象类
  abstract class State {
    private name: string;
    protected acc: Account;
    constructor(name: string) {
      this.name = name;
    }
    <span class="hljs-function"><span class="hljs-title">getName</span></span>() {
      <span class="hljs-built_in">return</span> this.name;
    }
    abstract deposit(amount: number);  
    abstract withdraw(amount: number);  
    abstract computeInterest();  
    abstract stateCheck();
  }

  // 正常状态类
  class NormalState extends State {
    acc: Account;
    constructor(acc: Account) {
      super(<span class="hljs-string">'正常'</span>);
      this.acc = acc;
    }
    deposit(amount: number) {
      this.acc.setBalance(this.acc.getBalance() + amount);
      this.stateCheck();
    }
    withdraw(amount: number) {
      this.acc.setBalance(this.acc.getBalance() - amount);  
      this.stateCheck();
    }
    <span class="hljs-function"><span class="hljs-title">computeInterest</span></span>() {
      console.log(<span class="hljs-string">'正常状态，无须支付利息'</span>);
    }
    // 状态转换
    <span class="hljs-function"><span class="hljs-title">stateCheck</span></span>() {
      <span class="hljs-keyword">if</span> (this.acc.getBalance() &gt; -2000 &amp;&amp; this.acc.getBalance() &lt;= 0) {  
          this.acc.setState(new OverdraftState(this.acc));  
      } <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (this.acc.getBalance() == -2000) {  
          this.acc.setState(new RestrictedState(this.acc));  
      } <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (this.acc.getBalance() &lt; -2000) {  
          console.log(<span class="hljs-string">'操作受限'</span>);  
      }
    }
  }

  // 透支状态
  class OverdraftState extends State {
    acc: Account;
    constructor(acc: Account) {
      super(<span class="hljs-string">'透支'</span>);
      this.acc = acc;
    }
    deposit(amount: number) {
      this.acc.setBalance(this.acc.getBalance() + amount);
      this.stateCheck();
    }
    withdraw(amount: number) {
      this.acc.setBalance(this.acc.getBalance() - amount);  
      this.stateCheck();
    }
    <span class="hljs-function"><span class="hljs-title">computeInterest</span></span>() {
      console.log(<span class="hljs-string">'计算利息'</span>);
    }
    // 状态转换
    <span class="hljs-function"><span class="hljs-title">stateCheck</span></span>() {
      <span class="hljs-keyword">if</span> (this.acc.getBalance() &gt; 0) {
        this.acc.setState(new NormalState(this.acc));
      } <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (this.acc.getBalance() == -2000) {
        this.acc.setState(new RestrictedState(this.acc));
      } <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (this.acc.getBalance() &lt; -2000) {
        console.log(<span class="hljs-string">'操作受限'</span>);
      }
    }
  }

  // 受限状态
  class RestrictedState extends State {
    acc: Account;
    constructor(acc: Account) {
      super(<span class="hljs-string">'受限'</span>);
      this.acc = acc;
    }
    deposit(amount: number) {
      this.acc.setBalance(this.acc.getBalance() + amount);
      this.stateCheck();
    }
    withdraw(ammount: number) {
      console.log(<span class="hljs-string">'账号受限，取款失败'</span>);
    }
    <span class="hljs-function"><span class="hljs-title">computeInterest</span></span>() {
      console.log(<span class="hljs-string">'计算利息'</span>);
    }
    // 状态转换
    <span class="hljs-function"><span class="hljs-title">stateCheck</span></span>() {
      <span class="hljs-keyword">if</span> (this.acc.getBalance() &gt; 0) {  
        this.acc.setState(new NormalState(this.acc));  
      } <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (this.acc.getBalance() &gt; -2000) {  
        this.acc.setState(new OverdraftState(this.acc));  
      }
    }
  }

  <span class="hljs-keyword">function</span> <span class="hljs-function"><span class="hljs-title">stateDemo</span></span>() {
    const acc = new Account(<span class="hljs-string">'Bob'</span>);
    acc.deposit(1000);  
    acc.withdraw(2000);  
    acc.deposit(3000);  
    acc.withdraw(4000);  
    acc.withdraw(1000);  
    acc.computeInterest(); 
  }
<span class="copy-code-btn">复制代码</span></code></pre><h2 class="heading" data-id="heading-14">适用场景</h2>
<ul>
<li>一个对象的行为取决于它的状态，并且它必须在运行时刻根据状态改变它的行为；</li>
<li>一个操作中含有庞大的多分支的条件语句，且这些分支依赖于该对象的状态。这个状态通常用一个或多个枚举常量表示。有多个操作包含这一相同的条件结构。状态模式将每一个条件分支放入一个独立的类中。这使得你可以根据对象自身的情况将对象的状态作为一个对象，这一对象可以不依赖于其他对象而独立变化。</li>
</ul>
<h2 class="heading" data-id="heading-15">优点</h2>
<ul>
<li>封装了状态的转换规则，在状态模式中可以将状态的转换代码封装在环境类或者具体状态类中，可以对状态转换代码进行集中管理，而不是分散在一个个业务方法中。</li>
<li>将所有与某个状态有关的行为放到一个类中，只需要注入一个不同的状态对象即可使环境对象拥有不同的行为。</li>
<li>允许状态转换逻辑与状态对象合成一体，而不是提供一个巨大的条件语句块，状态模式可以让我们避免使用庞大的条件语句来将业务方法和状态转换代码交织在一起。</li>
<li>可以让多个环境对象共享一个状态对象，从而减少系统中对象的个数。</li>
</ul>
<h2 class="heading" data-id="heading-16">缺点</h2>
<ul>
<li>状态模式的使用必然会增加系统中类和对象的个数，导致系统运行开销增大。</li>
<li>状态模式的结构与实现都较为复杂，如果使用不当将导致程序结构和代码的混乱，增加系统设计的难度。</li>
<li>状态模式对“开闭原则”的支持并不太好，增加新的状态类需要修改那些负责状态转换的源代码，否则无法转换到新增状态；而且修改某个状态类的行为也需修改对应类的源代码。</li>
</ul>
<h2 class="heading" data-id="heading-17">相关模式</h2>
<ul>
<li>享元模式解释了何时以及怎样共享状态对象；</li>
<li>状态对象通常是单例；</li>
</ul>
<h1 class="heading" data-id="heading-18">Strategy（策略模式）</h1>
<h2 class="heading" data-id="heading-19">意图</h2>
<blockquote>
<p>定义一系列的算法，把它们一个个封装起来，并且使它们可相互替换。本模式使得算法可独立于使用它的客户而变化。</p>
</blockquote>
<h2 class="heading" data-id="heading-20">结构</h2>
<p>策略模式包含以下角色：</p>
<ul>
<li>Context（环境类）：环境类是使用算法的角色，它在解决某个问题（即实现某个方法）时可以采用多种策略。在环境类中维持一个对抽象策略类的引用实例，用于定义所采用的策略。</li>
<li>Strategy（抽象策略类）：它为所支持的算法声明了抽象方法，是所有策略类的父类，它可以是抽象类或具体类，也可以是接口。环境类通过抽象策略类中声明的方法在运行时调用具体策略类中实现的算法。</li>
<li>ConcreteStrategy（具体策略类）：它实现了在抽象策略类中声明的算法，在运行时，具体策略类将覆盖在环境类中定义的抽象策略类对象，使用一种具体的算法实现某个业务处理。</li>
</ul>
<p></p><figure><img class="lazyload inited loaded" data-src="https://user-gold-cdn.xitu.io/2018/2/4/161615c95d8bcda5?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" data-width="1280" data-height="443" src="./Typescript玩转设计模式 之 对象行为型模式（下） - 掘金_files/161615c95d8bcda5"><figcaption></figcaption></figure><p></p>
<h2 class="heading" data-id="heading-21">示例</h2>
<pre><code class="hljs bash copyable" lang="bash">// 火车票类：环境类
class TrainTicket {
  private price: number;
  private discount: Discount;
  constructor(price: number) {
    this.price = price;
  }
  <span class="hljs-built_in">set</span>Discount(discount: Discount) {
    this.discount = discount;
  }
  getPrice(): number {
    <span class="hljs-built_in">return</span> this.discount.calculate(this.price);
  }
}

// 折扣接口
interface Discount {
  calculate(price: number): number;
}

// 学生票折扣
class StudentDiscount implements Discount {
  calculate(price: number): number {
    console.log(<span class="hljs-string">'学生票打7折'</span>);
    <span class="hljs-built_in">return</span> price * 0.7;
  }
}

// 儿童票折扣
class ChildDiscount implements Discount {
  calculate(price: number): number {
    console.log(<span class="hljs-string">'儿童票打5折'</span>);
    <span class="hljs-built_in">return</span> price * 0.5;
  }
}

// 军人票折扣
class SoldierDiscount implements Discount {
  calculate(price: number): number {
    console.log(<span class="hljs-string">'军人免票'</span>);
    <span class="hljs-built_in">return</span> 0;
  }
}

<span class="hljs-keyword">function</span> <span class="hljs-function"><span class="hljs-title">strategyDemo</span></span>() {
  const ticket: TrainTicket = new TrainTicket(100);

  // 从环境中获取到身份信息，然后根据身份信息获取折扣策略
  const discount: Discount = getIdentityDiscount();
  // 注入折扣策略对象
  ticket.setDiscount(discount);
  // 根据策略对象获取票价
  console.log(ticket.getPrice());
}
<span class="copy-code-btn">复制代码</span></code></pre><h2 class="heading" data-id="heading-22">适用场景</h2>
<ul>
<li>许多相关的类仅仅是行为有异。“策略”提供了一种用多个行为中的一个行为来配置一个类的方法。</li>
<li>需要使用一个算法的不同变体。</li>
<li>算法使用客户不应该知道的数据。可使用策略模式以避免暴露复杂的、与算法有关的数据结构。</li>
<li>一个类定义了多种行为，并且这些行为在这个类的操作中以多个条件语句的形式出现。将相关的条件分支移入它们各自的策略类中以代替这些条件语句。</li>
</ul>
<h2 class="heading" data-id="heading-23">优点</h2>
<ul>
<li>提供了对“开闭原则”的完美支持，用户可以在不修改原有系统的基础上选择算法或行为，也可以灵活地增加新的算法或行为。</li>
<li>提供了管理相关的算法族的办法。策略类的等级结构定义了一个算法或行为族，恰当使用继承可以把公共的代码移到抽象策略类中，从而避免重复的代码。</li>
<li>提供了一种可以替换继承关系的办法。如果不使用策略模式，那么使用算法的环境类就可能会有一些子类，每一个子类提供一种不同的算法。但是，这样一来算法的使用就和算法本身混在一起，不符合“单一职责原则”，决定使用哪一种算法的逻辑和该算法本身混合在一起，从而不可能再独立演化；而且使用继承无法实现算法或行为在程序运行时的动态切换。</li>
<li>使用策略模式可以避免多重条件选择语句。多重条件选择语句不易维护，它把采取哪一种算法或行为的逻辑与算法或行为本身的实现逻辑混合在一起，将它们全部硬编码在一个庞大的多重条件选择语句中，比直接继承环境类的办法还要原始和落后。</li>
<li>提供了一种算法的复用机制，由于将算法单独提取出来封装在策略类中，因此不同的环境类可以方便地复用这些策略类。</li>
</ul>
<h2 class="heading" data-id="heading-24">缺点</h2>
<ul>
<li>客户端必须知道所有的策略类，并自行决定使用哪一个策略类。这就意味着客户端必须理解这些算法的区别，以便适时选择恰当的算法。换言之，策略模式只适用于客户端知道所有的算法或行为的情况。</li>
<li>策略模式将造成系统产生很多具体策略类，任何细小的变化都将导致系统要增加一个新的具体策略类。</li>
<li>无法同时在客户端使用多个策略类，也就是说，在使用策略模式时，客户端每次只能使用一个策略类，不支持使用一个策略类完成部分功能后再使用另一个策略类来完成剩余功能的情况。</li>
</ul>
<h2 class="heading" data-id="heading-25">相关模式</h2>
<ul>
<li>享元: 策略对象经常是很好的轻量级对象。</li>
</ul>
<h1 class="heading" data-id="heading-26">Template Method（模板方法）</h1>
<h2 class="heading" data-id="heading-27">意图</h2>
<blockquote>
<p>定义一个操作中的算法的骨架，而将一些步骤延迟到子类中。模板方法使得子类可以不改变一个算法的结构即可重定义该算法的某些特定步骤。</p>
</blockquote>
<h2 class="heading" data-id="heading-28">结构</h2>
<p>模板方法包含以下角色：</p>
<ul>
<li>AbstractClass（抽象类）：在抽象类中定义了一系列基本操作(PrimitiveOperations)，这些基本操作可以是具体的，也可以是抽象的，每一个基本操作对应算法的一个步骤，在其子类中可以重定义或实现这些步骤。同时，在抽象类中实现了一个模板方法(Template Method)，用于定义一个算法的框架，模板方法不仅可以调用在抽象类中实现的基本方法，也可以调用在抽象类的子类中实现的基本方法，还可以调用其他对象中的方法。</li>
<li>ConcreteClass（具体子类）：它是抽象类的子类，用于实现在父类中声明的抽象基本操作以完成子类特定算法的步骤，也可以覆盖在父类中已经实现的具体基本操作。</li>
</ul>
<p></p><figure><img class="lazyload inited loaded" data-src="https://user-gold-cdn.xitu.io/2018/2/4/161615cc7bbfad93?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" data-width="1082" data-height="922" src="./Typescript玩转设计模式 之 对象行为型模式（下） - 掘金_files/161615cc7bbfad93"><figcaption></figcaption></figure><p></p>
<h2 class="heading" data-id="heading-29">示例</h2>
<p>模板方法是基于继承的一种模式。</p>
<p>下面是一个组件渲染的例子，模拟React组件渲染流程。</p>
<pre><code class="hljs bash copyable" lang="bash">// 组件基类
class Component {
  // 模板方法，把组件渲染的流程定义好
  <span class="hljs-function"><span class="hljs-title">setup</span></span>() {
    this.componentWillMount();
    this.doRender();
    this.componentDidMount();
  }
  private <span class="hljs-function"><span class="hljs-title">doRender</span></span>() {
    // 做实际的渲染工作
  }
  <span class="hljs-function"><span class="hljs-title">componentWillMount</span></span>() {}
  <span class="hljs-function"><span class="hljs-title">componentDidMount</span></span>() {}
}

class ComponentA extends Component {
  <span class="hljs-function"><span class="hljs-title">componentWillMount</span></span>() {
    console.log(<span class="hljs-string">'A组件即将被渲染'</span>);
  }
  <span class="hljs-function"><span class="hljs-title">componentDidMount</span></span>() {
    console.log(<span class="hljs-string">'A组件渲染完成'</span>);
  }
}

class ComponentB extends Component {
  <span class="hljs-function"><span class="hljs-title">componentWillMount</span></span>() {
    console.log(<span class="hljs-string">'B组件即将被渲染'</span>);
  }
  <span class="hljs-function"><span class="hljs-title">componentDidMount</span></span>() {
    console.log(<span class="hljs-string">'B组件渲染完成'</span>);
  }
}

// 渲染A和B组件，生命周期的流程都是相同的，已经在模板方法里定义好了的
<span class="hljs-keyword">function</span> <span class="hljs-function"><span class="hljs-title">templateMethodDemo</span></span>() {
  const compA = new ComponentA();
  compA.setup();

  const compB = new ComponentB();
  compB.setup();
}
<span class="copy-code-btn">复制代码</span></code></pre><h2 class="heading" data-id="heading-30">适用场景</h2>
<ul>
<li>需要控制流程的逻辑顺序时。模板方法模式广泛应用于框架设计中，以确保通过父类来控制处理流程的逻辑顺序（如框架的初始化，测试流程的设置等）</li>
</ul>
<h2 class="heading" data-id="heading-31">优点</h2>
<ul>
<li>在父类中形式化地定义一个算法，而由它的子类来实现细节的处理，在子类实现详细的处理算法时并不会改变算法中步骤的执行次序。</li>
<li>模板方法模式是一种代码复用技术，它在类库设计中尤为重要，它提取了类库中的公共行为，将公共行为放在父类中，而通过其子类来实现不同的行为，它鼓励我们恰当使用继承来实现代码复用。</li>
<li>可实现一种反向控制结构，通过子类覆盖父类的钩子方法来决定某一特定步骤是否需要执行。</li>
<li>在模板方法模式中可以通过子类来覆盖父类的基本方法，不同的子类可以提供基本方法的不同实现，更换和增加新的子类很方便，符合单一职责原则和开闭原则。</li>
</ul>
<h2 class="heading" data-id="heading-32">缺点</h2>
<ul>
<li>需要为每一个基本方法的不同实现提供一个子类，如果父类中可变的基本方法太多，将会导致类的个数增加，系统更加庞大，设计也更加抽象，此时，可结合桥接模式来进行设计。</li>
</ul>
<h2 class="heading" data-id="heading-33">相关模式</h2>
<ul>
<li>工厂方法: 常被模板方法调用。</li>
<li>策略模式：模板方法使用继承来改变算法的一部分。策略模式使用委托来改变整个算法。</li>
</ul>
<h1 class="heading" data-id="heading-34">访问者模式</h1>
<h2 class="heading" data-id="heading-35">意图</h2>
<blockquote>
<p>提供一个作用于某对象结构中的各元素的操作表示，它使我们可以在不改变各元素的类的前提下定义作用于这些元素的新操作。</p>
</blockquote>
<h2 class="heading" data-id="heading-36">结构</h2>
<p>访问者模式包含以下角色：</p>
<ul>
<li>Vistor（抽象访问者）：抽象访问者为对象结构中每一个具体元素类ConcreteElement声明一个访问操作，从这个操作的名称或参数类型可以清楚知道需要访问的具体元素的类型，具体访问者需要实现这些操作方法，定义对这些元素的访问操作。</li>
<li>ConcreteVisitor（具体访问者）：具体访问者实现了每个由抽象访问者声明的操作，每一个操作用于访问对象结构中一种类型的元素。</li>
<li>Element（抽象元素）：抽象元素一般是抽象类或者接口，它定义一个accept()方法，该方法通常以一个抽象访问者作为参数。【稍后将介绍为什么要这样设计。】</li>
<li>ConcreteElement（具体元素）：具体元素实现了accept()方法，在accept()方法中调用访问者的访问方法以便完成对一个元素的操作。</li>
<li>ObjectStructure（对象结构）：对象结构是一个元素的集合，它用于存放元素对象，并且提供了遍历其内部元素的方法。它可以结合组合模式来实现，也可以是一个简单的集合对象，如一个List对象或一个Set对象。</li>
</ul>
<p></p><figure><img class="lazyload inited loaded" data-src="https://user-gold-cdn.xitu.io/2018/2/4/161615cfc3167906?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" data-width="1280" data-height="1008" src="./Typescript玩转设计模式 之 对象行为型模式（下） - 掘金_files/161615cfc3167906"><figcaption></figcaption></figure><p></p>
<h2 class="heading" data-id="heading-37">示例</h2>
<p>一个公司有两种员工，正式工和临时工，他们有不同的工时和薪酬结算方法。</p>
<pre><code class="hljs bash copyable" lang="bash">  // 员工接口
  interface Employee {
    accept(handler: Department): void;
  }

  // 全职员工类
  class FulltimeEmployee implements Employee {
    private name = <span class="hljs-string">''</span>;
    // 全职员工按周薪计算薪酬
    private weeklyWage = 0;
    // 工作时长
    private workTime = 0;
    constructor(name: string, weeklyWage: number, workTime: number) {
      this.name = name;
      this.weeklyWage = weeklyWage;
      this.workTime = workTime;
    }
    getName(): string {
      <span class="hljs-built_in">return</span> this.name;
    }
    getWeeklyWage(): number {
      <span class="hljs-built_in">return</span> this.weeklyWage;
    }
    getWorkTime(): number {
      <span class="hljs-built_in">return</span> this.workTime;
    }
    // 实现接口，调用访问者处理全职员工的方法
    accept(handler: Department) {
      handler.visitFulltime(this);
    }
  }

  // 临时员工类
  class ParttimeEmployee implements Employee {
    private name = <span class="hljs-string">''</span>;
    // 临时员工按时薪计算薪酬
    private hourWage = 0;
    // 工作时长
    private workTime = 0;
    constructor(name: string, hourWage: number, workTime: number) {
      this.name = name;
      this.hourWage = hourWage;
      this.workTime = workTime;
    }
    getName(): string {
      <span class="hljs-built_in">return</span> this.name;
    }
    getHourWage(): number {
      <span class="hljs-built_in">return</span> this.hourWage;
    }
    getWorkTime(): number {
      <span class="hljs-built_in">return</span> this.workTime;
    }
    // 实现接口，调用访问者处理临时工的方法
    accept(handler: Department) {
      handler.visitParttime(this);
    }
  }

  // 部门接口
  interface Department {
    visitFulltime(employee: FulltimeEmployee): void;
    visitParttime(employee: ParttimeEmployee): void;
  }

  // 具体访问者——财务部，结算薪酬实现部门接口
  class FADepartment implements Department {
    // 全职员工薪酬计算方式
    visitFulltime(employee: FulltimeEmployee) {
      const name: string = employee.getName();
      <span class="hljs-built_in">let</span> workTime: number = employee.getWorkTime();
      <span class="hljs-built_in">let</span> weekWage: number = employee.getWeeklyWage();
      const WEEK_WORK_TIME = 40;
      <span class="hljs-keyword">if</span> (workTime &gt; WEEK_WORK_TIME) {
        // 计算加班工资
        const OVER_TIME_WAGE = 100;
        weekWage = weekWage + (workTime - WEEK_WORK_TIME) * OVER_TIME_WAGE;
      } <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (workTime &lt; WEEK_WORK_TIME) {
        <span class="hljs-keyword">if</span> (workTime &lt; 0) {
          workTime = 0;
        }
        // 扣款
        const CUT_PAYMENT = 80;
        weekWage = weekWage - (WEEK_WORK_TIME - workTime) * CUT_PAYMENT;
      }
      console.log(`正式员工 <span class="hljs-variable">${name}</span> 实际工资为：<span class="hljs-variable">${weekWage}</span>`);
    }
    // 临时工薪酬计算方式
    visitParttime(employee: ParttimeEmployee) {
      const name = employee.getName();
      const hourWage = employee.getHourWage();
      const workTime = employee.getWorkTime();
      console.log(`临时工 <span class="hljs-variable">${name}</span> 实际工资为：<span class="hljs-variable">${hourWage * workTime}</span>`);
    }
  }

  // 具体访问者——人力资源部，结算工作时间，实现部门接口
  class HRDepartment implements Department {
    // 全职员工工作时间报告
    visitFulltime(employee: FulltimeEmployee) {
      const name: string = employee.getName();
      <span class="hljs-built_in">let</span> workTime: number = employee.getWorkTime();
      // 实际工作时间报告
      <span class="hljs-built_in">let</span> report = `正式员工 <span class="hljs-variable">${name}</span> 实际工作时间为 <span class="hljs-variable">${workTime}</span> 小时`;
      const WEEK_WORK_TIME = 40;
      <span class="hljs-keyword">if</span> (workTime &gt; WEEK_WORK_TIME) {
        // 加班时间报告
        report = `<span class="hljs-variable">${report}</span>，加班 <span class="hljs-variable">${WEEK_WORK_TIME - workTime}</span> 小时`;
      } <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (workTime &lt; WEEK_WORK_TIME) {
        <span class="hljs-keyword">if</span> (workTime &lt; 0) {
          workTime = 0;
        }
        // 请假时间报告
        report = `<span class="hljs-variable">${report}</span>，请假 <span class="hljs-variable">${WEEK_WORK_TIME - workTime}</span> 小时`;
      }
      console.log(report);
    }
    // 临时工工作时间报告
    visitParttime(employee: ParttimeEmployee) {
      const name: string = employee.getName();
      const workTime: number = employee.getWorkTime();
      console.log(`临时工 <span class="hljs-variable">${name}</span> 实际工作时间为 <span class="hljs-variable">${workTime}</span> 小时`);
    }
  }

  // 员工集合类
  class EmployeeList {
    list: Array&lt;Employee&gt; = [];
    add(employee: Employee) {
      this.list.push(employee);
    }
    // 遍历员工集合中的每一个对象
    accept(handler: Department) {
      this.list.forEach((employee: Employee) =&gt; {
        employee.accept(handler);
      });
    }
  }

  <span class="hljs-keyword">function</span> <span class="hljs-function"><span class="hljs-title">visitorDemo</span></span>() {
    const list: EmployeeList = new EmployeeList();
    const full1 = new FulltimeEmployee(<span class="hljs-string">'Bob'</span>, 3000, 45);
    const full2 = new FulltimeEmployee(<span class="hljs-string">'Mikel'</span>, 2000, 35);
    const full3 = new FulltimeEmployee(<span class="hljs-string">'Joe'</span>, 4000, 40);
    const part1 = new ParttimeEmployee(<span class="hljs-string">'Lili'</span>, 80, 20);
    const part2 = new ParttimeEmployee(<span class="hljs-string">'Lucy'</span>, 60, 15);

    list.add(full1);
    list.add(full2);
    list.add(full3);
    list.add(part1);
    list.add(part2);

    // 财务部计算薪酬
    const faHandler = new FADepartment();
    list.accept(faHandler);

    // 人力资源部出工作报告
    const hrHandler = new HRDepartment();
    list.accept(hrHandler);
  }
<span class="copy-code-btn">复制代码</span></code></pre><h2 class="heading" data-id="heading-38">适用场景</h2>
<ul>
<li>一个对象结构包含多个类型的对象，希望对这些对象实施一些依赖其具体类型的操作。在访问者中针对每一种具体的类型都提供了一个访问操作，不同类型的对象可以有不同的访问操作。</li>
<li>需要对一个对象结构中的对象进行很多不同的并且不相关的操作，而需要避免让这些操作“污染”这些对象的类，也不希望在增加新操作时修改这些类。访问者模式使得我们可以将相关的访问操作集中起来定义在访问者类中，对象结构可以被多个不同的访问者类所使用，将对象本身与对象的访问操作分离。</li>
<li>对象结构中对象对应的类很少改变，但经常需要在此对象结构上定义新的操作。</li>
</ul>
<h2 class="heading" data-id="heading-39">优点</h2>
<ul>
<li>增加新的访问操作很方便。使用访问者模式，增加新的访问操作就意味着增加一个新的具体访问者类，实现简单，无须修改源代码，符合“开闭原则”。</li>
<li>将有关元素对象的访问行为集中到一个访问者对象中，而不是分散在一个个的元素类中。类的职责更加清晰，有利于对象结构中元素对象的复用，相同的对象结构可以供多个不同的访问者访问。</li>
<li>让用户能够在不修改现有元素类层次结构的情况下，定义作用于该层次结构的操作。</li>
</ul>
<h2 class="heading" data-id="heading-40">缺点</h2>
<ul>
<li>增加新的元素类很困难。在访问者模式中，每增加一个新的元素类都意味着要在抽象访问者角色中增加一个新的抽象操作，并在每一个具体访问者类中增加相应的具体操作，这违背了“开闭原则”的要求。</li>
<li>破坏封装。访问者模式要求访问者对象访问并调用每一个元素对象的操作，这意味着元素对象有时候必须暴露一些自己的内部操作和内部状态，否则无法供访问者访问。</li>
</ul>
<h2 class="heading" data-id="heading-41">相关模式</h2>
<ul>
<li>组合模式：访问者可以用于对一个由组合模式定义的对象结构进行操作；</li>
</ul>
<h1 class="heading" data-id="heading-42">参考文档</h1>
<ul>
<li><a target="_blank" href="https://quanke.gitbooks.io/design-pattern-java/%E5%AF%B9%E8%B1%A1%E9%97%B4%E7%9A%84%E8%81%94%E5%8A%A8%E2%80%94%E2%80%94%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F%EF%BC%88%E4%BA%8C%EF%BC%89.html" rel="nofollow noopener noreferrer">对象间的联动——观察者模式</a></li>
<li><a target="_blank" href="https://quanke.gitbooks.io/design-pattern-java/%E5%A4%84%E7%90%86%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%A4%9A%E7%A7%8D%E7%8A%B6%E6%80%81%E5%8F%8A%E5%85%B6%E7%9B%B8%E4%BA%92%E8%BD%AC%E6%8D%A2%E2%80%94%E2%80%94%E7%8A%B6%E6%80%81%E6%A8%A1%E5%BC%8F%EF%BC%88%E4%B8%89%EF%BC%89.html" rel="nofollow noopener noreferrer">处理对象的多种状态及其相互转换——状态模式</a></li>
<li><a target="_blank" href="https://quanke.gitbooks.io/design-pattern-java/%E7%AE%97%E6%B3%95%E7%9A%84%E5%B0%81%E8%A3%85%E4%B8%8E%E5%88%87%E6%8D%A2%E2%80%94%E2%80%94%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F%EF%BC%88%E5%9B%9B%EF%BC%89.html" rel="nofollow noopener noreferrer">算法的封装与切换——策略模式</a></li>
<li><a target="_blank" href="https://quanke.gitbooks.io/design-pattern-java/%E6%A8%A1%E6%9D%BF%E6%96%B9%E6%B3%95%E6%A8%A1%E5%BC%8F%E6%B7%B1%E5%BA%A6%E8%A7%A3%E6%9E%90%EF%BC%88%E4%B8%89%EF%BC%89.html" rel="nofollow noopener noreferrer">模板方法模式深度解析</a></li>
<li><a target="_blank" href="https://quanke.gitbooks.io/design-pattern-java/%E6%93%8D%E4%BD%9C%E5%A4%8D%E6%9D%82%E5%AF%B9%E8%B1%A1%E7%BB%93%E6%9E%84%E2%80%94%E2%80%94%E8%AE%BF%E9%97%AE%E8%80%85%E6%A8%A1%E5%BC%8F%EF%BC%88%E5%9B%9B%EF%BC%89.html" rel="nofollow noopener noreferrer">操作复杂对象结构——访问者模式</a></li>
</ul>
<blockquote>
<p>本文介绍了最后5种对象行为型模式，多谢大家对于系列文章的支持~对团队感兴趣的同学可以关注专栏或者发送简历至'tao.qit####alibaba-inc.com'.replace('####', '@')，欢迎有志之士加入~</p>
</blockquote>
<p>原文地址：<a target="_blank" href="https://github.com/ProtoTeam/blog/blob/master/201802/2.md" rel="nofollow noopener noreferrer">github.com/ProtoTeam/b…</a></p>
</div></article><div data-v-50ff96fb="" data-v-0f848c07="" class="tag-list-box"><div data-v-50ff96fb="" data-v-0f848c07="" class="tag-list-title">关注下面的标签，发现更多相似文章</div><div data-v-50ff96fb="" data-v-0f848c07="" st:block="tagList" class="tag-list"><a data-v-50ff96fb="" href="https://juejin.im/tag/%E5%89%8D%E7%AB%AF" target="_blank" rel="" st:name="tag" class="item" data-v-0f848c07=""><div data-v-261e638e="" data-v-a98f170a="" data-v-50ff96fb="" data-src="https://lc-gold-cdn.xitu.io/bac28828a49181c34110.png?imageView2/2/w/42/h/42/q/85/format/webp/interlace/1" class="lazy thumb tag-icon" style="background-image: none; background-size: contain;"></div><div data-v-50ff96fb="" class="tag-title">前端</div></a><a data-v-50ff96fb="" href="https://juejin.im/tag/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F" target="_blank" rel="" st:name="tag" class="item" data-v-0f848c07=""><div data-v-261e638e="" data-v-a98f170a="" data-v-50ff96fb="" data-src="https://lc-gold-cdn.xitu.io/95e6729d56b35272b0d6.png?imageView2/2/w/42/h/42/q/85/format/webp/interlace/1" class="lazy thumb tag-icon" style="background-image: none; background-size: contain;"></div><div data-v-50ff96fb="" class="tag-title">设计模式</div></a><a data-v-50ff96fb="" href="https://juejin.im/tag/TypeScript" target="_blank" rel="" st:name="tag" class="item" data-v-0f848c07=""><div data-v-261e638e="" data-v-a98f170a="" data-v-50ff96fb="" data-src="https://lc-gold-cdn.xitu.io/d788a559489fa6e30b25.png?imageView2/2/w/42/h/42/q/85/format/webp/interlace/1" class="lazy thumb tag-icon" style="background-image: none; background-size: contain;"></div><div data-v-50ff96fb="" class="tag-title">TypeScript</div></a></div></div><a data-v-50ff96fb="" href="https://juejin.im/user/59659aff5188250cf956e6dd" target="_blank" rel="" data-v-0f848c07=""><div data-v-50ff96fb="" class="footer-author-block"><div data-v-95a5e9b8="" data-v-50ff96fb="" itemscope="itemscope" itemtype="http://schema.org/Person" class="author"><meta itemprop="url" content="https://juejin.im/user/59659aff5188250cf956e6dd"><meta itemprop="image" content="https://user-gold-cdn.xitu.io/2017/9/7/217d533ac647f900de33fcd6f7d64c64"><meta itemprop="name" content="蚂蚁金服数据体验技术"><meta itemprop="jobTitle" content="数据体验技术团队（ProtoTeam）"><div itemprop="memberOf" itemscope="itemscope" itemtype="http://schema.org/Organization"><meta itemprop="name" content=" 蚂蚁金服（杭州）网络技术有限公司"></div><div data-v-95a5e9b8="" class="author-info-block"><a data-v-95a5e9b8="" href="https://juejin.im/user/59659aff5188250cf956e6dd" target="_blank" rel="" class="avatar-link"><div data-v-261e638e="" data-v-b49070bc="" data-v-95a5e9b8="" data-src="https://user-gold-cdn.xitu.io/2017/9/7/217d533ac647f900de33fcd6f7d64c64?imageView2/1/w/100/h/100/q/85/format/webp/interlace/1" class="lazy avatar avatar" style="background-image: none;"></div></a><div data-v-95a5e9b8="" class="author-info-box"><div data-v-95a5e9b8="" class="profile-box"><a data-v-1a54813b="" data-v-95a5e9b8="" href="https://juejin.im/user/59659aff5188250cf956e6dd" target="_blank" rel="" class="username username ellipsis">蚂蚁金服数据体验技术<a data-v-3a430c94="" data-v-1a54813b="" href="https://juejin.im/book/5c90640c5188252d7941f5bb/section/5c9065385188252da6320022" target="_blank" rel="" class="rank"><img data-v-3a430c94="" src="./Typescript玩转设计模式 之 对象行为型模式（下） - 掘金_files/lv-6.74bd93a.svg" alt="lv-6"></a></a><span data-v-95a5e9b8="" class="position ellipsis">数据体验技术团队（ProtoTeam） @  蚂蚁金服（杭州）网络技术有限公司</span></div><div data-v-95a5e9b8="" class="meta-box"><a data-v-95a5e9b8="" href="https://juejin.im/user/59659aff5188250cf956e6dd/posts" target="_blank" rel="" class="posts"><span data-v-95a5e9b8="" class="count post-count">发布了 49 篇专栏 · </span></a><span data-v-95a5e9b8="" class="count">获得点赞 17,019 · </span><span data-v-95a5e9b8="" class="count">获得阅读 475,946</span></div></div><button data-v-d05fee10="" data-v-95a5e9b8="" class="follow-button follow">关注</button></div></div></div></a><div data-v-50ff96fb="" data-v-0f848c07="" st:block="banner" class="article-banner"><a data-v-50ff96fb="" data-v-0f848c07="" st:name="link" st:state="https://juejin.im/extension/?utm_source=juejin.im&amp;utm_medium=post&amp;utm_campaign=extension_promotion" class="banner-title" href="https://juejin.im/extension/?utm_source=juejin.im&amp;utm_medium=post&amp;utm_campaign=extension_promotion" target="_blank">安装掘金浏览器插件</a><div data-v-50ff96fb="" data-v-0f848c07="" class="banner-content">打开新标签页发现好内容，掘金、GitHub、Dribbble、ProductHunt 等站点内容轻松获取。快来安装掘金浏览器插件获取高质量内容吧！</div></div><!----><!----><div data-v-43803909="" data-v-50ff96fb="" class="comment-list-box" id="comment-box" data-v-0f848c07=""><div data-v-43803909="" class="title">评论</div><div data-v-bc5a7668="" data-v-43803909="" class="comment-form comment-form"><div data-v-bc5a7668="" class="avatar-box"><div data-v-261e638e="" data-v-b49070bc="" data-v-bc5a7668="" data-src="https://b-gold-cdn.xitu.io/v3/static/img/default-avatar.e30559a.svg" class="lazy avatar avatar" style="background-image: none;"></div></div><div data-v-bc5a7668="" class="form-box"><div data-v-bc5a7668="" class="input-box"><div data-v-e4402004="" data-v-bc5a7668="" class="auth-card"><!----><div data-v-bc5a7668="" data-v-e4402004="" contenteditable="true" spellcheck="false" placeholder="输入评论..." class="rich-input empty"><br data-v-bc5a7668="" data-v-e4402004=""></div></div><!----></div><!----></div><input data-v-bc5a7668="" type="file" class="hidden"></div><div data-v-7c7d1c40="" data-v-43803909="" class="comment-list comment-list"><div data-v-ddb41540="" data-v-7c7d1c40="" class="image-viewer-box"><!----></div><div data-v-7c7d1c40="" class="item"><div data-v-6aebcf4a="" data-v-7c7d1c40="" class="comment comment"><div data-v-2bc7e294="" data-v-6aebcf4a="" st:block="userPopover" st:state="57f896770e3dd90057b5ccab" class="user-popover-box popover"><!----><a data-v-6aebcf4a="" href="https://juejin.im/user/57f896770e3dd90057b5ccab" target="_blank" rel="" class="user-link" data-v-2bc7e294=""><div data-v-261e638e="" data-v-b49070bc="" data-v-6aebcf4a="" data-src="https://mirror-gold-cdn.xitu.io/168e08341d843c265d6?imageView2/1/w/100/h/100/q/85/format/webp/interlace/1" class="lazy avatar avatar" style="background-image: none;"></div></a></div><div data-v-6aebcf4a="" class="content-box comment-divider-line"><div data-v-6aebcf4a="" class="meta-box"><div data-v-2bc7e294="" data-v-6aebcf4a="" st:block="userPopover" st:state="57f896770e3dd90057b5ccab" class="user-popover-box"><!----><a data-v-1a54813b="" data-v-6aebcf4a="" href="https://juejin.im/user/57f896770e3dd90057b5ccab" target="_blank" rel="" class="username username ellipsis" data-v-2bc7e294="">BryanYang<!----></a></div><div data-v-6aebcf4a="" class="position"></div></div><div data-v-6aebcf4a="" class="content">用面相对象的思路写js真的值得么</div><div data-v-6aebcf4a="" class="limit-ctl-box"><!----><!----></div><!----><div data-v-6aebcf4a="" class="reply-stat"><time data-v-6aebcf4a="" datetime="2018-02-05T23:55:16.945Z" title="Tue Feb 06 2018 07:55:16 GMT+0800 (中国标准时间)" class="time">2年前</time><div data-v-6aebcf4a="" class="delete"> &nbsp;·&nbsp;删除</div><div data-v-6aebcf4a="" class="action-box"><div data-v-6aebcf4a="" class="like-action action"><svg data-v-6aebcf4a="" aria-hidden="true" width="16" height="16" viewBox="0 0 20 20" class="icon like-icon"><g data-v-6aebcf4a="" fill="none" fill-rule="evenodd"><path data-v-6aebcf4a="" d="M0 0h20v20H0z"></path> <path data-v-6aebcf4a="" stroke="#8A93A0" stroke-linejoin="round" d="M4.58 8.25V17h-1.4C2.53 17 2 16.382 2 15.624V9.735c0-.79.552-1.485 1.18-1.485h1.4zM11.322 2c1.011.019 1.614.833 1.823 1.235.382.735.392 1.946.13 2.724-.236.704-.785 1.629-.785 1.629h4.11c.434 0 .838.206 1.107.563.273.365.363.84.24 1.272l-1.86 6.513A1.425 1.425 0 0 1 14.724 17H6.645V7.898C8.502 7.51 9.643 4.59 9.852 3.249A1.47 1.47 0 0 1 11.322 2z"></path></g></svg><!----></div><div data-v-6aebcf4a="" class="comment-action action"><svg data-v-6aebcf4a="" aria-hidden="true" width="16" height="16" viewBox="0 0 20 20" class="icon comment-icon"><g data-v-6aebcf4a="" fill="none" fill-rule="evenodd"><path data-v-6aebcf4a="" d="M0 0h20v20H0z"></path> <path data-v-6aebcf4a="" stroke="#8A93A0" stroke-linejoin="round" d="M10 17c-4.142 0-7.5-2.91-7.5-6.5S5.858 4 10 4c4.142 0 7.5 2.91 7.5 6.5 0 1.416-.522 2.726-1.41 3.794-.129.156.41 3.206.41 3.206l-3.265-1.134c-.998.369-2.077.634-3.235.634z"></path></g></svg> <span data-v-6aebcf4a="" class="action-title">回复</span></div></div></div><!----><div data-v-18f279d9="" data-v-6aebcf4a="" class="sub-comment-list sub-comment-list"><!----></div></div><!----></div></div><div data-v-7c7d1c40="" class="item"><div data-v-6aebcf4a="" data-v-7c7d1c40="" class="comment comment"><div data-v-2bc7e294="" data-v-6aebcf4a="" st:block="userPopover" st:state="595b44d6f265da6c3d6c2276" class="user-popover-box popover"><!----><a data-v-6aebcf4a="" href="https://juejin.im/user/595b44d6f265da6c3d6c2276" target="_blank" rel="" class="user-link" data-v-2bc7e294=""><div data-v-261e638e="" data-v-b49070bc="" data-v-6aebcf4a="" data-src="https://user-gold-cdn.xitu.io/2019/5/26/16af2cc07faf13da?imageView2/1/w/100/h/100/q/85/format/webp/interlace/1" class="lazy avatar avatar" style="background-image: none;"></div></a></div><div data-v-6aebcf4a="" class="content-box comment-divider-line"><div data-v-6aebcf4a="" class="meta-box"><div data-v-2bc7e294="" data-v-6aebcf4a="" st:block="userPopover" st:state="595b44d6f265da6c3d6c2276" class="user-popover-box"><!----><a data-v-1a54813b="" data-v-6aebcf4a="" href="https://juejin.im/user/595b44d6f265da6c3d6c2276" target="_blank" rel="" class="username username ellipsis" data-v-2bc7e294="">de1ck<!----></a></div><div data-v-6aebcf4a="" class="position">前端@深圳</div></div><div data-v-6aebcf4a="" class="content">最近规划学习ts，拜读文章后，受益良多。<img class="emoji" draggable="false" alt="👍" src="./Typescript玩转设计模式 之 对象行为型模式（下） - 掘金_files/1f44d.svg"></div><div data-v-6aebcf4a="" class="limit-ctl-box"><!----><!----></div><!----><div data-v-6aebcf4a="" class="reply-stat"><time data-v-6aebcf4a="" datetime="2018-02-05T16:01:03.243Z" title="Tue Feb 06 2018 00:01:03 GMT+0800 (中国标准时间)" class="time">2年前</time><div data-v-6aebcf4a="" class="delete"> &nbsp;·&nbsp;删除</div><div data-v-6aebcf4a="" class="action-box"><div data-v-6aebcf4a="" class="like-action action"><svg data-v-6aebcf4a="" aria-hidden="true" width="16" height="16" viewBox="0 0 20 20" class="icon like-icon"><g data-v-6aebcf4a="" fill="none" fill-rule="evenodd"><path data-v-6aebcf4a="" d="M0 0h20v20H0z"></path> <path data-v-6aebcf4a="" stroke="#8A93A0" stroke-linejoin="round" d="M4.58 8.25V17h-1.4C2.53 17 2 16.382 2 15.624V9.735c0-.79.552-1.485 1.18-1.485h1.4zM11.322 2c1.011.019 1.614.833 1.823 1.235.382.735.392 1.946.13 2.724-.236.704-.785 1.629-.785 1.629h4.11c.434 0 .838.206 1.107.563.273.365.363.84.24 1.272l-1.86 6.513A1.425 1.425 0 0 1 14.724 17H6.645V7.898C8.502 7.51 9.643 4.59 9.852 3.249A1.47 1.47 0 0 1 11.322 2z"></path></g></svg><!----></div><div data-v-6aebcf4a="" class="comment-action action"><svg data-v-6aebcf4a="" aria-hidden="true" width="16" height="16" viewBox="0 0 20 20" class="icon comment-icon"><g data-v-6aebcf4a="" fill="none" fill-rule="evenodd"><path data-v-6aebcf4a="" d="M0 0h20v20H0z"></path> <path data-v-6aebcf4a="" stroke="#8A93A0" stroke-linejoin="round" d="M10 17c-4.142 0-7.5-2.91-7.5-6.5S5.858 4 10 4c4.142 0 7.5 2.91 7.5 6.5 0 1.416-.522 2.726-1.41 3.794-.129.156.41 3.206.41 3.206l-3.265-1.134c-.998.369-2.077.634-3.235.634z"></path></g></svg> <span data-v-6aebcf4a="" class="action-title">回复</span></div></div></div><!----><div data-v-18f279d9="" data-v-6aebcf4a="" class="sub-comment-list sub-comment-list"><!----></div></div><!----></div></div><div data-v-7c7d1c40="" class="item"><div data-v-6aebcf4a="" data-v-7c7d1c40="" class="comment comment"><div data-v-2bc7e294="" data-v-6aebcf4a="" st:block="userPopover" st:state="585f10fe1b69e6006cd600a6" class="user-popover-box popover"><!----><a data-v-6aebcf4a="" href="https://juejin.im/user/585f10fe1b69e6006cd600a6" target="_blank" rel="" class="user-link" data-v-2bc7e294=""><div data-v-261e638e="" data-v-b49070bc="" data-v-6aebcf4a="" data-src="https://user-gold-cdn.xitu.io/2019/3/19/16996238964b7a62?imageView2/1/w/100/h/100/q/85/format/webp/interlace/1" class="lazy avatar avatar" style="background-image: none;"></div></a></div><div data-v-6aebcf4a="" class="content-box comment-divider-line"><div data-v-6aebcf4a="" class="meta-box"><div data-v-2bc7e294="" data-v-6aebcf4a="" st:block="userPopover" st:state="585f10fe1b69e6006cd600a6" class="user-popover-box"><!----><a data-v-1a54813b="" data-v-6aebcf4a="" href="https://juejin.im/user/585f10fe1b69e6006cd600a6" target="_blank" rel="" class="username username ellipsis" data-v-2bc7e294="">野草<!----></a></div><div data-v-6aebcf4a="" class="position">前端工程师</div></div><div data-v-6aebcf4a="" class="content">状态模式很不错，学习了。不过Demo有点问题，balance &lt; -2000的时候，状态没有进行改变。比如
acc.deposit(100);  
acc.withdraw(4000);   
acc.withdraw(4000); 
的结果是不合理的。-</div><div data-v-6aebcf4a="" class="limit-ctl-box"><!----><!----></div><!----><div data-v-6aebcf4a="" class="reply-stat"><time data-v-6aebcf4a="" datetime="2018-02-05T03:39:53.768Z" title="Mon Feb 05 2018 11:39:53 GMT+0800 (中国标准时间)" class="time">2年前</time><div data-v-6aebcf4a="" class="delete"> &nbsp;·&nbsp;删除</div><div data-v-6aebcf4a="" class="action-box"><div data-v-6aebcf4a="" class="like-action action"><svg data-v-6aebcf4a="" aria-hidden="true" width="16" height="16" viewBox="0 0 20 20" class="icon like-icon"><g data-v-6aebcf4a="" fill="none" fill-rule="evenodd"><path data-v-6aebcf4a="" d="M0 0h20v20H0z"></path> <path data-v-6aebcf4a="" stroke="#8A93A0" stroke-linejoin="round" d="M4.58 8.25V17h-1.4C2.53 17 2 16.382 2 15.624V9.735c0-.79.552-1.485 1.18-1.485h1.4zM11.322 2c1.011.019 1.614.833 1.823 1.235.382.735.392 1.946.13 2.724-.236.704-.785 1.629-.785 1.629h4.11c.434 0 .838.206 1.107.563.273.365.363.84.24 1.272l-1.86 6.513A1.425 1.425 0 0 1 14.724 17H6.645V7.898C8.502 7.51 9.643 4.59 9.852 3.249A1.47 1.47 0 0 1 11.322 2z"></path></g></svg><!----></div><div data-v-6aebcf4a="" class="comment-action action"><svg data-v-6aebcf4a="" aria-hidden="true" width="16" height="16" viewBox="0 0 20 20" class="icon comment-icon"><g data-v-6aebcf4a="" fill="none" fill-rule="evenodd"><path data-v-6aebcf4a="" d="M0 0h20v20H0z"></path> <path data-v-6aebcf4a="" stroke="#8A93A0" stroke-linejoin="round" d="M10 17c-4.142 0-7.5-2.91-7.5-6.5S5.858 4 10 4c4.142 0 7.5 2.91 7.5 6.5 0 1.416-.522 2.726-1.41 3.794-.129.156.41 3.206.41 3.206l-3.265-1.134c-.998.369-2.077.634-3.235.634z"></path></g></svg> <span data-v-6aebcf4a="" class="action-title">回复</span></div></div></div><!----><div data-v-18f279d9="" data-v-6aebcf4a="" class="sub-comment-list sub-comment-list"><!----></div></div><!----></div></div><div data-v-7c7d1c40="" class="item"><div data-v-6aebcf4a="" data-v-7c7d1c40="" class="comment comment"><div data-v-2bc7e294="" data-v-6aebcf4a="" st:block="userPopover" st:state="585f10fe1b69e6006cd600a6" class="user-popover-box popover"><!----><a data-v-6aebcf4a="" href="https://juejin.im/user/585f10fe1b69e6006cd600a6" target="_blank" rel="" class="user-link" data-v-2bc7e294=""><div data-v-261e638e="" data-v-b49070bc="" data-v-6aebcf4a="" data-src="https://user-gold-cdn.xitu.io/2019/3/19/16996238964b7a62?imageView2/1/w/100/h/100/q/85/format/webp/interlace/1" class="lazy avatar avatar" style="background-image: none;"></div></a></div><div data-v-6aebcf4a="" class="content-box comment-divider-line"><div data-v-6aebcf4a="" class="meta-box"><div data-v-2bc7e294="" data-v-6aebcf4a="" st:block="userPopover" st:state="585f10fe1b69e6006cd600a6" class="user-popover-box"><!----><a data-v-1a54813b="" data-v-6aebcf4a="" href="https://juejin.im/user/585f10fe1b69e6006cd600a6" target="_blank" rel="" class="username username ellipsis" data-v-2bc7e294="">野草<!----></a></div><div data-v-6aebcf4a="" class="position">前端工程师</div></div><div data-v-6aebcf4a="" class="content">观察者模式的缺点能举个具体的例子吗？我感觉Subject对象提供给Observer的方法应该是有所考虑的吧，不会一个操作就乱了全部。</div><div data-v-6aebcf4a="" class="limit-ctl-box"><!----><!----></div><!----><div data-v-6aebcf4a="" class="reply-stat"><time data-v-6aebcf4a="" datetime="2018-02-05T03:37:41.635Z" title="Mon Feb 05 2018 11:37:41 GMT+0800 (中国标准时间)" class="time">2年前</time><div data-v-6aebcf4a="" class="delete"> &nbsp;·&nbsp;删除</div><div data-v-6aebcf4a="" class="action-box"><div data-v-6aebcf4a="" class="like-action action"><svg data-v-6aebcf4a="" aria-hidden="true" width="16" height="16" viewBox="0 0 20 20" class="icon like-icon"><g data-v-6aebcf4a="" fill="none" fill-rule="evenodd"><path data-v-6aebcf4a="" d="M0 0h20v20H0z"></path> <path data-v-6aebcf4a="" stroke="#8A93A0" stroke-linejoin="round" d="M4.58 8.25V17h-1.4C2.53 17 2 16.382 2 15.624V9.735c0-.79.552-1.485 1.18-1.485h1.4zM11.322 2c1.011.019 1.614.833 1.823 1.235.382.735.392 1.946.13 2.724-.236.704-.785 1.629-.785 1.629h4.11c.434 0 .838.206 1.107.563.273.365.363.84.24 1.272l-1.86 6.513A1.425 1.425 0 0 1 14.724 17H6.645V7.898C8.502 7.51 9.643 4.59 9.852 3.249A1.47 1.47 0 0 1 11.322 2z"></path></g></svg><!----></div><div data-v-6aebcf4a="" class="comment-action action"><svg data-v-6aebcf4a="" aria-hidden="true" width="16" height="16" viewBox="0 0 20 20" class="icon comment-icon"><g data-v-6aebcf4a="" fill="none" fill-rule="evenodd"><path data-v-6aebcf4a="" d="M0 0h20v20H0z"></path> <path data-v-6aebcf4a="" stroke="#8A93A0" stroke-linejoin="round" d="M10 17c-4.142 0-7.5-2.91-7.5-6.5S5.858 4 10 4c4.142 0 7.5 2.91 7.5 6.5 0 1.416-.522 2.726-1.41 3.794-.129.156.41 3.206.41 3.206l-3.265-1.134c-.998.369-2.077.634-3.235.634z"></path></g></svg> <span data-v-6aebcf4a="" class="action-title">回复</span></div></div></div><!----><div data-v-18f279d9="" data-v-6aebcf4a="" class="sub-comment-list sub-comment-list"><!----></div></div><!----></div></div></div><!----></div></div><!----><div data-v-50ff96fb="" data-v-0f848c07="" st:block="recommended" class="main-area recommended-area shadow"><div data-v-50ff96fb="" data-v-0f848c07="" class="recommended-entry-list-title">相关推荐</div><!----><ul data-v-3ce073b0="" data-v-50ff96fb="" st:block="entryList" class="entry-list recommended-entry-list" data-v-0f848c07=""><!----><li data-v-3ce073b0="" data-growing-container="true" data-growing-title="entryList" class="item"><div data-v-392c77a2="" data-v-3ce073b0="" class="entry-box"><div data-v-6d34c71c="" data-v-392c77a2="" st:block="entry" st:state="5edb96365188254327535534|1" class="entry"><a data-v-6d34c71c="" href="https://juejin.im/post/5edb9156518825433b133ed0" target="_blank" rel="" st:name="link" class="entry-link"><div data-v-6d34c71c="" class="content-box"><div data-v-6d34c71c="" class="info-box"><div data-v-6d34c71c="" class="info-row meta-row"><ul data-v-6d34c71c="" class="meta-list"><!----><!----><li data-v-6d34c71c="" class="item post">专栏</li><li data-v-6d34c71c="" class="item username clickable"><div data-v-2bc7e294="" data-v-6d34c71c="" st:block="userPopover" st:state="5790c76dc4c9710054f0f58b" class="user-popover-box"><!----><a data-v-6d34c71c="" href="https://juejin.im/user/5790c76dc4c9710054f0f58b" target="_blank" rel="" st:name="user" st:state="5790c76dc4c9710054f0f58b" data-v-2bc7e294="">前端早早聊</a></div></li><li data-v-6d34c71c="" class="item">1天前</li><li data-v-6d34c71c="" class="item tag"><a data-v-6d34c71c="" href="https://juejin.im/tag/%E9%9D%A2%E8%AF%95" target="_blank" rel="" st:name="tag" st:state="55979fe6e4b08a686ce562fe" class="tag">面试</a><a data-v-6d34c71c="" href="https://juejin.im/tag/%E5%89%8D%E7%AB%AF" target="_blank" rel="" st:name="tag" st:state="5597a05ae4b08a686ce56f6f" class="tag">前端</a></li><!----></ul></div><div data-v-6d34c71c="" class="info-row title-row"><!----><!----><a data-v-6d34c71c="" href="https://juejin.im/post/5edb9156518825433b133ed0" target="_blank" rel="" st:name="title" class="title">进大厂连载 1/15：失败 4 次成功入职阿里巴巴</a></div><div data-v-6d34c71c="" class="info-row action-row"><ul data-v-6d34c71c="" class="action-list"><li data-v-6d34c71c="" st:name="likeBtn" class="item like clickable"><a data-v-6d34c71c="" class="title-box"><img data-v-6d34c71c="" src="./Typescript玩转设计模式 之 对象行为型模式（下） - 掘金_files/zan.e9d7698.svg" class="icon"><span data-v-6d34c71c="" class="count">76</span></a></li><li data-v-6d34c71c="" st:name="commentBtn" class="item comment clickable"><a data-v-6d34c71c="" href="https://juejin.im/post/5edb9156518825433b133ed0#comment" target="_blank" rel="" class="title-box"><img data-v-6d34c71c="" src="./Typescript玩转设计模式 之 对象行为型模式（下） - 掘金_files/comment.4d5744f.svg" class="icon"><span data-v-6d34c71c="" class="count">7</span></a></li><li data-v-6d34c71c="" st:name="shareBtn" title="分享" class="item share clickable hover"><img data-v-6d34c71c="" src="./Typescript玩转设计模式 之 对象行为型模式（下） - 掘金_files/share.1d55e69.svg" class="icon"><div data-v-6d34c71c="" class="share-panel"><div data-v-6d34c71c="" st:name="shareItem" st:state="weibo" class="share-item weibo"><img data-v-6d34c71c="" src="./Typescript玩转设计模式 之 对象行为型模式（下） - 掘金_files/weibo.8e2f5d6.svg" class="icon">微博</div><div data-v-6d34c71c="" st:name="shareItem" st:state="wechat" class="share-item wechat"><img data-v-6d34c71c="" src="./Typescript玩转设计模式 之 对象行为型模式（下） - 掘金_files/wechat.844402c.svg" class="icon">微信扫一扫<div data-v-6d34c71c="" class="qr-code-box"><img data-v-6d34c71c="" src="https://juejin.im/post/5a77211b6fb9a0635774d61a" class="qr-code"></div></div></div></li><li data-v-6d34c71c="" title="收藏" st:name="collectBtn" class="item collect clickable hover"><img data-v-6d34c71c="" src="./Typescript玩转设计模式 之 对象行为型模式（下） - 掘金_files/collect.02e2979.svg" class="icon"><!----></li><!----></ul></div></div><div data-v-261e638e="" data-v-a98f170a="" data-v-6d34c71c="" data-src="https://user-gold-cdn.xitu.io/2020/6/6/17289c26e7045711?imageView2/1/w/120/h/120/q/85/format/webp/interlace/1" class="lazy thumb thumb" style="background-image: none; background-size: cover;"></div></div></a></div></div></li><li data-v-3ce073b0="" data-growing-container="true" data-growing-title="entryList" class="item"><div data-v-392c77a2="" data-v-3ce073b0="" class="entry-box"><div data-v-6d34c71c="" data-v-392c77a2="" st:block="entry" st:state="5edb2f9451882543423435a4|2" class="entry"><a data-v-6d34c71c="" href="https://juejin.im/post/5edb2d1ef265da7717203113" target="_blank" rel="" st:name="link" class="entry-link"><div data-v-6d34c71c="" class="content-box"><div data-v-6d34c71c="" class="info-box"><div data-v-6d34c71c="" class="info-row meta-row"><ul data-v-6d34c71c="" class="meta-list"><!----><!----><li data-v-6d34c71c="" class="item post">专栏</li><li data-v-6d34c71c="" class="item username clickable"><div data-v-2bc7e294="" data-v-6d34c71c="" st:block="userPopover" st:state="5b52fd38f265da0f4c6fbd72" class="user-popover-box"><!----><a data-v-6d34c71c="" href="https://juejin.im/user/5b52fd38f265da0f4c6fbd72" target="_blank" rel="" st:name="user" st:state="5b52fd38f265da0f4c6fbd72" data-v-2bc7e294="">lzg9527</a></div></li><li data-v-6d34c71c="" class="item">1天前</li><li data-v-6d34c71c="" class="item tag"><a data-v-6d34c71c="" href="https://juejin.im/tag/%E5%89%8D%E7%AB%AF" target="_blank" rel="" st:name="tag" st:state="5597a05ae4b08a686ce56f6f" class="tag">前端</a></li><!----></ul></div><div data-v-6d34c71c="" class="info-row title-row"><!----><!----><a data-v-6d34c71c="" href="https://juejin.im/post/5edb2d1ef265da7717203113" target="_blank" rel="" st:name="title" class="title">有趣的Canvas，你值得拥有！</a></div><div data-v-6d34c71c="" class="info-row action-row"><ul data-v-6d34c71c="" class="action-list"><li data-v-6d34c71c="" st:name="likeBtn" class="item like clickable"><a data-v-6d34c71c="" class="title-box"><img data-v-6d34c71c="" src="./Typescript玩转设计模式 之 对象行为型模式（下） - 掘金_files/zan.e9d7698.svg" class="icon"><span data-v-6d34c71c="" class="count">61</span></a></li><li data-v-6d34c71c="" st:name="commentBtn" class="item comment clickable"><a data-v-6d34c71c="" href="https://juejin.im/post/5edb2d1ef265da7717203113#comment" target="_blank" rel="" class="title-box"><img data-v-6d34c71c="" src="./Typescript玩转设计模式 之 对象行为型模式（下） - 掘金_files/comment.4d5744f.svg" class="icon"><span data-v-6d34c71c="" class="count">4</span></a></li><li data-v-6d34c71c="" st:name="shareBtn" title="分享" class="item share clickable hover"><img data-v-6d34c71c="" src="./Typescript玩转设计模式 之 对象行为型模式（下） - 掘金_files/share.1d55e69.svg" class="icon"><div data-v-6d34c71c="" class="share-panel"><div data-v-6d34c71c="" st:name="shareItem" st:state="weibo" class="share-item weibo"><img data-v-6d34c71c="" src="./Typescript玩转设计模式 之 对象行为型模式（下） - 掘金_files/weibo.8e2f5d6.svg" class="icon">微博</div><div data-v-6d34c71c="" st:name="shareItem" st:state="wechat" class="share-item wechat"><img data-v-6d34c71c="" src="./Typescript玩转设计模式 之 对象行为型模式（下） - 掘金_files/wechat.844402c.svg" class="icon">微信扫一扫<div data-v-6d34c71c="" class="qr-code-box"><img data-v-6d34c71c="" src="https://juejin.im/post/5a77211b6fb9a0635774d61a" class="qr-code"></div></div></div></li><li data-v-6d34c71c="" title="收藏" st:name="collectBtn" class="item collect clickable hover"><img data-v-6d34c71c="" src="./Typescript玩转设计模式 之 对象行为型模式（下） - 掘金_files/collect.02e2979.svg" class="icon"><!----></li><!----></ul></div></div><div data-v-261e638e="" data-v-a98f170a="" data-v-6d34c71c="" data-src="https://user-gold-cdn.xitu.io/2020/6/6/17288319c8f0742b?imageView2/1/w/120/h/120/q/85/format/webp/interlace/1" class="lazy thumb thumb" style="background-image: none; background-size: cover;"></div></div></a></div></div></li><li data-v-3ce073b0="" data-growing-container="true" data-growing-title="entryList" class="item"><div data-v-392c77a2="" data-v-3ce073b0="" class="entry-box"><div data-v-6d34c71c="" data-v-392c77a2="" st:block="entry" st:state="5ed45b54f265da76c26e6b8f|3" class="entry"><a data-v-6d34c71c="" href="https://juejin.im/post/5ed37b57518825434c3d9677" target="_blank" rel="" st:name="link" class="entry-link"><div data-v-6d34c71c="" class="content-box"><div data-v-6d34c71c="" class="info-box"><div data-v-6d34c71c="" class="info-row meta-row"><ul data-v-6d34c71c="" class="meta-list"><!----><!----><li data-v-6d34c71c="" class="item post">专栏</li><li data-v-6d34c71c="" class="item username clickable"><div data-v-2bc7e294="" data-v-6d34c71c="" st:block="userPopover" st:state="5dc783e251882535ce3216d4" class="user-popover-box"><!----><a data-v-6d34c71c="" href="https://juejin.im/user/5dc783e251882535ce3216d4" target="_blank" rel="" st:name="user" st:state="5dc783e251882535ce3216d4" data-v-2bc7e294="">树酱</a></div></li><li data-v-6d34c71c="" class="item">6天前</li><li data-v-6d34c71c="" class="item tag"><a data-v-6d34c71c="" href="https://juejin.im/tag/%E5%89%8D%E7%AB%AF" target="_blank" rel="" st:name="tag" st:state="5597a05ae4b08a686ce56f6f" class="tag">前端</a></li><!----></ul></div><div data-v-6d34c71c="" class="info-row title-row"><!----><!----><a data-v-6d34c71c="" href="https://juejin.im/post/5ed37b57518825434c3d9677" target="_blank" rel="" st:name="title" class="title">聊聊前端开发日常的协作工具（全）</a></div><div data-v-6d34c71c="" class="info-row action-row"><ul data-v-6d34c71c="" class="action-list"><li data-v-6d34c71c="" st:name="likeBtn" class="item like clickable"><a data-v-6d34c71c="" class="title-box"><img data-v-6d34c71c="" src="./Typescript玩转设计模式 之 对象行为型模式（下） - 掘金_files/zan.e9d7698.svg" class="icon"><span data-v-6d34c71c="" class="count">767</span></a></li><li data-v-6d34c71c="" st:name="commentBtn" class="item comment clickable"><a data-v-6d34c71c="" href="https://juejin.im/post/5ed37b57518825434c3d9677#comment" target="_blank" rel="" class="title-box"><img data-v-6d34c71c="" src="./Typescript玩转设计模式 之 对象行为型模式（下） - 掘金_files/comment.4d5744f.svg" class="icon"><span data-v-6d34c71c="" class="count">72</span></a></li><li data-v-6d34c71c="" st:name="shareBtn" title="分享" class="item share clickable hover"><img data-v-6d34c71c="" src="./Typescript玩转设计模式 之 对象行为型模式（下） - 掘金_files/share.1d55e69.svg" class="icon"><div data-v-6d34c71c="" class="share-panel"><div data-v-6d34c71c="" st:name="shareItem" st:state="weibo" class="share-item weibo"><img data-v-6d34c71c="" src="./Typescript玩转设计模式 之 对象行为型模式（下） - 掘金_files/weibo.8e2f5d6.svg" class="icon">微博</div><div data-v-6d34c71c="" st:name="shareItem" st:state="wechat" class="share-item wechat"><img data-v-6d34c71c="" src="./Typescript玩转设计模式 之 对象行为型模式（下） - 掘金_files/wechat.844402c.svg" class="icon">微信扫一扫<div data-v-6d34c71c="" class="qr-code-box"><img data-v-6d34c71c="" src="https://juejin.im/post/5a77211b6fb9a0635774d61a" class="qr-code"></div></div></div></li><li data-v-6d34c71c="" title="收藏" st:name="collectBtn" class="item collect clickable hover"><img data-v-6d34c71c="" src="./Typescript玩转设计模式 之 对象行为型模式（下） - 掘金_files/collect.02e2979.svg" class="icon"><!----></li><!----></ul></div></div><!----></div></a></div></div></li><!----><li data-v-3ce073b0="" data-growing-container="true" data-growing-title="entryList" class="item"><div data-v-392c77a2="" data-v-3ce073b0="" class="entry-box"><div data-v-6d34c71c="" data-v-392c77a2="" st:block="entry" st:state="5ed5abbe6fb9a047f129c650|4" class="entry"><a data-v-6d34c71c="" href="https://juejin.im/post/5ed523555188254310006cf0" target="_blank" rel="" st:name="link" class="entry-link"><div data-v-6d34c71c="" class="content-box"><div data-v-6d34c71c="" class="info-box"><div data-v-6d34c71c="" class="info-row meta-row"><ul data-v-6d34c71c="" class="meta-list"><!----><!----><li data-v-6d34c71c="" class="item post">专栏</li><li data-v-6d34c71c="" class="item username clickable"><div data-v-2bc7e294="" data-v-6d34c71c="" st:block="userPopover" st:state="5c6256596fb9a049bd42c770" class="user-popover-box"><!----><a data-v-6d34c71c="" href="https://juejin.im/user/5c6256596fb9a049bd42c770" target="_blank" rel="" st:name="user" st:state="5c6256596fb9a049bd42c770" data-v-2bc7e294="">刘小夕</a></div></li><li data-v-6d34c71c="" class="item">5天前</li><li data-v-6d34c71c="" class="item tag"><a data-v-6d34c71c="" href="https://juejin.im/tag/JavaScript" target="_blank" rel="" st:name="tag" st:state="55964d83e4b08a686cc6b353" class="tag">JavaScript</a><a data-v-6d34c71c="" href="https://juejin.im/tag/%E5%89%8D%E7%AB%AF" target="_blank" rel="" st:name="tag" st:state="5597a05ae4b08a686ce56f6f" class="tag">前端</a></li><!----></ul></div><div data-v-6d34c71c="" class="info-row title-row"><!----><!----><a data-v-6d34c71c="" href="https://juejin.im/post/5ed523555188254310006cf0" target="_blank" rel="" st:name="title" class="title">这些神仙代码库值得每一个前端开发者收藏</a></div><div data-v-6d34c71c="" class="info-row action-row"><ul data-v-6d34c71c="" class="action-list"><li data-v-6d34c71c="" st:name="likeBtn" class="item like clickable"><a data-v-6d34c71c="" class="title-box"><img data-v-6d34c71c="" src="./Typescript玩转设计模式 之 对象行为型模式（下） - 掘金_files/zan.e9d7698.svg" class="icon"><span data-v-6d34c71c="" class="count">589</span></a></li><li data-v-6d34c71c="" st:name="commentBtn" class="item comment clickable"><a data-v-6d34c71c="" href="https://juejin.im/post/5ed523555188254310006cf0#comment" target="_blank" rel="" class="title-box"><img data-v-6d34c71c="" src="./Typescript玩转设计模式 之 对象行为型模式（下） - 掘金_files/comment.4d5744f.svg" class="icon"><span data-v-6d34c71c="" class="count">19</span></a></li><li data-v-6d34c71c="" st:name="shareBtn" title="分享" class="item share clickable hover"><img data-v-6d34c71c="" src="./Typescript玩转设计模式 之 对象行为型模式（下） - 掘金_files/share.1d55e69.svg" class="icon"><div data-v-6d34c71c="" class="share-panel"><div data-v-6d34c71c="" st:name="shareItem" st:state="weibo" class="share-item weibo"><img data-v-6d34c71c="" src="./Typescript玩转设计模式 之 对象行为型模式（下） - 掘金_files/weibo.8e2f5d6.svg" class="icon">微博</div><div data-v-6d34c71c="" st:name="shareItem" st:state="wechat" class="share-item wechat"><img data-v-6d34c71c="" src="./Typescript玩转设计模式 之 对象行为型模式（下） - 掘金_files/wechat.844402c.svg" class="icon">微信扫一扫<div data-v-6d34c71c="" class="qr-code-box"><img data-v-6d34c71c="" src="https://juejin.im/post/5a77211b6fb9a0635774d61a" class="qr-code"></div></div></div></li><li data-v-6d34c71c="" title="收藏" st:name="collectBtn" class="item collect clickable hover"><img data-v-6d34c71c="" src="./Typescript玩转设计模式 之 对象行为型模式（下） - 掘金_files/collect.02e2979.svg" class="icon"><!----></li><!----></ul></div></div><div data-v-261e638e="" data-v-a98f170a="" data-v-6d34c71c="" data-src="https://user-gold-cdn.xitu.io/2020/6/1/17270954d4aa21ea?imageView2/1/w/120/h/120/q/85/format/webp/interlace/1" class="lazy thumb thumb" style="background-image: none; background-size: cover;"></div></div></a></div></div></li><li data-v-3ce073b0="" data-growing-container="true" data-growing-title="entryList" class="item"><div data-v-392c77a2="" data-v-3ce073b0="" class="entry-box"><div data-v-6d34c71c="" data-v-392c77a2="" st:block="entry" st:state="5edc2f93e51d45789671ac94|5" class="entry"><a data-v-6d34c71c="" href="https://juejin.im/post/5edc2f6451882543116e3367" target="_blank" rel="" st:name="link" class="entry-link"><div data-v-6d34c71c="" class="content-box"><div data-v-6d34c71c="" class="info-box"><div data-v-6d34c71c="" class="info-row meta-row"><ul data-v-6d34c71c="" class="meta-list"><!----><!----><li data-v-6d34c71c="" class="item post">专栏</li><li data-v-6d34c71c="" class="item username clickable"><div data-v-2bc7e294="" data-v-6d34c71c="" st:block="userPopover" st:state="5d8cc85d5188254d014e2b79" class="user-popover-box"><!----><a data-v-6d34c71c="" href="https://juejin.im/user/5d8cc85d5188254d014e2b79" target="_blank" rel="" st:name="user" st:state="5d8cc85d5188254d014e2b79" data-v-2bc7e294="">程序员cxuan</a></div></li><li data-v-6d34c71c="" class="item">14小时前</li><li data-v-6d34c71c="" class="item tag"><a data-v-6d34c71c="" href="https://juejin.im/tag/%E5%89%8D%E7%AB%AF" target="_blank" rel="" st:name="tag" st:state="5597a05ae4b08a686ce56f6f" class="tag">前端</a><a data-v-6d34c71c="" href="https://juejin.im/tag/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F" target="_blank" rel="" st:name="tag" st:state="55ffafb960b249ad60c1f86b" class="tag">操作系统</a></li><!----></ul></div><div data-v-6d34c71c="" class="info-row title-row"><!----><!----><a data-v-6d34c71c="" href="https://juejin.im/post/5edc2f6451882543116e3367" target="_blank" rel="" st:name="title" class="title">这是对我最大的认可和鼓励</a></div><div data-v-6d34c71c="" class="info-row action-row"><ul data-v-6d34c71c="" class="action-list"><li data-v-6d34c71c="" st:name="likeBtn" class="item like clickable"><a data-v-6d34c71c="" class="title-box"><img data-v-6d34c71c="" src="./Typescript玩转设计模式 之 对象行为型模式（下） - 掘金_files/zan.e9d7698.svg" class="icon"><span data-v-6d34c71c="" class="count">11</span></a></li><li data-v-6d34c71c="" st:name="commentBtn" class="item comment clickable"><a data-v-6d34c71c="" href="https://juejin.im/post/5edc2f6451882543116e3367#comment" target="_blank" rel="" class="title-box"><img data-v-6d34c71c="" src="./Typescript玩转设计模式 之 对象行为型模式（下） - 掘金_files/comment.4d5744f.svg" class="icon"><span data-v-6d34c71c="" class="count">1</span></a></li><li data-v-6d34c71c="" st:name="shareBtn" title="分享" class="item share clickable hover"><img data-v-6d34c71c="" src="./Typescript玩转设计模式 之 对象行为型模式（下） - 掘金_files/share.1d55e69.svg" class="icon"><div data-v-6d34c71c="" class="share-panel"><div data-v-6d34c71c="" st:name="shareItem" st:state="weibo" class="share-item weibo"><img data-v-6d34c71c="" src="./Typescript玩转设计模式 之 对象行为型模式（下） - 掘金_files/weibo.8e2f5d6.svg" class="icon">微博</div><div data-v-6d34c71c="" st:name="shareItem" st:state="wechat" class="share-item wechat"><img data-v-6d34c71c="" src="./Typescript玩转设计模式 之 对象行为型模式（下） - 掘金_files/wechat.844402c.svg" class="icon">微信扫一扫<div data-v-6d34c71c="" class="qr-code-box"><img data-v-6d34c71c="" src="https://juejin.im/post/5a77211b6fb9a0635774d61a" class="qr-code"></div></div></div></li><li data-v-6d34c71c="" title="收藏" st:name="collectBtn" class="item collect clickable hover"><img data-v-6d34c71c="" src="./Typescript玩转设计模式 之 对象行为型模式（下） - 掘金_files/collect.02e2979.svg" class="icon"><!----></li><!----></ul></div></div><!----></div></a></div></div></li><!----><!----><li data-v-3ce073b0="" data-growing-container="true" data-growing-title="entryList" class="item"><div data-v-392c77a2="" data-v-3ce073b0="" class="entry-box"><div data-v-6d34c71c="" data-v-392c77a2="" st:block="entry" st:state="5ed68b0be51d457844800034|4" class="entry"><a data-v-6d34c71c="" href="https://juejin.im/post/5ed689666fb9a047f47cceea" target="_blank" rel="" st:name="link" class="entry-link"><div data-v-6d34c71c="" class="content-box"><div data-v-6d34c71c="" class="info-box"><div data-v-6d34c71c="" class="info-row meta-row"><ul data-v-6d34c71c="" class="meta-list"><!----><!----><li data-v-6d34c71c="" class="item post">专栏</li><li data-v-6d34c71c="" class="item username clickable"><div data-v-2bc7e294="" data-v-6d34c71c="" st:block="userPopover" st:state="5c1b4d04e51d450eca5af1dd" class="user-popover-box"><!----><a data-v-6d34c71c="" href="https://juejin.im/user/5c1b4d04e51d450eca5af1dd" target="_blank" rel="" st:name="user" st:state="5c1b4d04e51d450eca5af1dd" data-v-2bc7e294="">wangly19</a></div></li><li data-v-6d34c71c="" class="item">4天前</li><li data-v-6d34c71c="" class="item tag"><a data-v-6d34c71c="" href="https://juejin.im/tag/%E5%89%8D%E7%AB%AF" target="_blank" rel="" st:name="tag" st:state="5597a05ae4b08a686ce56f6f" class="tag">前端</a></li><!----></ul></div><div data-v-6d34c71c="" class="info-row title-row"><!----><!----><a data-v-6d34c71c="" href="https://juejin.im/post/5ed689666fb9a047f47cceea" target="_blank" rel="" st:name="title" class="title">路子极野的前端不舍得删除的开发时效工具</a></div><div data-v-6d34c71c="" class="info-row action-row"><ul data-v-6d34c71c="" class="action-list"><li data-v-6d34c71c="" st:name="likeBtn" class="item like clickable"><a data-v-6d34c71c="" class="title-box"><img data-v-6d34c71c="" src="./Typescript玩转设计模式 之 对象行为型模式（下） - 掘金_files/zan.e9d7698.svg" class="icon"><span data-v-6d34c71c="" class="count">231</span></a></li><li data-v-6d34c71c="" st:name="commentBtn" class="item comment clickable"><a data-v-6d34c71c="" href="https://juejin.im/post/5ed689666fb9a047f47cceea#comment" target="_blank" rel="" class="title-box"><img data-v-6d34c71c="" src="./Typescript玩转设计模式 之 对象行为型模式（下） - 掘金_files/comment.4d5744f.svg" class="icon"><span data-v-6d34c71c="" class="count">32</span></a></li><li data-v-6d34c71c="" st:name="shareBtn" title="分享" class="item share clickable hover"><img data-v-6d34c71c="" src="./Typescript玩转设计模式 之 对象行为型模式（下） - 掘金_files/share.1d55e69.svg" class="icon"><div data-v-6d34c71c="" class="share-panel"><div data-v-6d34c71c="" st:name="shareItem" st:state="weibo" class="share-item weibo"><img data-v-6d34c71c="" src="./Typescript玩转设计模式 之 对象行为型模式（下） - 掘金_files/weibo.8e2f5d6.svg" class="icon">微博</div><div data-v-6d34c71c="" st:name="shareItem" st:state="wechat" class="share-item wechat"><img data-v-6d34c71c="" src="./Typescript玩转设计模式 之 对象行为型模式（下） - 掘金_files/wechat.844402c.svg" class="icon">微信扫一扫<div data-v-6d34c71c="" class="qr-code-box"><img data-v-6d34c71c="" src="https://juejin.im/post/5a77211b6fb9a0635774d61a" class="qr-code"></div></div></div></li><li data-v-6d34c71c="" title="收藏" st:name="collectBtn" class="item collect clickable hover"><img data-v-6d34c71c="" src="./Typescript玩转设计模式 之 对象行为型模式（下） - 掘金_files/collect.02e2979.svg" class="icon"><!----></li><!----></ul></div></div><!----></div></a></div></div></li><li data-v-3ce073b0="" data-growing-container="true" data-growing-title="entryList" class="item"><div data-v-392c77a2="" data-v-3ce073b0="" class="entry-box"><div data-v-6d34c71c="" data-v-392c77a2="" st:block="entry" st:state="5ed3c4746fb9a047b534ae7a|5" class="entry"><a data-v-6d34c71c="" href="https://juejin.im/post/5ed3c27ee51d455f9a6368c9" target="_blank" rel="" st:name="link" class="entry-link"><div data-v-6d34c71c="" class="content-box"><div data-v-6d34c71c="" class="info-box"><div data-v-6d34c71c="" class="info-row meta-row"><ul data-v-6d34c71c="" class="meta-list"><!----><!----><li data-v-6d34c71c="" class="item post">专栏</li><li data-v-6d34c71c="" class="item username clickable"><div data-v-2bc7e294="" data-v-6d34c71c="" st:block="userPopover" st:state="5c90d966f265da61173a2cd8" class="user-popover-box"><!----><a data-v-6d34c71c="" href="https://juejin.im/user/5c90d966f265da61173a2cd8" target="_blank" rel="" st:name="user" st:state="5c90d966f265da61173a2cd8" data-v-2bc7e294="">快狗打车前端团队</a></div></li><li data-v-6d34c71c="" class="item">7天前</li><li data-v-6d34c71c="" class="item tag"><a data-v-6d34c71c="" href="https://juejin.im/tag/CSS" target="_blank" rel="" st:name="tag" st:state="555eadc1e4b00c57d9962402" class="tag">CSS</a><a data-v-6d34c71c="" href="https://juejin.im/tag/%E5%89%8D%E7%AB%AF" target="_blank" rel="" st:name="tag" st:state="5597a05ae4b08a686ce56f6f" class="tag">前端</a></li><!----></ul></div><div data-v-6d34c71c="" class="info-row title-row"><!----><!----><a data-v-6d34c71c="" href="https://juejin.im/post/5ed3c27ee51d455f9a6368c9" target="_blank" rel="" st:name="title" class="title">【收藏】你不知道的css技巧</a></div><div data-v-6d34c71c="" class="info-row action-row"><ul data-v-6d34c71c="" class="action-list"><li data-v-6d34c71c="" st:name="likeBtn" class="item like clickable"><a data-v-6d34c71c="" class="title-box"><img data-v-6d34c71c="" src="./Typescript玩转设计模式 之 对象行为型模式（下） - 掘金_files/zan.e9d7698.svg" class="icon"><span data-v-6d34c71c="" class="count">788</span></a></li><li data-v-6d34c71c="" st:name="commentBtn" class="item comment clickable"><a data-v-6d34c71c="" href="https://juejin.im/post/5ed3c27ee51d455f9a6368c9#comment" target="_blank" rel="" class="title-box"><img data-v-6d34c71c="" src="./Typescript玩转设计模式 之 对象行为型模式（下） - 掘金_files/comment.4d5744f.svg" class="icon"><span data-v-6d34c71c="" class="count">40</span></a></li><li data-v-6d34c71c="" st:name="shareBtn" title="分享" class="item share clickable hover"><img data-v-6d34c71c="" src="./Typescript玩转设计模式 之 对象行为型模式（下） - 掘金_files/share.1d55e69.svg" class="icon"><div data-v-6d34c71c="" class="share-panel"><div data-v-6d34c71c="" st:name="shareItem" st:state="weibo" class="share-item weibo"><img data-v-6d34c71c="" src="./Typescript玩转设计模式 之 对象行为型模式（下） - 掘金_files/weibo.8e2f5d6.svg" class="icon">微博</div><div data-v-6d34c71c="" st:name="shareItem" st:state="wechat" class="share-item wechat"><img data-v-6d34c71c="" src="./Typescript玩转设计模式 之 对象行为型模式（下） - 掘金_files/wechat.844402c.svg" class="icon">微信扫一扫<div data-v-6d34c71c="" class="qr-code-box"><img data-v-6d34c71c="" src="https://juejin.im/post/5a77211b6fb9a0635774d61a" class="qr-code"></div></div></div></li><li data-v-6d34c71c="" title="收藏" st:name="collectBtn" class="item collect clickable hover"><img data-v-6d34c71c="" src="./Typescript玩转设计模式 之 对象行为型模式（下） - 掘金_files/collect.02e2979.svg" class="icon"><!----></li><!----></ul></div></div><div data-v-261e638e="" data-v-a98f170a="" data-v-6d34c71c="" data-src="https://user-gold-cdn.xitu.io/2020/5/31/1726b304c7be7a52?imageView2/1/w/120/h/120/q/85/format/webp/interlace/1" class="lazy thumb thumb" style="background-image: none; background-size: cover;"></div></div></a></div></div></li><li data-v-3ce073b0="" data-growing-container="true" data-growing-title="entryList" class="item"><div data-v-392c77a2="" data-v-3ce073b0="" class="entry-box"><div data-v-6d34c71c="" data-v-392c77a2="" st:block="entry" st:state="5ed44cc0f265da76e81a3697|6" class="entry"><a data-v-6d34c71c="" href="https://juejin.im/post/5ed3974ae51d45784d7ca7a5" target="_blank" rel="" st:name="link" class="entry-link"><div data-v-6d34c71c="" class="content-box"><div data-v-6d34c71c="" class="info-box"><div data-v-6d34c71c="" class="info-row meta-row"><ul data-v-6d34c71c="" class="meta-list"><!----><!----><li data-v-6d34c71c="" class="item post">专栏</li><li data-v-6d34c71c="" class="item username clickable"><div data-v-2bc7e294="" data-v-6d34c71c="" st:block="userPopover" st:state="5d5366df6fb9a06b2a203553" class="user-popover-box"><!----><a data-v-6d34c71c="" href="https://juejin.im/user/5d5366df6fb9a06b2a203553" target="_blank" rel="" st:name="user" st:state="5d5366df6fb9a06b2a203553" data-v-2bc7e294="">政采云前端团队</a></div></li><li data-v-6d34c71c="" class="item">6天前</li><li data-v-6d34c71c="" class="item tag"><a data-v-6d34c71c="" href="https://juejin.im/tag/%E5%89%8D%E7%AB%AF" target="_blank" rel="" st:name="tag" st:state="5597a05ae4b08a686ce56f6f" class="tag">前端</a></li><!----></ul></div><div data-v-6d34c71c="" class="info-row title-row"><!----><!----><a data-v-6d34c71c="" href="https://juejin.im/post/5ed3974ae51d45784d7ca7a5" target="_blank" rel="" st:name="title" class="title">如何实现高性能的在线 PDF 预览</a></div><div data-v-6d34c71c="" class="info-row action-row"><ul data-v-6d34c71c="" class="action-list"><li data-v-6d34c71c="" st:name="likeBtn" class="item like clickable"><a data-v-6d34c71c="" class="title-box"><img data-v-6d34c71c="" src="./Typescript玩转设计模式 之 对象行为型模式（下） - 掘金_files/zan.e9d7698.svg" class="icon"><span data-v-6d34c71c="" class="count">431</span></a></li><li data-v-6d34c71c="" st:name="commentBtn" class="item comment clickable"><a data-v-6d34c71c="" href="https://juejin.im/post/5ed3974ae51d45784d7ca7a5#comment" target="_blank" rel="" class="title-box"><img data-v-6d34c71c="" src="./Typescript玩转设计模式 之 对象行为型模式（下） - 掘金_files/comment.4d5744f.svg" class="icon"><span data-v-6d34c71c="" class="count">34</span></a></li><li data-v-6d34c71c="" st:name="shareBtn" title="分享" class="item share clickable hover"><img data-v-6d34c71c="" src="./Typescript玩转设计模式 之 对象行为型模式（下） - 掘金_files/share.1d55e69.svg" class="icon"><div data-v-6d34c71c="" class="share-panel"><div data-v-6d34c71c="" st:name="shareItem" st:state="weibo" class="share-item weibo"><img data-v-6d34c71c="" src="./Typescript玩转设计模式 之 对象行为型模式（下） - 掘金_files/weibo.8e2f5d6.svg" class="icon">微博</div><div data-v-6d34c71c="" st:name="shareItem" st:state="wechat" class="share-item wechat"><img data-v-6d34c71c="" src="./Typescript玩转设计模式 之 对象行为型模式（下） - 掘金_files/wechat.844402c.svg" class="icon">微信扫一扫<div data-v-6d34c71c="" class="qr-code-box"><img data-v-6d34c71c="" src="https://juejin.im/post/5a77211b6fb9a0635774d61a" class="qr-code"></div></div></div></li><li data-v-6d34c71c="" title="收藏" st:name="collectBtn" class="item collect clickable hover"><img data-v-6d34c71c="" src="./Typescript玩转设计模式 之 对象行为型模式（下） - 掘金_files/collect.02e2979.svg" class="icon"><!----></li><!----></ul></div></div><div data-v-261e638e="" data-v-a98f170a="" data-v-6d34c71c="" data-src="https://user-gold-cdn.xitu.io/2020/5/31/1726a88ed0f3b9ce?imageView2/1/w/120/h/120/q/85/format/webp/interlace/1" class="lazy thumb thumb" style="background-image: none; background-size: cover;"></div></div></a></div></div></li><li data-v-3ce073b0="" data-growing-container="true" data-growing-title="entryList" class="item"><div data-v-392c77a2="" data-v-3ce073b0="" class="entry-box"><div data-v-6d34c71c="" data-v-392c77a2="" st:block="entry" st:state="5edbb634e51d4578853d343c|7" class="entry"><a data-v-6d34c71c="" href="https://juejin.im/post/5edb8a1951882543216f0c84" target="_blank" rel="" st:name="link" class="entry-link"><div data-v-6d34c71c="" class="content-box"><div data-v-6d34c71c="" class="info-box"><div data-v-6d34c71c="" class="info-row meta-row"><ul data-v-6d34c71c="" class="meta-list"><!----><!----><li data-v-6d34c71c="" class="item post">专栏</li><li data-v-6d34c71c="" class="item username clickable"><div data-v-2bc7e294="" data-v-6d34c71c="" st:block="userPopover" st:state="5e7721de51882549564b7caa" class="user-popover-box"><!----><a data-v-6d34c71c="" href="https://juejin.im/user/5e7721de51882549564b7caa" target="_blank" rel="" st:name="user" st:state="5e7721de51882549564b7caa" data-v-2bc7e294="">小又又</a></div></li><li data-v-6d34c71c="" class="item">23小时前</li><li data-v-6d34c71c="" class="item tag"><a data-v-6d34c71c="" href="https://juejin.im/tag/%E5%89%8D%E7%AB%AF" target="_blank" rel="" st:name="tag" st:state="5597a05ae4b08a686ce56f6f" class="tag">前端</a></li><!----></ul></div><div data-v-6d34c71c="" class="info-row title-row"><!----><!----><a data-v-6d34c71c="" href="https://juejin.im/post/5edb8a1951882543216f0c84" target="_blank" rel="" st:name="title" class="title">转行学前端的第 59 天 : 了解 BOM location 对象相关</a></div><div data-v-6d34c71c="" class="info-row action-row"><ul data-v-6d34c71c="" class="action-list"><li data-v-6d34c71c="" st:name="likeBtn" class="item like clickable"><a data-v-6d34c71c="" class="title-box"><img data-v-6d34c71c="" src="./Typescript玩转设计模式 之 对象行为型模式（下） - 掘金_files/zan.e9d7698.svg" class="icon"><span data-v-6d34c71c="" class="count">2</span></a></li><li data-v-6d34c71c="" st:name="commentBtn" class="item comment clickable"><a data-v-6d34c71c="" href="https://juejin.im/post/5edb8a1951882543216f0c84#comment" target="_blank" rel="" class="title-box"><img data-v-6d34c71c="" src="./Typescript玩转设计模式 之 对象行为型模式（下） - 掘金_files/comment.4d5744f.svg" class="icon"><span data-v-6d34c71c="" class="count">2</span></a></li><li data-v-6d34c71c="" st:name="shareBtn" title="分享" class="item share clickable hover"><img data-v-6d34c71c="" src="./Typescript玩转设计模式 之 对象行为型模式（下） - 掘金_files/share.1d55e69.svg" class="icon"><div data-v-6d34c71c="" class="share-panel"><div data-v-6d34c71c="" st:name="shareItem" st:state="weibo" class="share-item weibo"><img data-v-6d34c71c="" src="./Typescript玩转设计模式 之 对象行为型模式（下） - 掘金_files/weibo.8e2f5d6.svg" class="icon">微博</div><div data-v-6d34c71c="" st:name="shareItem" st:state="wechat" class="share-item wechat"><img data-v-6d34c71c="" src="./Typescript玩转设计模式 之 对象行为型模式（下） - 掘金_files/wechat.844402c.svg" class="icon">微信扫一扫<div data-v-6d34c71c="" class="qr-code-box"><img data-v-6d34c71c="" src="https://juejin.im/post/5a77211b6fb9a0635774d61a" class="qr-code"></div></div></div></li><li data-v-6d34c71c="" title="收藏" st:name="collectBtn" class="item collect clickable hover"><img data-v-6d34c71c="" src="./Typescript玩转设计模式 之 对象行为型模式（下） - 掘金_files/collect.02e2979.svg" class="icon"><!----></li><!----></ul></div></div><div data-v-261e638e="" data-v-a98f170a="" data-v-6d34c71c="" data-src="https://user-gold-cdn.xitu.io/2020/6/6/1728999129f43a2c?imageView2/1/w/120/h/120/q/85/format/webp/interlace/1" class="lazy thumb thumb" style="background-image: none; background-size: cover;"></div></div></a></div></div></li><li data-v-3ce073b0="" data-growing-container="true" data-growing-title="entryList" class="item"><div data-v-392c77a2="" data-v-3ce073b0="" class="entry-box"><div data-v-6d34c71c="" data-v-392c77a2="" st:block="entry" st:state="5ed609b2e51d4578924b5ecc|8" class="entry"><a data-v-6d34c71c="" href="https://juejin.im/post/5ed5a40ae51d45789b35aa7e" target="_blank" rel="" st:name="link" class="entry-link"><div data-v-6d34c71c="" class="content-box"><div data-v-6d34c71c="" class="info-box"><div data-v-6d34c71c="" class="info-row meta-row"><ul data-v-6d34c71c="" class="meta-list"><!----><!----><li data-v-6d34c71c="" class="item post">专栏</li><li data-v-6d34c71c="" class="item username clickable"><div data-v-2bc7e294="" data-v-6d34c71c="" st:block="userPopover" st:state="5e57f2e6f265da574947499b" class="user-popover-box"><!----><a data-v-6d34c71c="" href="https://juejin.im/user/5e57f2e6f265da574947499b" target="_blank" rel="" st:name="user" st:state="5e57f2e6f265da574947499b" data-v-2bc7e294="">Yiming君</a></div></li><li data-v-6d34c71c="" class="item">5天前</li><li data-v-6d34c71c="" class="item tag"><a data-v-6d34c71c="" href="https://juejin.im/tag/%E5%89%8D%E7%AB%AF" target="_blank" rel="" st:name="tag" st:state="5597a05ae4b08a686ce56f6f" class="tag">前端</a></li><!----></ul></div><div data-v-6d34c71c="" class="info-row title-row"><!----><!----><a data-v-6d34c71c="" href="https://juejin.im/post/5ed5a40ae51d45789b35aa7e" target="_blank" rel="" st:name="title" class="title">网上看到的字节面试题，不自量力写下答案</a></div><div data-v-6d34c71c="" class="info-row action-row"><ul data-v-6d34c71c="" class="action-list"><li data-v-6d34c71c="" st:name="likeBtn" class="item like clickable"><a data-v-6d34c71c="" class="title-box"><img data-v-6d34c71c="" src="./Typescript玩转设计模式 之 对象行为型模式（下） - 掘金_files/zan.e9d7698.svg" class="icon"><span data-v-6d34c71c="" class="count">199</span></a></li><li data-v-6d34c71c="" st:name="commentBtn" class="item comment clickable"><a data-v-6d34c71c="" href="https://juejin.im/post/5ed5a40ae51d45789b35aa7e#comment" target="_blank" rel="" class="title-box"><img data-v-6d34c71c="" src="./Typescript玩转设计模式 之 对象行为型模式（下） - 掘金_files/comment.4d5744f.svg" class="icon"><span data-v-6d34c71c="" class="count">41</span></a></li><li data-v-6d34c71c="" st:name="shareBtn" title="分享" class="item share clickable hover"><img data-v-6d34c71c="" src="./Typescript玩转设计模式 之 对象行为型模式（下） - 掘金_files/share.1d55e69.svg" class="icon"><div data-v-6d34c71c="" class="share-panel"><div data-v-6d34c71c="" st:name="shareItem" st:state="weibo" class="share-item weibo"><img data-v-6d34c71c="" src="./Typescript玩转设计模式 之 对象行为型模式（下） - 掘金_files/weibo.8e2f5d6.svg" class="icon">微博</div><div data-v-6d34c71c="" st:name="shareItem" st:state="wechat" class="share-item wechat"><img data-v-6d34c71c="" src="./Typescript玩转设计模式 之 对象行为型模式（下） - 掘金_files/wechat.844402c.svg" class="icon">微信扫一扫<div data-v-6d34c71c="" class="qr-code-box"><img data-v-6d34c71c="" src="https://juejin.im/post/5a77211b6fb9a0635774d61a" class="qr-code"></div></div></div></li><li data-v-6d34c71c="" title="收藏" st:name="collectBtn" class="item collect clickable hover"><img data-v-6d34c71c="" src="./Typescript玩转设计模式 之 对象行为型模式（下） - 掘金_files/collect.02e2979.svg" class="icon"><!----></li><!----></ul></div></div><!----></div></a></div></div></li><li data-v-3ce073b0="" class="item"><!----></li><!----></ul></div><div data-v-2184ead4="" data-v-50ff96fb="" st:block="sidebar" class="sidebar sidebar sticky" data-v-0f848c07=""><div data-v-352419ce="" data-v-234391ba="" data-v-2184ead4="" class="sidebar-block author-block shadow"><div data-v-352419ce="" class="block-title">关于作者</div><div data-v-352419ce="" class="block-body"><a data-v-234391ba="" href="https://juejin.im/user/59659aff5188250cf956e6dd" target="_blank" rel="" class="user-item item" data-v-352419ce=""><div data-v-261e638e="" data-v-b49070bc="" data-v-234391ba="" data-src="https://user-gold-cdn.xitu.io/2017/9/7/217d533ac647f900de33fcd6f7d64c64?imageView2/1/w/100/h/100/q/85/format/webp/interlace/1" class="lazy avatar avatar loaded" style="background-image: url(&quot;https://user-gold-cdn.xitu.io/2017/9/7/217d533ac647f900de33fcd6f7d64c64?imageView2/1/w/100/h/100/q/85/format/webp/interlace/1&quot;);"></div><div data-v-234391ba="" class="info-box"><a data-v-1a54813b="" data-v-234391ba="" href="https://juejin.im/user/59659aff5188250cf956e6dd" target="_blank" rel="" class="username">蚂蚁金服数据体验技术<a data-v-3a430c94="" data-v-1a54813b="" href="https://juejin.im/book/5c90640c5188252d7941f5bb/section/5c9065385188252da6320022" target="_blank" rel="" class="rank"><img data-v-3a430c94="" src="./Typescript玩转设计模式 之 对象行为型模式（下） - 掘金_files/lv-6.74bd93a.svg" alt="lv-6"></a></a><div data-v-234391ba="" title="数据体验技术团队（ProtoTeam） @  蚂蚁金服（杭州）网络技术有限公司" class="position">数据体验技术团队（ProtoTeam） @  蚂蚁金服（杭州）网络技术有限公司</div></div></a><div data-v-234391ba="" data-v-352419ce="" class="stat-item item"><svg data-v-234391ba="" data-v-352419ce="" xmlns="http://www.w3.org/2000/svg" width="25" height="26" viewBox="0 0 25 26" class="zan"><g data-v-234391ba="" data-v-352419ce="" fill="none" fill-rule="evenodd" transform="translate(0 .57)"><ellipse data-v-234391ba="" data-v-352419ce="" cx="12.5" cy="12.57" fill="#E1EFFF" rx="12.5" ry="12.57"></ellipse> <path data-v-234391ba="" data-v-352419ce="" fill="#7BB9FF" d="M8.596 11.238V19H7.033C6.463 19 6 18.465 6 17.807v-5.282c0-.685.483-1.287 1.033-1.287h1.563zm4.275-4.156A1.284 1.284 0 0 1 14.156 6c.885.016 1.412.722 1.595 1.07.334.638.343 1.687.114 2.361-.207.61-.687 1.412-.687 1.412h3.596c.38 0 .733.178.969.488.239.317.318.728.21 1.102l-1.628 5.645a1.245 1.245 0 0 1-1.192.922h-7.068v-7.889c1.624-.336 2.623-2.866 2.806-4.029z"></path></g></svg> <span data-v-234391ba="" data-v-352419ce="" class="content">获得点赞<span data-v-234391ba="" data-v-352419ce="" class="count">17,019</span></span></div><div data-v-234391ba="" data-v-352419ce="" class="stat-item item"><svg data-v-234391ba="" data-v-352419ce="" width="25" height="25" viewBox="0 0 25 25" class="icon stat-view-icon"><g data-v-234391ba="" data-v-352419ce="" fill="none" fill-rule="evenodd"><circle data-v-234391ba="" data-v-352419ce="" cx="12.5" cy="12.5" r="12.5" fill="#E1EFFF"></circle> <path data-v-234391ba="" data-v-352419ce="" fill="#7BB9FF" d="M4 12.5S6.917 7 12.75 7s8.75 5.5 8.75 5.5-2.917 5.5-8.75 5.5S4 12.5 4 12.5zm8.75 2.292c1.208 0 2.188-1.026 2.188-2.292 0-1.266-.98-2.292-2.188-2.292-1.208 0-2.188 1.026-2.188 2.292 0 1.266.98 2.292 2.188 2.292z"></path></g></svg> <span data-v-234391ba="" data-v-352419ce="" class="content">文章被阅读<span data-v-234391ba="" data-v-352419ce="" class="count">475,946</span></span></div><!----></div></div><ul data-v-2184ead4="" class="sidebar-bd-entry"><li data-v-2184ead4=""><a data-v-518b39c4="" data-v-2184ead4="" href="http://www.huodongxing.com/go/tl10" target="_blank" class="sidebar-entry shadow" style="background-image: url(&quot;https://user-gold-cdn.xitu.io/159134466547847460bb267e1957a8d5d179a38ab9f88.jpg&quot;);"></a></li><li data-v-2184ead4=""><a data-v-518b39c4="" data-v-2184ead4="" href="https://www.huodongxing.com/go/tl9" target="_blank" class="sidebar-entry shadow" style="background-image: url(&quot;https://user-gold-cdn.xitu.io/15910082632711636b14d0311af354c579799a99715b4.jpg&quot;);"></a></li><li data-v-2184ead4=""><a data-v-518b39c4="" data-v-2184ead4="" href="https://2020.tlc.ivweb.io/" target="_blank" class="sidebar-entry shadow" style="background-image: url(&quot;https://user-gold-cdn.xitu.io/159098045372884128961ff2c559334a5136ec25e29fa.jpg&quot;);"></a></li></ul><div data-v-6632cf8f="" data-v-bf6401d0="" data-v-2184ead4="" class="index-book-collect" place="post" category="5562b415e4b00c57d9b94ac8"><div data-v-6632cf8f="" class="header"><div data-v-6632cf8f="" class="title">掘金小册</div><div data-v-6632cf8f="" class="controllers"><div data-v-6632cf8f="" class="arrow icon ion-chevron-left"></div><div data-v-6632cf8f="" class="arrow icon ion-chevron-right"></div></div></div><div data-v-6632cf8f="" class="slide-book transition--next"><div data-v-29edf5b4="" data-v-6632cf8f="" class="slide-book-list item"><a data-v-29edf5b4="" href="https://juejin.im/book/5c7bcd6b6fb9a049a7128934" class="item"><div data-v-29edf5b4="" class="poster"><div data-v-261e638e="" data-v-a98f170a="" data-v-29edf5b4="" data-src="https://user-gold-cdn.xitu.io/2019/5/29/16b02e61373e1829?imageView2/1/w/104/h/144/q/95/format/webp/interlace/1" class="lazy thumb poster-img loaded" style="background-image: url(&quot;https://user-gold-cdn.xitu.io/2019/5/29/16b02e61373e1829?imageView2/1/w/104/h/144/q/95/format/webp/interlace/1&quot;); background-size: cover;"></div></div><div data-v-29edf5b4="" class="content-text"><div data-v-29edf5b4="" class="title">Python数据分析实战：构建股票量化交易系统</div><div data-v-29edf5b4="" class="price"><div data-v-29edf5b4="" class="new">新人价 ￥19.95</div><div data-v-29edf5b4="" class="delete">￥39.9</div></div></div></a><a data-v-29edf5b4="" href="https://juejin.im/book/5e588e04518825492b50b274" class="item"><div data-v-29edf5b4="" class="poster"><div data-v-261e638e="" data-v-a98f170a="" data-v-29edf5b4="" data-src="https://user-gold-cdn.xitu.io/2020/4/3/1713ef17508366e6?imageView2/1/w/104/h/144/q/95/format/webp/interlace/1" class="lazy thumb poster-img loaded" style="background-image: url(&quot;https://user-gold-cdn.xitu.io/2020/4/3/1713ef17508366e6?imageView2/1/w/104/h/144/q/95/format/webp/interlace/1&quot;); background-size: cover;"></div></div><div data-v-29edf5b4="" class="content-text"><div data-v-29edf5b4="" class="title">基于 NodeJS 构建 GraphQL API 服务</div><div data-v-29edf5b4="" class="price"><div data-v-29edf5b4="" class="new">新人价 ￥9.95</div><div data-v-29edf5b4="" class="delete">￥19.9</div></div></div></a></div></div><div data-v-6632cf8f="" class="book-newuser"><div data-v-6632cf8f="" class="newuser-title"><span data-v-6632cf8f="">新人专享好礼</span></div><div data-v-6632cf8f="" class="giftbag"><img data-v-6632cf8f="" src="./Typescript玩转设计模式 之 对象行为型模式（下） - 掘金_files/45.b99ea03.svg"><div data-v-6632cf8f="" class="content-text"><div data-v-6632cf8f="" class="title">送你<span data-v-6632cf8f="" class="highlight">45元</span>买小册</div><div data-v-6632cf8f="" class="btn-box"><div data-v-6632cf8f="" class="btn-giftbag">立即领取</div></div></div></div></div></div><!----><!----><div data-v-352419ce="" data-v-6930df48="" data-v-2184ead4="" class="sidebar-block related-entry-sidebar-block shadow" st:block="relatedEntrySidebarBlock"><div data-v-352419ce="" class="block-title">相关文章</div><div data-v-352419ce="" class="block-body"><div data-v-6930df48="" data-v-352419ce="" class="entry-list"><a data-v-6930df48="" href="https://juejin.im/post/59cb0d0b5188257e876a2d27" target="_blank" rel="" st:name="link" class="item" data-v-352419ce=""><div data-v-6930df48="" class="entry-title">如何管理好10万行代码的前端单页面应用</div><div data-v-6930df48="" class="entry-meta-box"><div data-v-6930df48="" class="entry-meta"><img data-v-6930df48="" src="./Typescript玩转设计模式 之 对象行为型模式（下） - 掘金_files/zan.e9d7698.svg" class="icon"><span data-v-6930df48="" class="count">1503</span></div><div data-v-6930df48="" class="entry-meta"><img data-v-6930df48="" src="./Typescript玩转设计模式 之 对象行为型模式（下） - 掘金_files/comment.a7c8341.svg" class="icon"><span data-v-6930df48="" class="count">96</span></div></div></a><a data-v-6930df48="" href="https://juejin.im/post/5b304f1f51882574c72f19b0" target="_blank" rel="" st:name="link" class="item" data-v-352419ce=""><div data-v-6930df48="" class="entry-title">Webpack 4 配置最佳实践</div><div data-v-6930df48="" class="entry-meta-box"><div data-v-6930df48="" class="entry-meta"><img data-v-6930df48="" src="./Typescript玩转设计模式 之 对象行为型模式（下） - 掘金_files/zan.e9d7698.svg" class="icon"><span data-v-6930df48="" class="count">1643</span></div><div data-v-6930df48="" class="entry-meta"><img data-v-6930df48="" src="./Typescript玩转设计模式 之 对象行为型模式（下） - 掘金_files/comment.a7c8341.svg" class="icon"><span data-v-6930df48="" class="count">35</span></div></div></a><a data-v-6930df48="" href="https://juejin.im/post/5ae97bd05188256719521ae0" target="_blank" rel="" st:name="link" class="item" data-v-352419ce=""><div data-v-6930df48="" class="entry-title">如何在疲劳的JS世界中持续学习</div><div data-v-6930df48="" class="entry-meta-box"><div data-v-6930df48="" class="entry-meta"><img data-v-6930df48="" src="./Typescript玩转设计模式 之 对象行为型模式（下） - 掘金_files/zan.e9d7698.svg" class="icon"><span data-v-6930df48="" class="count">1631</span></div><div data-v-6930df48="" class="entry-meta"><img data-v-6930df48="" src="./Typescript玩转设计模式 之 对象行为型模式（下） - 掘金_files/comment.a7c8341.svg" class="icon"><span data-v-6930df48="" class="count">47</span></div></div></a><a data-v-6930df48="" href="https://juejin.im/post/5b07caf16fb9a07aa83f2977" target="_blank" rel="" st:name="link" class="item" data-v-352419ce=""><div data-v-6930df48="" class="entry-title">TypeScript 2.8下的终极React组件模式</div><div data-v-6930df48="" class="entry-meta-box"><div data-v-6930df48="" class="entry-meta"><img data-v-6930df48="" src="./Typescript玩转设计模式 之 对象行为型模式（下） - 掘金_files/zan.e9d7698.svg" class="icon"><span data-v-6930df48="" class="count">770</span></div><div data-v-6930df48="" class="entry-meta"><img data-v-6930df48="" src="./Typescript玩转设计模式 之 对象行为型模式（下） - 掘金_files/comment.a7c8341.svg" class="icon"><span data-v-6930df48="" class="count">50</span></div></div></a><a data-v-6930df48="" href="https://juejin.im/post/5afe3735518825426539afce" target="_blank" rel="" st:name="link" class="item" data-v-352419ce=""><div data-v-6930df48="" class="entry-title">如何阅读大型前端开源项目的源码</div><div data-v-6930df48="" class="entry-meta-box"><div data-v-6930df48="" class="entry-meta"><img data-v-6930df48="" src="./Typescript玩转设计模式 之 对象行为型模式（下） - 掘金_files/zan.e9d7698.svg" class="icon"><span data-v-6930df48="" class="count">1371</span></div><div data-v-6930df48="" class="entry-meta"><img data-v-6930df48="" src="./Typescript玩转设计模式 之 对象行为型模式（下） - 掘金_files/comment.a7c8341.svg" class="icon"><span data-v-6930df48="" class="count">53</span></div></div></a></div></div></div><div data-v-2184ead4="" class="sticky-block-box"><div data-v-352419ce="" data-v-2afe7226="" data-v-2184ead4="" class="sidebar-block catalog-block pure"><nav data-v-5094e7bc="" data-v-2afe7226="" class="article-catalog" data-v-352419ce="" style=""><div data-v-5094e7bc="" class="catalog-title">目录</div><div data-v-5094e7bc="" class="catalog-body"><ul data-v-5094e7bc="" class="catalog-list" style="margin-top: 0px;"><li data-v-5094e7bc="" class="item d1"><a href="https://juejin.im/post/5a77211b6fb9a0635774d61a#heading-0" title="Observer（观察者）">Observer（观察者）</a><ul class="sub-list"><li class="item d2"><a href="https://juejin.im/post/5a77211b6fb9a0635774d61a#heading-1" title="意图">意图</a><!----></li><li class="item d2"><a href="https://juejin.im/post/5a77211b6fb9a0635774d61a#heading-2" title="结构">结构</a><!----></li><li class="item d2"><a href="https://juejin.im/post/5a77211b6fb9a0635774d61a#heading-3" title="示例">示例</a><ul class="sub-list"><li class="item d3 active"><a href="https://juejin.im/post/5a77211b6fb9a0635774d61a#heading-4" title="推模型">推模型</a><!----></li><li class="item d3"><a href="https://juejin.im/post/5a77211b6fb9a0635774d61a#heading-5" title="拉模型">拉模型</a><!----></li></ul></li><li class="item d2"><a href="https://juejin.im/post/5a77211b6fb9a0635774d61a#heading-6" title="适用场景">适用场景</a><!----></li><li class="item d2"><a href="https://juejin.im/post/5a77211b6fb9a0635774d61a#heading-7" title="优点">优点</a><!----></li><li class="item d2"><a href="https://juejin.im/post/5a77211b6fb9a0635774d61a#heading-8" title="缺点">缺点</a><!----></li><li class="item d2"><a href="https://juejin.im/post/5a77211b6fb9a0635774d61a#heading-9" title="相关模式">相关模式</a><!----></li></ul></li><li data-v-5094e7bc="" class="item d1"><a href="https://juejin.im/post/5a77211b6fb9a0635774d61a#heading-10" title="State（状态）">State（状态）</a><ul class="sub-list"><li class="item d2"><a href="https://juejin.im/post/5a77211b6fb9a0635774d61a#heading-11" title="意图">意图</a><!----></li><li class="item d2"><a href="https://juejin.im/post/5a77211b6fb9a0635774d61a#heading-12" title="结构">结构</a><!----></li><li class="item d2"><a href="https://juejin.im/post/5a77211b6fb9a0635774d61a#heading-13" title="示例">示例</a><!----></li><li class="item d2"><a href="https://juejin.im/post/5a77211b6fb9a0635774d61a#heading-14" title="适用场景">适用场景</a><!----></li><li class="item d2"><a href="https://juejin.im/post/5a77211b6fb9a0635774d61a#heading-15" title="优点">优点</a><!----></li><li class="item d2"><a href="https://juejin.im/post/5a77211b6fb9a0635774d61a#heading-16" title="缺点">缺点</a><!----></li><li class="item d2"><a href="https://juejin.im/post/5a77211b6fb9a0635774d61a#heading-17" title="相关模式">相关模式</a><!----></li></ul></li><li data-v-5094e7bc="" class="item d1"><a href="https://juejin.im/post/5a77211b6fb9a0635774d61a#heading-18" title="Strategy（策略模式）">Strategy（策略模式）</a><ul class="sub-list"><li class="item d2"><a href="https://juejin.im/post/5a77211b6fb9a0635774d61a#heading-19" title="意图">意图</a><!----></li><li class="item d2"><a href="https://juejin.im/post/5a77211b6fb9a0635774d61a#heading-20" title="结构">结构</a><!----></li><li class="item d2"><a href="https://juejin.im/post/5a77211b6fb9a0635774d61a#heading-21" title="示例">示例</a><!----></li><li class="item d2"><a href="https://juejin.im/post/5a77211b6fb9a0635774d61a#heading-22" title="适用场景">适用场景</a><!----></li><li class="item d2"><a href="https://juejin.im/post/5a77211b6fb9a0635774d61a#heading-23" title="优点">优点</a><!----></li><li class="item d2"><a href="https://juejin.im/post/5a77211b6fb9a0635774d61a#heading-24" title="缺点">缺点</a><!----></li><li class="item d2"><a href="https://juejin.im/post/5a77211b6fb9a0635774d61a#heading-25" title="相关模式">相关模式</a><!----></li></ul></li><li data-v-5094e7bc="" class="item d1"><a href="https://juejin.im/post/5a77211b6fb9a0635774d61a#heading-26" title="Template Method（模板方法）">Template Method（模板方法）</a><ul class="sub-list"><li class="item d2"><a href="https://juejin.im/post/5a77211b6fb9a0635774d61a#heading-27" title="意图">意图</a><!----></li><li class="item d2"><a href="https://juejin.im/post/5a77211b6fb9a0635774d61a#heading-28" title="结构">结构</a><!----></li><li class="item d2"><a href="https://juejin.im/post/5a77211b6fb9a0635774d61a#heading-29" title="示例">示例</a><!----></li><li class="item d2"><a href="https://juejin.im/post/5a77211b6fb9a0635774d61a#heading-30" title="适用场景">适用场景</a><!----></li><li class="item d2"><a href="https://juejin.im/post/5a77211b6fb9a0635774d61a#heading-31" title="优点">优点</a><!----></li><li class="item d2"><a href="https://juejin.im/post/5a77211b6fb9a0635774d61a#heading-32" title="缺点">缺点</a><!----></li><li class="item d2"><a href="https://juejin.im/post/5a77211b6fb9a0635774d61a#heading-33" title="相关模式">相关模式</a><!----></li></ul></li><li data-v-5094e7bc="" class="item d1"><a href="https://juejin.im/post/5a77211b6fb9a0635774d61a#heading-34" title="访问者模式">访问者模式</a><ul class="sub-list"><li class="item d2"><a href="https://juejin.im/post/5a77211b6fb9a0635774d61a#heading-35" title="意图">意图</a><!----></li><li class="item d2"><a href="https://juejin.im/post/5a77211b6fb9a0635774d61a#heading-36" title="结构">结构</a><!----></li><li class="item d2"><a href="https://juejin.im/post/5a77211b6fb9a0635774d61a#heading-37" title="示例">示例</a><!----></li><li class="item d2"><a href="https://juejin.im/post/5a77211b6fb9a0635774d61a#heading-38" title="适用场景">适用场景</a><!----></li><li class="item d2"><a href="https://juejin.im/post/5a77211b6fb9a0635774d61a#heading-39" title="优点">优点</a><!----></li><li class="item d2"><a href="https://juejin.im/post/5a77211b6fb9a0635774d61a#heading-40" title="缺点">缺点</a><!----></li><li class="item d2"><a href="https://juejin.im/post/5a77211b6fb9a0635774d61a#heading-41" title="相关模式">相关模式</a><!----></li></ul></li><li data-v-5094e7bc="" class="item d1"><a href="https://juejin.im/post/5a77211b6fb9a0635774d61a#heading-42" title="参考文档">参考文档</a><!----></li></ul></div></nav></div></div></div><div data-v-77aa2e39="" data-v-50ff96fb="" class="article-suspended-panel article-suspended-panel" data-v-0f848c07=""><div data-v-77aa2e39="" badge="80" class="like-btn panel-btn like-adjust with-badge"></div><div data-v-77aa2e39="" badge="4" class="comment-btn panel-btn comment-adjust with-badge"></div><div data-v-77aa2e39="" class="collect-btn panel-btn"><!----></div><div data-v-77aa2e39="" class="share-title">分享</div><div data-v-77aa2e39="" class="weibo-btn share-btn panel-btn"></div><div data-v-77aa2e39="" class="qq-btn share-btn panel-btn"></div><div data-v-77aa2e39="" class="wechat-btn share-btn panel-btn"><img data-v-77aa2e39="" src="https://juejin.im/post/5a77211b6fb9a0635774d61a" class="wechat-qr-code-img shadow" style="display: none;"></div></div><div data-v-ddb41540="" data-v-50ff96fb="" class="image-viewer-box" data-v-0f848c07=""><!----></div><!----></div></main></div><!----></div>
      
      
      
      <script type="text/javascript" src="./Typescript玩转设计模式 之 对象行为型模式（下） - 掘金_files/runtime.cdc821c8220e297137a0.js"></script><script type="text/javascript" src="./Typescript玩转设计模式 之 对象行为型模式（下） - 掘金_files/0.76f0edba643f9ca4fdec.js"></script><script type="text/javascript" src="./Typescript玩转设计模式 之 对象行为型模式（下） - 掘金_files/1.33e55539d1cddee86add.js"></script>
    </body></html>