(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{178:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"其他"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其他"}},[t._v("#")]),t._v(" 其他")]),t._v(" "),a("h2",{attrs:{id:"一、css"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、css"}},[t._v("#")]),t._v(" 一、CSS")]),t._v(" "),a("h3",{attrs:{id:"_1-盒模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-盒模型"}},[t._v("#")]),t._v(" 1. 盒模型")]),t._v(" "),a("blockquote",[a("p",[t._v("页面渲染时，"),a("code",[t._v("dom")]),t._v(" 元素所采用的 布局模型。可通过"),a("code",[t._v("box-sizing")]),t._v("进行设置。根据计算宽高的区域可分为")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("content-box")]),t._v(" ("),a("code",[t._v("W3C")]),t._v(" 标准盒模型)")]),t._v(" "),a("li",[a("code",[t._v("border-box")]),t._v(" ("),a("code",[t._v("IE")]),t._v(" 盒模型)")]),t._v(" "),a("li",[a("code",[t._v("padding-box")])]),t._v(" "),a("li",[a("code",[t._v("margin-box")]),t._v(" (浏览器未实现)")])]),t._v(" "),a("h3",{attrs:{id:"_2-bfc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-bfc"}},[t._v("#")]),t._v(" 2. BFC")]),t._v(" "),a("blockquote",[a("p",[t._v("块级格式化上下文，是一个独立的渲染区域，让处于 "),a("code",[t._v("BFC")]),t._v(" 内部的元素与外部的元素相互隔离，使内外元素的定位不会相互影响。")])]),t._v(" "),a("blockquote",[a("p",[t._v("IE下为 "),a("code",[t._v("Layout")]),t._v("，可通过 "),a("code",[t._v("zoom:1")]),t._v(" 触发")])]),t._v(" "),a("p",[a("strong",[t._v("触发条件:")])]),t._v(" "),a("ul",[a("li",[t._v("根元素")]),t._v(" "),a("li",[a("code",[t._v("position: absolute/fixed")])]),t._v(" "),a("li",[a("code",[t._v("display: inline-block / table")])]),t._v(" "),a("li",[a("code",[t._v("float")]),t._v(" 元素")]),t._v(" "),a("li",[a("code",[t._v("ovevflow !== visible")])])]),t._v(" "),a("p",[a("strong",[t._v("规则:")])]),t._v(" "),a("ul",[a("li",[t._v("属于同一个 "),a("code",[t._v("BFC")]),t._v(" 的两个相邻 "),a("code",[t._v("Box")]),t._v(" 垂直排列")]),t._v(" "),a("li",[t._v("属于同一个 "),a("code",[t._v("BFC")]),t._v(" 的两个相邻 "),a("code",[t._v("Box")]),t._v(" 的 "),a("code",[t._v("margin")]),t._v(" 会发生重叠")]),t._v(" "),a("li",[a("code",[t._v("BFC")]),t._v(" 中子元素的 "),a("code",[t._v("margin box")]),t._v(" 的左边， 与包含块 (BFC) "),a("code",[t._v("border box")]),t._v("的左边相接触 (子元素 "),a("code",[t._v("absolute")]),t._v(" 除外)")]),t._v(" "),a("li",[a("code",[t._v("BFC")]),t._v(" 的区域不会与 "),a("code",[t._v("float")]),t._v(" 的元素区域重叠")]),t._v(" "),a("li",[t._v("计算 "),a("code",[t._v("BFC")]),t._v(" 的高度时，浮动子元素也参与计算")]),t._v(" "),a("li",[t._v("文字层不会被浮动层覆盖，环绕于周围")])]),t._v(" "),a("p",[a("strong",[t._v("应用:")])]),t._v(" "),a("ul",[a("li",[t._v("阻止"),a("code",[t._v("margin")]),t._v("重叠")]),t._v(" "),a("li",[t._v("可以包含浮动元素 —— 清除内部浮动(清除浮动的原理是两个"),a("code",[t._v("div")]),t._v("都位于同一个 "),a("code",[t._v("BFC")]),t._v(" 区域之中)")]),t._v(" "),a("li",[t._v("自适应两栏布局")]),t._v(" "),a("li",[t._v("可以阻止元素被浮动元素覆盖")])]),t._v(" "),a("h3",{attrs:{id:"_3-层叠上下文"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-层叠上下文"}},[t._v("#")]),t._v(" 3.层叠上下文")]),t._v(" "),a("blockquote",[a("p",[t._v("元素提升为一个比较特殊的图层，在三维空间中 (z轴) 高出普通元素一等。")])]),t._v(" "),a("p",[a("strong",[t._v("触发条件")])]),t._v(" "),a("ul",[a("li",[t._v("根层叠上下文("),a("code",[t._v("html")]),t._v(")")]),t._v(" "),a("li",[a("code",[t._v("position")])]),t._v(" "),a("li",[a("code",[t._v("css3")]),t._v("属性\n"),a("ul",[a("li",[a("code",[t._v("flex")])]),t._v(" "),a("li",[a("code",[t._v("transform")])]),t._v(" "),a("li",[a("code",[t._v("opacity")])]),t._v(" "),a("li",[a("code",[t._v("filter")])]),t._v(" "),a("li",[a("code",[t._v("will-change")])]),t._v(" "),a("li",[a("code",[t._v("webkit-overflow-scrolling")])])])])]),t._v(" "),a("p",[a("strong",[t._v("层叠等级：层叠上下文在z轴上的排序")])]),t._v(" "),a("ul",[a("li",[t._v("在同一层叠上下文中，层叠等级才有意义")]),t._v(" "),a("li",[a("code",[t._v("z-index")]),t._v("的优先级最高")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/2/14/168e9d9f3a1d368b",alt:""}})]),t._v(" "),a("h3",{attrs:{id:"_4-居中布局"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-居中布局"}},[t._v("#")]),t._v(" 4. 居中布局")]),t._v(" "),a("p",[a("strong",[t._v("水平居中")])]),t._v(" "),a("ul",[a("li",[t._v("行内元素: "),a("code",[t._v("text-align: center")])]),t._v(" "),a("li",[t._v("块级元素: "),a("code",[t._v("margin: 0 auto")])]),t._v(" "),a("li",[a("code",[t._v("absolute + transform")])]),t._v(" "),a("li",[a("code",[t._v("flex + justify-content: center")])])]),t._v(" "),a("p",[a("strong",[t._v("垂直居中")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("line-height: height")])]),t._v(" "),a("li",[a("code",[t._v("absolute + transform")])]),t._v(" "),a("li",[a("code",[t._v("flex + align-items: center")])]),t._v(" "),a("li",[a("code",[t._v("table")])])]),t._v(" "),a("p",[a("strong",[t._v("水平垂直居中")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("absolute + transform")])]),t._v(" "),a("li",[a("code",[t._v("flex + justify-content + align-items")])])]),t._v(" "),a("h3",{attrs:{id:"_5-选择器优先级"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-选择器优先级"}},[t._v("#")]),t._v(" 5. 选择器优先级")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("!important")]),t._v(" > 行内样式 > "),a("code",[t._v("#id")]),t._v(" > "),a("code",[t._v(".class")]),t._v(" > "),a("code",[t._v("tag")]),t._v(" > "),a("code",[t._v("*")]),t._v(" > 继承 > 默认")]),t._v(" "),a("li",[t._v("选择器 从右往左 解析")])]),t._v(" "),a("h3",{attrs:{id:"_6-去除浮动影响，防止父级高度塌陷"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-去除浮动影响，防止父级高度塌陷"}},[t._v("#")]),t._v(" 6.去除浮动影响，防止父级高度塌陷")]),t._v(" "),a("ul",[a("li",[t._v("通过增加尾元素清除浮动")]),t._v(" "),a("li",[a("code",[t._v(":after / <br> : clear: both")])]),t._v(" "),a("li",[t._v("创建父级 "),a("code",[t._v("BFC")])]),t._v(" "),a("li",[t._v("父级设置高度")])]),t._v(" "),a("h3",{attrs:{id:"_7-link-与-import-的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-link-与-import-的区别"}},[t._v("#")]),t._v(" 7.link 与 @import 的区别")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("link")]),t._v("功能较多，可以定义 "),a("code",[t._v("RSS")]),t._v("，定义 "),a("code",[t._v("Rel")]),t._v(" 等作用，而"),a("code",[t._v("@import")]),t._v("只能用于加载 "),a("code",[t._v("css")])]),t._v(" "),a("li",[t._v("当解析到"),a("code",[t._v("link")]),t._v("时，页面会同步加载所引的 "),a("code",[t._v("css")]),t._v("，而"),a("code",[t._v("@import")]),t._v("所引用的 "),a("code",[t._v("css")]),t._v(" 会等到页面加载完才被加载")]),t._v(" "),a("li",[a("code",[t._v("@import")]),t._v("需要 "),a("code",[t._v("IE5")]),t._v(" 以上才能使用")]),t._v(" "),a("li",[a("code",[t._v("link")]),t._v("可以使用 "),a("code",[t._v("js")]),t._v(" 动态引入，"),a("code",[t._v("@import")]),t._v("不行")])]),t._v(" "),a("h3",{attrs:{id:"_8-css预处理器-sass-less-postcss"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-css预处理器-sass-less-postcss"}},[t._v("#")]),t._v(" 8. CSS预处理器(Sass/Less/Postcss)")]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("CSS")]),t._v("预处理器的原理: 是将类 "),a("code",[t._v("CSS")]),t._v("语言通过 "),a("code",[t._v("Webpack")]),t._v(" 编译 转成浏览器可读的真正 "),a("code",[t._v("CSS")]),t._v("。在这层编译之上，便可以赋予 "),a("code",[t._v("CSS")]),t._v(" 更多更强大的功能，常用功能:")])]),t._v(" "),a("ul",[a("li",[t._v("嵌套")]),t._v(" "),a("li",[t._v("变量")]),t._v(" "),a("li",[t._v("循环语句")]),t._v(" "),a("li",[t._v("条件语句")]),t._v(" "),a("li",[t._v("自动前缀")]),t._v(" "),a("li",[t._v("单位转换")]),t._v(" "),a("li",[a("code",[t._v("mixin")]),t._v("复用")])]),t._v(" "),a("blockquote",[a("p",[t._v("面试中一般不会重点考察该点，一般介绍下自己在实战项目中的经验即可~")])]),t._v(" "),a("h3",{attrs:{id:"_9-css动画"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-css动画"}},[t._v("#")]),t._v(" 9.CSS动画")]),t._v(" "),a("p",[a("strong",[t._v("transition: 过渡动画")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("transition-property")]),t._v(": 属性")]),t._v(" "),a("li",[a("code",[t._v("transition-duration")]),t._v(": 间隔")]),t._v(" "),a("li",[a("code",[t._v("transition-timing-function")]),t._v(": 曲线")]),t._v(" "),a("li",[a("code",[t._v("transition-delay")]),t._v(": 延迟")]),t._v(" "),a("li",[t._v("常用钩子: "),a("code",[t._v("transitionend")])])]),t._v(" "),a("p",[a("strong",[t._v("animation / keyframes")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("animation-name")]),t._v(": 动画名称，对应"),a("code",[t._v("@keyframes")])]),t._v(" "),a("li",[a("code",[t._v("animation-duration")]),t._v(": 间隔")]),t._v(" "),a("li",[a("code",[t._v("animation-timing-function")]),t._v(": 曲线")]),t._v(" "),a("li",[a("code",[t._v("animation-delay")]),t._v(": 延迟")]),t._v(" "),a("li",[a("code",[t._v("animation-iteration-count")]),t._v(": 次数\n"),a("ul",[a("li",[a("code",[t._v("infinite")]),t._v(": 循环动画")])])]),t._v(" "),a("li",[a("code",[t._v("animation-direction")]),t._v(": 方向\n"),a("ul",[a("li",[a("code",[t._v("alternate")]),t._v(": 反向播放")])])]),t._v(" "),a("li",[a("code",[t._v("animation-fill-mode")]),t._v(": 静止模式\n"),a("ul",[a("li",[a("code",[t._v("forwards")]),t._v(": 停止时，保留最后一帧")]),t._v(" "),a("li",[a("code",[t._v("backwards")]),t._v(": 停止时，回到第一帧")]),t._v(" "),a("li",[a("code",[t._v("both")]),t._v(": 同时运用 "),a("code",[t._v("forwards / backwards")])])])]),t._v(" "),a("li",[t._v("常用钩子: "),a("code",[t._v("animationend")])])]),t._v(" "),a("blockquote",[a("p",[t._v("动画属性: 尽量使用动画属性进行动画，能拥有较好的性能表现")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("translate")])]),t._v(" "),a("li",[a("code",[t._v("scale")])]),t._v(" "),a("li",[a("code",[t._v("rotate")])]),t._v(" "),a("li",[a("code",[t._v("skew")])]),t._v(" "),a("li",[a("code",[t._v("opacity")])]),t._v(" "),a("li",[a("code",[t._v("color")])])]),t._v(" "),a("h2",{attrs:{id:"二、javascript"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二、javascript"}},[t._v("#")]),t._v(" 二、JavaScript")]),t._v(" "),a("h3",{attrs:{id:"_1-原型-构造函数-实例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-原型-构造函数-实例"}},[t._v("#")]),t._v(" 1. 原型 / 构造函数 / 实例")]),t._v(" "),a("ul",[a("li",[t._v("原型("),a("code",[t._v("prototype")]),t._v("): 一个简单的对象，用于实现对象的 属性继承。可以简单的理解成对象的爹。在 "),a("code",[t._v("Firefox")]),t._v(" 和 "),a("code",[t._v("Chrome")]),t._v(" 中，每个"),a("code",[t._v("JavaScript")]),t._v("对象中都包含一个"),a("code",[t._v("__proto__")]),t._v("(非标准)的属性指向它爹(该对象的原型)，可"),a("code",[t._v("obj.__proto__")]),t._v("进行访问。")]),t._v(" "),a("li",[t._v("构造函数: 可以通过"),a("code",[t._v("new")]),t._v("来 新建一个对象 的函数。")]),t._v(" "),a("li",[t._v("实例: 通过构造函数和"),a("code",[t._v("new")]),t._v("创建出来的对象，便是实例。 实例通过"),a("code",[t._v("__proto__")]),t._v("指向原型，通过"),a("code",[t._v("constructor")]),t._v("指向构造函数。")])]),t._v(" "),a("blockquote",[a("p",[t._v("以"),a("code",[t._v("Object")]),t._v("为例，我们常用的"),a("code",[t._v("Object")]),t._v("便是一个构造函数，因此我们可以通过它构建实例。")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 实例")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" instance "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("则此时， 实例为"),a("code",[t._v("instance")]),t._v(", 构造函数为"),a("code",[t._v("Object")]),t._v("，我们知道，构造函数拥有一个"),a("code",[t._v("prototype")]),t._v("的属性指向原型，因此原型为:")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 原型")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" prototype "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype\n")])])]),a("p",[a("strong",[t._v("这里我们可以来看出三者的关系:")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("实例.__proto__ === 原型")])]),t._v(" "),a("li",[a("code",[t._v("原型.constructor === 构造函数")])]),t._v(" "),a("li",[a("code",[t._v("构造函数.prototype === 原型")])])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("// 这条线其实是是基于原型进行获取的，可以理解成一条基于原型的映射线\n// 例如: \n// const o = new Object()\n// o.constructor === Object   --\x3e true\n// o.__proto__ = null;\n// o.constructor === Object   --\x3e false\n实例.constructor === 构造函数\n")])])]),a("p",[a("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/2/14/168e9d9b940c4c6f",alt:""}})]),t._v(" "),a("h3",{attrs:{id:"_2-原型链："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-原型链："}},[t._v("#")]),t._v(" 2.原型链：")]),t._v(" "),a("blockquote",[a("p",[t._v("原型链是由原型对象组成，每个对象都有 "),a("code",[t._v("__proto__")]),t._v(" 属性，指向了创建该对象的构造函数的原型，"),a("code",[t._v("__proto__")]),t._v(" 将对象连接起来组成了原型链。是一个用来实现继承和共享属性的有限的对象链")])]),t._v(" "),a("ul",[a("li",[t._v("属性查找机制: 当查找对象的属性时，如果实例对象自身不存在该属性，则沿着原型链往上一级查找，找到时则输出，不存在时，则继续沿着原型链往上一级查找，直至最顶级的原型对象"),a("code",[t._v("Object.prototype")]),t._v("，如还是没找到，则输出"),a("code",[t._v("undefined")]),t._v("；")]),t._v(" "),a("li",[t._v("属性修改机制: 只会修改实例对象本身的属性，如果不存在，则进行添加该属性，如果需要修改原型的属性时，则可以用: "),a("code",[t._v("b.prototype.x = 2")]),t._v("；但是这样会造成所有继承于该对象的实例的属性发生改变。")])]),t._v(" "),a("h3",{attrs:{id:"_3-执行上下文-ec"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-执行上下文-ec"}},[t._v("#")]),t._v(" 3. 执行上下文(EC)")]),t._v(" "),a("blockquote",[a("p",[t._v("执行上下文可以简单理解为一个对象:")])]),t._v(" "),a("p",[a("strong",[t._v("它包含三个部分:")])]),t._v(" "),a("ul",[a("li",[t._v("变量对象("),a("code",[t._v("VO")]),t._v(")")]),t._v(" "),a("li",[t._v("作用域链(词法作用域)")]),t._v(" "),a("li",[a("code",[t._v("this")]),t._v("指向")])]),t._v(" "),a("p",[a("strong",[t._v("它的类型:")])]),t._v(" "),a("ul",[a("li",[t._v("全局执行上下文")]),t._v(" "),a("li",[t._v("函数执行上下文")]),t._v(" "),a("li",[a("code",[t._v("eval")]),t._v("执行上下文")])]),t._v(" "),a("p",[a("strong",[t._v("代码执行过程:")])]),t._v(" "),a("ul",[a("li",[t._v("创建 全局上下文 ("),a("code",[t._v("global EC")]),t._v(")")]),t._v(" "),a("li",[t._v("全局执行上下文 ("),a("code",[t._v("caller")]),t._v(") 逐行 自上而下 执行。遇到函数时，函数执行上下文 ("),a("code",[t._v("callee")]),t._v(") 被"),a("code",[t._v("push")]),t._v("到执行栈顶层")]),t._v(" "),a("li",[t._v("函数执行上下文被激活，成为 "),a("code",[t._v("active EC")]),t._v(", 开始执行函数中的代码，"),a("code",[t._v("caller")]),t._v(" 被挂起")]),t._v(" "),a("li",[t._v("函数执行完后，"),a("code",[t._v("callee")]),t._v(" 被"),a("code",[t._v("pop")]),t._v("移除出执行栈，控制权交还全局上下文 ("),a("code",[t._v("caller")]),t._v(")，继续执行")])]),t._v(" "),a("h3",{attrs:{id:"_4-变量对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-变量对象"}},[t._v("#")]),t._v(" 4.变量对象")]),t._v(" "),a("ul",[a("li",[t._v("变量对象，是执行上下文中的一部分，可以抽象为一种 数据作用域，其实也可以理解为就是一个简单的对象，它存储着该执行上下文中的所有 变量和函数声明(不包含函数表达式)。")]),t._v(" "),a("li",[t._v("活动对象 ("),a("code",[t._v("AO")]),t._v("): 当变量对象所处的上下文为 "),a("code",[t._v("active EC")]),t._v(" 时，称为活动对象。")])]),t._v(" "),a("h3",{attrs:{id:"_5-作用域"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-作用域"}},[t._v("#")]),t._v(" 5. 作用域")]),t._v(" "),a("blockquote",[a("p",[t._v("执行上下文中还包含作用域链。理解作用域之前，先介绍下作用域。作用域其实可理解为该上下文中声明的 变量和声明的作用范围。可分为 块级作用域 和 函数作用域")])]),t._v(" "),a("p",[a("strong",[t._v("特性:")])]),t._v(" "),a("ul",[a("li",[t._v("声明提前: 一个声明在函数体内都是可见的, 函数优先于变量")]),t._v(" "),a("li",[t._v("非匿名自执行函数，函数变量为 只读 状态，无法修改")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("foo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    foo "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 由于foo在函数中只为可读，因此赋值无效")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("foo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 结果打印：  ƒ foo() { foo = 10 ; console.log(foo) }")]),t._v("\n")])])]),a("h3",{attrs:{id:"_6-作用域链"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-作用域链"}},[t._v("#")]),t._v(" 6.作用域链")]),t._v(" "),a("blockquote",[a("p",[t._v("我们知道，我们可以在执行上下文中访问到父级甚至全局的变量，这便是作用域链的功劳。作用域链可以理解为一组对象列表，包含 父级和自身的变量对象，因此我们便能通过作用域链访问到父级里声明的变量或者函数。")])]),t._v(" "),a("p",[a("strong",[t._v("由两部分组成:")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("[[scope]]")]),t._v("属性: 指向父级变量对象和作用域链，也就是包含了父级的"),a("code",[t._v("[[scope]]")]),t._v("和"),a("code",[t._v("AO")])]),t._v(" "),a("li",[a("code",[t._v("AO")]),t._v(": 自身活动对象")])]),t._v(" "),a("blockquote",[a("p",[t._v("如此 "),a("code",[t._v("[[scopr]]")]),t._v("包含"),a("code",[t._v("[[scope]]")]),t._v("，便自上而下形成一条 链式作用域。")])]),t._v(" "),a("h3",{attrs:{id:"_7-闭包"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-闭包"}},[t._v("#")]),t._v(" 7. 闭包")]),t._v(" "),a("blockquote",[a("p",[t._v("闭包属于一种特殊的作用域，称为 静态作用域。它的定义可以理解为: 父函数被销毁 的情况下，返回出的子函数的"),a("code",[t._v("[[scope]]")]),t._v("中仍然保留着父级的单变量对象和作用域链，因此可以继续访问到父级的变量对象，这样的函数称为闭包。")])]),t._v(" "),a("p",[a("strong",[t._v("闭包会产生一个很经典的问题:")])]),t._v(" "),a("blockquote",[a("p",[t._v("多个子函数的"),a("code",[t._v("[[scope]]")]),t._v("都是同时指向父级，是完全共享的。因此当父级的变量对象被修改时，所有子函数都受到影响。")])]),t._v(" "),a("p",[t._v("••解决:**")]),t._v(" "),a("ul",[a("li",[t._v("变量可以通过 函数参数的形式 传入，避免使用默认的"),a("code",[t._v("[[scope]]")]),t._v("向上查找")]),t._v(" "),a("li",[t._v("使用"),a("code",[t._v("setTimeout")]),t._v("包裹，通过第三个参数传入")]),t._v(" "),a("li",[t._v("使用 块级作用域，让变量成为自己上下文的属性，避免共享")])]),t._v(" "),a("h3",{attrs:{id:"_8-script-引入方式："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-script-引入方式："}},[t._v("#")]),t._v(" 8. script 引入方式：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("html")]),t._v(" 静态"),a("code",[t._v("<script>")]),t._v("引入")]),t._v(" "),a("li",[a("code",[t._v("js")]),t._v(" 动态插入"),a("code",[t._v("<script>")])]),t._v(" "),a("li",[a("code",[t._v("<script defer>")]),t._v(": 异步加载，元素解析完成后执行")]),t._v(" "),a("li",[a("code",[t._v("<script async>")]),t._v(": 异步加载，但执行时会阻塞元素渲染")])]),t._v(" "),a("h3",{attrs:{id:"_9-对象的拷贝"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-对象的拷贝"}},[t._v("#")]),t._v(" 9. 对象的拷贝")]),t._v(" "),a("p",[a("strong",[t._v("浅拷贝: 以赋值的形式拷贝引用对象，仍指向同一个地址，修改时原对象也会受到影响")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("Object.assign")])]),t._v(" "),a("li",[t._v("展开运算符("),a("code",[t._v("...")]),t._v(")")])]),t._v(" "),a("p",[a("strong",[t._v("深拷贝: 完全拷贝一个新对象，修改时原对象不再受到任何影响")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("JSON.parse(JSON.stringify(obj))")]),t._v(": 性能最快")]),t._v(" "),a("li",[t._v("具有循环引用的对象时，报错")]),t._v(" "),a("li",[t._v("当值为函数、"),a("code",[t._v("undefined")]),t._v("、或"),a("code",[t._v("symbol")]),t._v("时，无法拷贝")]),t._v(" "),a("li",[t._v("递归进行逐一赋值")])]),t._v(" "),a("h3",{attrs:{id:"_10-new运算符的执行过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_10-new运算符的执行过程"}},[t._v("#")]),t._v(" 10. new运算符的执行过程")]),t._v(" "),a("ul",[a("li",[t._v("新生成一个对象")]),t._v(" "),a("li",[t._v("链接到原型: "),a("code",[t._v("obj.__proto__ = Con.prototype")])]),t._v(" "),a("li",[t._v("绑定"),a("code",[t._v("this: apply")])]),t._v(" "),a("li",[t._v("返回新对象(如果构造函数有自己 "),a("code",[t._v("retrun")]),t._v(" 时，则返回该值)")])]),t._v(" "),a("h3",{attrs:{id:"_11-instanceof原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_11-instanceof原理"}},[t._v("#")]),t._v(" 11. instanceof原理")]),t._v(" "),a("blockquote",[a("p",[t._v("能在实例的 原型对象链 中找到该构造函数的"),a("code",[t._v("prototype")]),t._v("属性所指向的 原型对象，就返回"),a("code",[t._v("true")]),t._v("。即:")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// __proto__: 代表原型对象链")]),t._v("\ninstance"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("__proto__"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" instance"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("constructor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// return true")]),t._v("\n")])])]),a("h3",{attrs:{id:"_12-代码的复用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_12-代码的复用"}},[t._v("#")]),t._v(" 12. 代码的复用")]),t._v(" "),a("blockquote",[a("p",[t._v("当你发现任何代码开始写第二遍时，就要开始考虑如何复用。一般有以下的方式:")])]),t._v(" "),a("ul",[a("li",[t._v("函数封装")]),t._v(" "),a("li",[t._v("继承")]),t._v(" "),a("li",[t._v("复制"),a("code",[t._v("extend")])]),t._v(" "),a("li",[t._v("混入"),a("code",[t._v("mixin")])]),t._v(" "),a("li",[t._v("借用"),a("code",[t._v("apply/call")])])]),t._v(" "),a("h3",{attrs:{id:"_13-继承"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_13-继承"}},[t._v("#")]),t._v(" 13. 继承")]),t._v(" "),a("blockquote",[a("p",[t._v("在 JS 中，继承通常指的便是 原型链继承，也就是通过指定原型，并可以通过原型链继承原型上的属性或者方法。")])]),t._v(" "),a("p",[a("strong",[t._v("最优化: 圣杯模式")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" inherit "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("p")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("F")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("p")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("F")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" p"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\tc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("F")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\tc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("uber "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" p"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\tc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("constructor "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("使用 "),a("code",[t._v("ES6")]),t._v(" 的语法糖 "),a("code",[t._v("class / extends")])])]),t._v(" "),a("h3",{attrs:{id:"_14-类型转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_14-类型转换"}},[t._v("#")]),t._v(" 14. 类型转换")]),t._v(" "),a("blockquote",[a("p",[t._v("大家都知道 JS 中在使用运算符号或者对比符时，会自带隐式转换，规则如下:")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("-、*、/、%")]),t._v("：一律转换成数值后计算")]),t._v(" "),a("li",[a("strong",[t._v("+：")]),t._v(" "),a("ul",[a("li",[t._v("数字 + 字符串 = 字符串， 运算顺序是从左到右")]),t._v(" "),a("li",[t._v("数字 + 对象， 优先调用对象的"),a("code",[t._v("valueOf -> toString")])]),t._v(" "),a("li",[t._v("数字 + "),a("code",[t._v("boolean/null")]),t._v(" -> 数字")]),t._v(" "),a("li",[t._v("数字 + "),a("code",[t._v("undefined")]),t._v(" -> "),a("code",[t._v("NaN")])])])]),t._v(" "),a("li",[a("code",[t._v("[1].toString() === '1'")])]),t._v(" "),a("li",[a("code",[t._v("{}.toString() === '[object object]'")])]),t._v(" "),a("li",[a("code",[t._v("NaN !== NaN")]),t._v(" 、+"),a("code",[t._v("undefined")]),t._v(" 为 "),a("code",[t._v("NaN")])])]),t._v(" "),a("h3",{attrs:{id:"_15-类型判断"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_15-类型判断"}},[t._v("#")]),t._v(" 15. 类型判断")]),t._v(" "),a("blockquote",[a("p",[t._v("判断 "),a("code",[t._v("Target")]),t._v(" 的类型，单单用 "),a("code",[t._v("typeof")]),t._v(" 并无法完全满足，这其实并不是 "),a("code",[t._v("bug")]),t._v("，本质原因是 "),a("code",[t._v("JS")]),t._v(" 的万物皆对象的理论。因此要真正完美判断时，我们需要区分对待:")])]),t._v(" "),a("ul",[a("li",[t._v("基本类型("),a("code",[t._v("null")]),t._v("): 使用 "),a("code",[t._v("String(null)")])]),t._v(" "),a("li",[t._v("基本类型("),a("code",[t._v("string / number / boolean / undefined")]),t._v(") + "),a("code",[t._v("function")]),t._v(": - 直接使用 "),a("code",[t._v("typeof")]),t._v("即可")]),t._v(" "),a("li",[t._v("其余引用类型("),a("code",[t._v("Array / Date / RegExp Error")]),t._v("): 调用"),a("code",[t._v("toString")]),t._v("后根据"),a("code",[t._v("[object XXX]")]),t._v("进行判断")])]),t._v(" "),a("p",[t._v("很稳的判断封装:")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" class2type "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Array Date RegExp Object Error'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("' '")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("forEach")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("e")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" class2type"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'[object '")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" e "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("']'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toLowerCase")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("obj")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'object'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" class2type"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'object'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" obj\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"_16-模块化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_16-模块化"}},[t._v("#")]),t._v(" 16. 模块化")]),t._v(" "),a("blockquote",[a("p",[t._v("模块化开发在现代开发中已是必不可少的一部分，它大大提高了项目的可维护、可拓展和可协作性。通常，我们 在浏览器中使用 "),a("code",[t._v("ES6")]),t._v(" 的模块化支持，在 "),a("code",[t._v("Node")]),t._v(" 中使用 "),a("code",[t._v("commonjs")]),t._v(" 的模块化支持。")])]),t._v(" "),a("p",[a("strong",[t._v("分类:")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("es6: import / export")])]),t._v(" "),a("li",[a("code",[t._v("commonjs: require / module.exports / exports")])]),t._v(" "),a("li",[a("code",[t._v("amd: require / defined")])])]),t._v(" "),a("p",[a("strong",[t._v("require与import的区别")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("require")]),t._v("支持 动态导入，"),a("code",[t._v("import")]),t._v("不支持，正在提案 ("),a("code",[t._v("babel")]),t._v(" 下可支持)")]),t._v(" "),a("li",[a("code",[t._v("require")]),t._v("是 同步 导入，"),a("code",[t._v("impor")]),t._v("t属于 异步 导入")]),t._v(" "),a("li",[a("code",[t._v("require")]),t._v("是 值拷贝，导出值变化不会影响导入值；"),a("code",[t._v("import")]),t._v("指向 内存地址，导入值会随导出值而变化")])]),t._v(" "),a("h3",{attrs:{id:"_17-防抖与节流"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_17-防抖与节流"}},[t._v("#")]),t._v(" 17. 防抖与节流")]),t._v(" "),a("blockquote",[a("p",[t._v("防抖与节流函数是一种最常用的 高频触发优化方式，能对性能有较大的帮助。")])]),t._v(" "),a("ul",[a("li",[t._v("防抖 (debounce): 将多次高频操作优化为只在最后一次执行，通常使用的场景是：用户输入，只需再输入完成后做一次输入校验即可。")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("debounce")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("fn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" wait"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" immediate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" timer "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" args "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arguments\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" context "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("immediate "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("timer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apply")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("timer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("clearTimeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("timer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        timer "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apply")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" wait"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("ul",[a("li",[t._v("节流(throttle): 每隔一段时间后执行一次，也就是降低频率，将高频操作优化成低频操作，通常使用场景: 滚动条事件 或者 "),a("code",[t._v("resize")]),t._v(" 事件，通常每隔 "),a("code",[t._v("100~500 ms")]),t._v("执行一次即可。")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("throttle")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("fn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" wait"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" immediate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" timer "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" callNow "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" immediate\n    \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" context "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            args "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arguments\n\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("callNow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apply")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            callNow "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("timer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            timer "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apply")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                timer "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" wait"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"_18-函数执行改变this"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_18-函数执行改变this"}},[t._v("#")]),t._v(" 18. 函数执行改变this")]),t._v(" "),a("ul",[a("li",[t._v("由于 JS 的设计原理: 在函数中，可以引用运行环境中的变量。因此就需要一个机制来让我们可以在函数体内部获取当前的运行环境，这便是"),a("code",[t._v("this")]),t._v("。")])]),t._v(" "),a("blockquote",[a("p",[t._v("因此要明白 "),a("code",[t._v("this")]),t._v(" 指向，其实就是要搞清楚 函数的运行环境，说人话就是，谁调用了函数。例如")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("obj.fn()")]),t._v("，便是 "),a("code",[t._v("obj")]),t._v(" 调用了函数，既函数中的 "),a("code",[t._v("this === obj")])]),t._v(" "),a("li",[a("code",[t._v("fn()")]),t._v("，这里可以看成 "),a("code",[t._v("window.fn()")]),t._v("，因此 "),a("code",[t._v("this === window")])])]),t._v(" "),a("blockquote",[a("p",[t._v("但这种机制并不完全能满足我们的业务需求，因此提供了三种方式可以手动修改 "),a("code",[t._v("this")]),t._v(" 的指向:")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("call: fn.call(target, 1, 2)")])]),t._v(" "),a("li",[a("code",[t._v("apply: fn.apply(target, [1, 2])")])]),t._v(" "),a("li",[a("code",[t._v("bind: fn.bind(target)(1,2)")])])]),t._v(" "),a("h3",{attrs:{id:"_19-es6-es7"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_19-es6-es7"}},[t._v("#")]),t._v(" 19. ES6/ES7")]),t._v(" "),a("blockquote",[a("p",[t._v("由于 "),a("code",[t._v("Babel")]),t._v("的强大和普及，现在 "),a("code",[t._v("ES6/ES7")]),t._v(" 基本上已经是现代化开发的必备了。通过新的语法糖，能让代码整体更为简洁和易读。")])]),t._v(" "),a("p",[a("strong",[t._v("声明")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("let / const")]),t._v(": 块级作用域、不存在变量提升、暂时性死区、不允许重复声明")]),t._v(" "),a("li",[a("code",[t._v("const")]),t._v(": 声明常量，无法修改")])]),t._v(" "),a("p",[a("strong",[t._v("解构赋值")])]),t._v(" "),a("p",[a("strong",[t._v("class / extend: 类声明与继承")])]),t._v(" "),a("p",[a("strong",[t._v("Set / Map: 新的数据结构")])]),t._v(" "),a("p",[a("strong",[t._v("异步解决方案:")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("Promise")]),t._v("的使用与实现")]),t._v(" "),a("li",[a("code",[t._v("generator")]),t._v(":\n"),a("ul",[a("li",[a("code",[t._v("yield")]),t._v(": 暂停代码")]),t._v(" "),a("li",[a("code",[t._v("next()")]),t._v(": 继续执行代码")])])])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("helloWorld")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("yield")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("yield")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'world'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ending'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" generator "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("helloWorld")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\ngenerator"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// { value: 'hello', done: false }")]),t._v("\n\ngenerator"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// { value: 'world', done: false }")]),t._v("\n\ngenerator"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// { value: 'ending', done: true }")]),t._v("\n\ngenerator"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// { value: undefined, done: true }")]),t._v("\n")])])]),a("blockquote",[a("p",[a("code",[t._v("await / async")]),t._v(": 是"),a("code",[t._v("generator")]),t._v("的语法糖， "),a("code",[t._v("babel")]),t._v("中是基于"),a("code",[t._v("promise")]),t._v("实现。")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getUserByAsync")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" user "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fetchUser")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" user"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" user "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getUserByAsync")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("user"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"_20-ast"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_20-ast"}},[t._v("#")]),t._v(" 20. AST")]),t._v(" "),a("blockquote",[a("p",[t._v("抽象语法树 ("),a("code",[t._v("Abstract Syntax Tree")]),t._v(")，是将代码逐字母解析成 树状对象 的形式。这是语言之间的转换、代码语法检查，代码风格检查，代码格式化，代码高亮，代码错误提示，代码自动补全等等的基础。例如:")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("square")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("n")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" n "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("通过解析转化成的AST如下图:")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/2/14/168e9d95910dd187?imageView2/0/w/1280/h/960/format/webp/ignore-error/1",alt:""}})]),t._v(" "),a("h3",{attrs:{id:"_21-babel编译原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_21-babel编译原理"}},[t._v("#")]),t._v(" 21. babel编译原理")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("babylon")]),t._v(" 将 "),a("code",[t._v("ES6/ES7")]),t._v(" 代码解析成 "),a("code",[t._v("AST")])]),t._v(" "),a("li",[a("code",[t._v("babel-traverse")]),t._v(" 对 "),a("code",[t._v("AST")]),t._v(" 进行遍历转译，得到新的 "),a("code",[t._v("AST")])]),t._v(" "),a("li",[t._v("新 AST 通过 "),a("code",[t._v("babel-generator")]),t._v(" 转换成 "),a("code",[t._v("ES5")])])]),t._v(" "),a("h3",{attrs:{id:"_22-函数柯里化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_22-函数柯里化"}},[t._v("#")]),t._v(" 22. 函数柯里化")]),t._v(" "),a("blockquote",[a("p",[t._v("在一个函数中，首先填充几个参数，然后再返回一个新的函数的技术，称为函数的柯里化。通常可用于在不侵入函数的前提下，为函数 预置通用参数，供多次重复调用。")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("add")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("x")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("y")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" y\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" add1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("21")]),t._v("\n")])])]),a("h3",{attrs:{id:"_23-数组-array"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_23-数组-array"}},[t._v("#")]),t._v(" 23. 数组(array)")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("map")]),t._v(": 遍历数组，返回回调返回值组成的新数组")]),t._v(" "),a("li",[a("code",[t._v("forEach")]),t._v(": 无法"),a("code",[t._v("break")]),t._v("，可以用"),a("code",[t._v("try/catch")]),t._v("中"),a("code",[t._v("throw new Error")]),t._v("来停止")]),t._v(" "),a("li",[a("code",[t._v("filter")]),t._v(": 过滤")]),t._v(" "),a("li",[a("code",[t._v("some")]),t._v(": 有一项返回"),a("code",[t._v("true")]),t._v("，则整体为"),a("code",[t._v("true")])]),t._v(" "),a("li",[a("code",[t._v("every")]),t._v(": 有一项返回"),a("code",[t._v("false")]),t._v("，则整体为"),a("code",[t._v("false")])]),t._v(" "),a("li",[a("code",[t._v("join")]),t._v(": 通过指定连接符生成字符串")]),t._v(" "),a("li",[a("code",[t._v("push / pop")]),t._v(": 末尾推入和弹出，改变原数组， 返回推入/弹出项")]),t._v(" "),a("li",[a("code",[t._v("unshift / shift")]),t._v(": 头部推入和弹出，改变原数组，返回操作项")]),t._v(" "),a("li",[a("code",[t._v("sort(fn) / reverse")]),t._v(": 排序与反转，改变原数组")]),t._v(" "),a("li",[a("code",[t._v("concat")]),t._v(": 连接数组，不影响原数组， 浅拷贝")]),t._v(" "),a("li",[a("code",[t._v("slice(start, end)")]),t._v(": 返回截断后的新数组，不改变原数组")]),t._v(" "),a("li",[a("code",[t._v("splice(start, number, value...)")]),t._v(": 返回删除元素组成的数组，"),a("code",[t._v("value")]),t._v("为插入项，改变原数组")]),t._v(" "),a("li",[a("code",[t._v("indexOf / lastIndexOf(value, fromIndex)")]),t._v(": 查找数组项，返回对应的下标")]),t._v(" "),a("li",[a("code",[t._v("reduce / reduceRight(fn(prev, cur)")]),t._v("， "),a("code",[t._v("defaultPrev)")]),t._v(": 两两执行，"),a("code",[t._v("prev")]),t._v(" 为上次化简函数的"),a("code",[t._v("return")]),t._v("值，"),a("code",[t._v("cur")]),t._v("为当前值(从第二项开始)")])]),t._v(" "),a("p",[a("strong",[t._v("数组乱序：")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" arr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\narr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sort")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" Math"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("random")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[a("strong",[t._v("数组拆解: flat: [1,[2,3]] --\x3e [1, 2, 3]")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("flat")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("','")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("map")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("item")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("item "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"三、浏览器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三、浏览器"}},[t._v("#")]),t._v(" 三、浏览器")]),t._v(" "),a("h3",{attrs:{id:"_1-跨标签页通讯"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-跨标签页通讯"}},[t._v("#")]),t._v(" 1. 跨标签页通讯")]),t._v(" "),a("blockquote",[a("p",[t._v("不同标签页间的通讯，本质原理就是去运用一些可以 共享的中间介质，因此比较常用的有以下方法:")])]),t._v(" "),a("ul",[a("li",[t._v("通过父页面"),a("code",[t._v("window.open()")]),t._v("和子页面"),a("code",[t._v("postMessage")]),t._v(" "),a("ul",[a("li",[t._v("异步下，通过 "),a("code",[t._v("window.open('about: blank')")]),t._v(" 和 "),a("code",[t._v("tab.location.href = '*'")])])])]),t._v(" "),a("li",[t._v("设置同域下共享的"),a("code",[t._v("localStorage")]),t._v("与监听"),a("code",[t._v("window.onstorage")]),t._v(" "),a("ul",[a("li",[t._v("重复写入相同的值无法触发")]),t._v(" "),a("li",[t._v("会受到浏览器隐身模式等的限制")])])]),t._v(" "),a("li",[t._v("设置共享"),a("code",[t._v("cookie")]),t._v("与不断轮询脏检查("),a("code",[t._v("setInterval")]),t._v(")")]),t._v(" "),a("li",[t._v("借助服务端或者中间层实现")])]),t._v(" "),a("h3",{attrs:{id:"_2-浏览器架构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-浏览器架构"}},[t._v("#")]),t._v(" 2. 浏览器架构")]),t._v(" "),a("ul",[a("li",[t._v("用户界面")]),t._v(" "),a("li",[t._v("主进程")]),t._v(" "),a("li",[t._v("内核\n"),a("ul",[a("li",[t._v("渲染引擎")]),t._v(" "),a("li",[a("code",[t._v("JS")]),t._v(" 引擎\n"),a("ul",[a("li",[t._v("执行栈")])])])])]),t._v(" "),a("li",[t._v("事件触发线程\n"),a("ul",[a("li",[t._v("消息队列\n"),a("ul",[a("li",[t._v("微任务")]),t._v(" "),a("li",[t._v("宏任务")])])])])]),t._v(" "),a("li",[t._v("网络异步线程")]),t._v(" "),a("li",[t._v("定时器线程")])]),t._v(" "),a("h3",{attrs:{id:"_3-浏览器下事件循环-event-loop"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-浏览器下事件循环-event-loop"}},[t._v("#")]),t._v(" 3. 浏览器下事件循环(Event Loop)")]),t._v(" "),a("blockquote",[a("p",[t._v("事件循环是指: 执行一个宏任务，然后执行清空微任务列表，循环再执行宏任务，再清微任务列表")])]),t._v(" "),a("ul",[a("li",[t._v("微任务 "),a("code",[t._v("microtask(jobs): promise / ajax / Object.observe")]),t._v("(该方法已废弃)")]),t._v(" "),a("li",[t._v("宏任务 "),a("code",[t._v("macrotask(task): setTimout / script / IO / UI Rendering")])])]),t._v(" "),a("h3",{attrs:{id:"_4-从输入-url-到展示的过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-从输入-url-到展示的过程"}},[t._v("#")]),t._v(" 4. 从输入 url 到展示的过程")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("DNS")]),t._v(" 解析")]),t._v(" "),a("li",[a("code",[t._v("TCP")]),t._v(" 三次握手")]),t._v(" "),a("li",[t._v("发送请求，分析 "),a("code",[t._v("url")]),t._v("，设置请求报文(头，主体)")]),t._v(" "),a("li",[t._v("服务器返回请求的文件 ("),a("code",[t._v("html")]),t._v(")")]),t._v(" "),a("li",[t._v("浏览器渲染\n"),a("ul",[a("li",[a("code",[t._v("HTML parser")]),t._v(" --\x3e "),a("code",[t._v("DOM Tree")]),t._v(" "),a("ul",[a("li",[t._v("标记化算法，进行元素状态的标记")]),t._v(" "),a("li",[a("code",[t._v("dom")]),t._v(" 树构建")])])])])]),t._v(" "),a("li",[a("code",[t._v("CSS parser --\x3e Style Tree")]),t._v(" "),a("ul",[a("li",[t._v("解析 "),a("code",[t._v("css")]),t._v(" 代码，生成样式树")])])]),t._v(" "),a("li",[a("code",[t._v("attachment")]),t._v(" --\x3e "),a("code",[t._v("Render Tree")]),t._v(" "),a("ul",[a("li",[t._v("结合 dom树 与 style树，生成渲染树")])])]),t._v(" "),a("li",[a("code",[t._v("layout")]),t._v(": 布局")]),t._v(" "),a("li",[a("code",[t._v("GPU painting")]),t._v(": 像素绘制页面")])]),t._v(" "),a("h3",{attrs:{id:"_5-重绘与回流"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-重绘与回流"}},[t._v("#")]),t._v(" 5. 重绘与回流")]),t._v(" "),a("blockquote",[a("p",[t._v("当元素的样式发生变化时，浏览器需要触发更新，重新绘制元素。这个过程中，有两种类型的操作，即重绘与回流。")])]),t._v(" "),a("blockquote",[a("ul",[a("li",[t._v("重绘(repaint): 当元素样式的改变不影响布局时，浏览器将使用重绘对元素进行更新，此时由于只需要UI层面的重新像素绘制，因此 损耗较少")]),t._v(" "),a("li",[t._v("回流(reflow): 当元素的尺寸、结构或触发某些属性时，浏览器会重新渲染页面，称为回流。此时，浏览器需要重新经过计算，计算后还需要重新页面布局，因此是较重的操作。会触发回流的操作:")])])]),t._v(" "),a("ul",[a("li",[t._v("页面初次渲染")]),t._v(" "),a("li",[t._v("浏览器窗口大小改变")]),t._v(" "),a("li",[t._v("元素尺寸、位置、内容发生改变")]),t._v(" "),a("li",[t._v("元素字体大小变化")]),t._v(" "),a("li",[t._v("添加或者删除可见的 "),a("code",[t._v("dom")]),t._v(" 元素")]),t._v(" "),a("li",[t._v("激活 "),a("code",[t._v("CSS")]),t._v(" 伪类（例如："),a("code",[t._v(":hover")]),t._v("）")]),t._v(" "),a("li",[t._v("查询某些属性或调用某些方法\n"),a("ul",[a("li",[a("code",[t._v("clientWidth、clientHeight、clientTop、clientLeft")])]),t._v(" "),a("li",[a("code",[t._v("offsetWidth、offsetHeight、offsetTop、offsetLeft")])]),t._v(" "),a("li",[a("code",[t._v("scrollWidth、scrollHeight、scrollTop、scrollLeft")])]),t._v(" "),a("li",[a("code",[t._v("getComputedStyle()")])]),t._v(" "),a("li",[a("code",[t._v("getBoundingClientRect()")])]),t._v(" "),a("li",[a("code",[t._v("scrollTo()")])])])])]),t._v(" "),a("blockquote",[a("p",[t._v("回流必定触发重绘，重绘不一定触发回流。重绘的开销较小，回流的代价较高。")])]),t._v(" "),a("p",[a("strong",[t._v("最佳实践:")])]),t._v(" "),a("p",[a("strong",[t._v("css")])]),t._v(" "),a("ul",[a("li",[t._v("避免使用"),a("code",[t._v("table")]),t._v("布局")]),t._v(" "),a("li",[t._v("将动画效果应用到"),a("code",[t._v("position")]),t._v("属性为"),a("code",[t._v("absolute")]),t._v("或"),a("code",[t._v("fixed")]),t._v("的元素上")])]),t._v(" "),a("p",[a("strong",[t._v("javascript")])]),t._v(" "),a("ul",[a("li",[t._v("避免频繁操作样式，可汇总后统一 一次修改")]),t._v(" "),a("li",[t._v("尽量使用"),a("code",[t._v("class")]),t._v("进行样式修改")]),t._v(" "),a("li",[t._v("减少"),a("code",[t._v("dom")]),t._v("的增删次数，可使用 字符串 或者 "),a("code",[t._v("documentFragment")]),t._v(" 一次性插入")]),t._v(" "),a("li",[t._v("极限优化时，修改样式可将其"),a("code",[t._v("display: none")]),t._v("后修改")]),t._v(" "),a("li",[t._v("避免多次触发上面提到的那些会触发回流的方法，可以的话尽量用 变量存住")])]),t._v(" "),a("h3",{attrs:{id:"_6-存储"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-存储"}},[t._v("#")]),t._v(" 6. 存储")]),t._v(" "),a("blockquote",[a("p",[t._v("我们经常需要对业务中的一些数据进行存储，通常可以分为 短暂性存储 和 持久性储存。")])]),t._v(" "),a("ul",[a("li",[t._v("短暂性的时候，我们只需要将数据存在内存中，只在运行时可用")]),t._v(" "),a("li",[t._v("持久性存储，可以分为 浏览器端 与 服务器端\n"),a("ul",[a("li",[t._v("浏览器:\n"),a("ul",[a("li",[a("code",[t._v("cookie")]),t._v(": 通常用于存储用户身份，登录状态等\n"),a("ul",[a("li",[a("code",[t._v("http")]),t._v(" 中自动携带， 体积上限为 "),a("code",[t._v("4K")]),t._v("， 可自行设置过期时间")])])]),t._v(" "),a("li",[a("code",[t._v("localStorage / sessionStorage")]),t._v(": 长久储存/窗口关闭删除， 体积限制为 "),a("code",[t._v("4~5M")])]),t._v(" "),a("li",[a("code",[t._v("indexDB")])])])]),t._v(" "),a("li",[t._v("服务器:\n"),a("ul",[a("li",[t._v("分布式缓存 "),a("code",[t._v("redis")])]),t._v(" "),a("li",[t._v("数据库")])])])])])]),t._v(" "),a("h3",{attrs:{id:"_7-web-worker"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-web-worker"}},[t._v("#")]),t._v(" 7. Web Worker")]),t._v(" "),a("blockquote",[a("p",[t._v("现代浏览器为"),a("code",[t._v("JavaScript")]),t._v("创造的 多线程环境。可以新建并将部分任务分配到"),a("code",[t._v("worker")]),t._v("线程并行运行，两个线程可 独立运行，互不干扰，可通过自带的 消息机制 相互通信。")])]),t._v(" "),a("p",[a("strong",[t._v("基本用法:")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建 worker")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" worker "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Worker")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'work.js'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 向主进程推送消息")]),t._v("\nworker"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("postMessage")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hello World'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 监听主进程来的消息")]),t._v("\nworker"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onmessage")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("event")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Received message '")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("strong",[t._v("限制:")])]),t._v(" "),a("ul",[a("li",[t._v("同源限制")]),t._v(" "),a("li",[t._v("无法使用 "),a("code",[t._v("document / window / alert / confirm")])]),t._v(" "),a("li",[t._v("无法加载本地资源")])]),t._v(" "),a("h3",{attrs:{id:"_8-内存泄露"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-内存泄露"}},[t._v("#")]),t._v(" 8. 内存泄露")]),t._v(" "),a("ul",[a("li",[t._v("意外的全局变量: 无法被回收")]),t._v(" "),a("li",[t._v("定时器: 未被正确关闭，导致所引用的外部变量无法被释放")]),t._v(" "),a("li",[t._v("事件监听: 没有正确销毁 (低版本浏览器可能出现)")]),t._v(" "),a("li",[t._v("闭包: 会导致父级中的变量无法被释放")]),t._v(" "),a("li",[a("code",[t._v("dom")]),t._v(" 引用: "),a("code",[t._v("dom")]),t._v(" 元素被删除时，内存中的引用未被正确清空")])]),t._v(" "),a("blockquote",[a("p",[t._v("可用 "),a("code",[t._v("chrome")]),t._v(" 中的 "),a("code",[t._v("timeline")]),t._v(" 进行内存标记，可视化查看内存的变化情况，找出异常点。")])]),t._v(" "),a("h2",{attrs:{id:"四、服务端与网络"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#四、服务端与网络"}},[t._v("#")]),t._v(" 四、服务端与网络")]),t._v(" "),a("h3",{attrs:{id:"_1-http-https-协议"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-http-https-协议"}},[t._v("#")]),t._v(" 1. http/https 协议")]),t._v(" "),a("p",[a("strong",[t._v("1.0 协议缺陷:")])]),t._v(" "),a("ul",[a("li",[t._v("无法复用链接，完成即断开，重新慢启动和 "),a("code",[t._v("TCP 3")]),t._v("次握手")]),t._v(" "),a("li",[a("code",[t._v("head of line blocking")]),t._v(": 线头阻塞，导致请求之间互相影响")])]),t._v(" "),a("p",[a("strong",[t._v("1.1 改进:")])]),t._v(" "),a("ul",[a("li",[t._v("长连接(默认 "),a("code",[t._v("keep-alive")]),t._v(")，复用")]),t._v(" "),a("li",[a("code",[t._v("host")]),t._v(" 字段指定对应的虚拟站点")]),t._v(" "),a("li",[a("strong",[t._v("新增功能:")]),t._v(" "),a("ul",[a("li",[t._v("断点续传")]),t._v(" "),a("li",[t._v("身份认证")]),t._v(" "),a("li",[t._v("状态管理")]),t._v(" "),a("li",[a("code",[t._v("cache")]),t._v(" 缓存\n"),a("ul",[a("li",[a("code",[t._v("Cache-Control")])]),t._v(" "),a("li",[a("code",[t._v("Expires")])]),t._v(" "),a("li",[a("code",[t._v("Last-Modified")])]),t._v(" "),a("li",[a("code",[t._v("Etag")])])])])])])]),t._v(" "),a("p",[a("strong",[t._v("2.0:")])]),t._v(" "),a("ul",[a("li",[t._v("多路复用")]),t._v(" "),a("li",[t._v("二进制分帧层: 应用层和传输层之间")]),t._v(" "),a("li",[t._v("首部压缩")]),t._v(" "),a("li",[t._v("服务端推送")])]),t._v(" "),a("p",[a("strong",[t._v("https: 较为安全的网络传输协议")])]),t._v(" "),a("ul",[a("li",[t._v("证书(公钥)")]),t._v(" "),a("li",[a("code",[t._v("SSL")]),t._v(" 加密")]),t._v(" "),a("li",[t._v("端口 "),a("code",[t._v("443")])])]),t._v(" "),a("p",[a("strong",[t._v("TCP:")])]),t._v(" "),a("ul",[a("li",[t._v("三次握手")]),t._v(" "),a("li",[t._v("四次挥手")]),t._v(" "),a("li",[t._v("滑动窗口: 流量控制")]),t._v(" "),a("li",[t._v("拥塞处理\n"),a("ul",[a("li",[t._v("慢开始")]),t._v(" "),a("li",[t._v("拥塞避免")]),t._v(" "),a("li",[t._v("快速重传")]),t._v(" "),a("li",[t._v("快速恢复")])])])]),t._v(" "),a("p",[a("strong",[t._v("缓存策略: 可分为 强缓存 和 协商缓存")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("Cache-Control/Expires")]),t._v(": 浏览器判断缓存是否过期，未过期时，直接使用强缓存，"),a("code",[t._v("Cache-Control")]),t._v("的 "),a("code",[t._v("max-age")]),t._v(" 优先级高于 "),a("code",[t._v("Expires")])]),t._v(" "),a("li",[t._v("当缓存已经过期时，使用协商缓存\n"),a("ul",[a("li",[t._v("唯一标识方案: "),a("code",[t._v("Etag")]),t._v("("),a("code",[t._v("response")]),t._v(" 携带) & "),a("code",[t._v("If-None-Match")]),t._v("("),a("code",[t._v("request")]),t._v("携带，上一次返回的 "),a("code",[t._v("Etag")]),t._v("): 服务器判断资源是否被修改")]),t._v(" "),a("li",[t._v("最后一次修改时间: "),a("code",[t._v("Last-Modified(response) & If-Modified-Since")]),t._v("("),a("code",[t._v("request")]),t._v("，上一次返回的"),a("code",[t._v("Last-Modified")]),t._v(")\n"),a("ul",[a("li",[t._v("如果一致，则直接返回 304 通知浏览器使用缓存")]),t._v(" "),a("li",[t._v("如不一致，则服务端返回新的资源")])])])])]),t._v(" "),a("li",[a("code",[t._v("Last-Modified")]),t._v(" 缺点：\n"),a("ul",[a("li",[t._v("周期性修改，但内容未变时，会导致缓存失效")]),t._v(" "),a("li",[t._v("最小粒度只到 "),a("code",[t._v("s")]),t._v("， "),a("code",[t._v("s")]),t._v(" 以内的改动无法检测到")])])]),t._v(" "),a("li",[a("code",[t._v("Etag")]),t._v(" 的优先级高于"),a("code",[t._v("Last-Modified")])])]),t._v(" "),a("h3",{attrs:{id:"_2-常见状态码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-常见状态码"}},[t._v("#")]),t._v(" 2. 常见状态码")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("1xx")]),t._v(": 接受，继续处理")]),t._v(" "),a("li",[a("code",[t._v("200")]),t._v(": 成功，并返回数据")]),t._v(" "),a("li",[a("code",[t._v("201")]),t._v(": 已创建")]),t._v(" "),a("li",[a("code",[t._v("202")]),t._v(": 已接受")]),t._v(" "),a("li",[a("code",[t._v("203")]),t._v(": 成为，但未授权")]),t._v(" "),a("li",[a("code",[t._v("204")]),t._v(": 成功，无内容")]),t._v(" "),a("li",[a("code",[t._v("205")]),t._v(": 成功，重置内容")]),t._v(" "),a("li",[a("code",[t._v("206")]),t._v(": 成功，部分内容")]),t._v(" "),a("li",[a("code",[t._v("301")]),t._v(": 永久移动，重定向")]),t._v(" "),a("li",[a("code",[t._v("302")]),t._v(": 临时移动，可使用原有URI")]),t._v(" "),a("li",[a("code",[t._v("304")]),t._v(": 资源未修改，可使用缓存")]),t._v(" "),a("li",[a("code",[t._v("305")]),t._v(": 需代理访问")]),t._v(" "),a("li",[a("code",[t._v("400")]),t._v(": 请求语法错误")]),t._v(" "),a("li",[a("code",[t._v("401")]),t._v(": 要求身份认证")]),t._v(" "),a("li",[a("code",[t._v("403")]),t._v(": 拒绝请求")]),t._v(" "),a("li",[a("code",[t._v("404")]),t._v(": 资源不存在")]),t._v(" "),a("li",[a("code",[t._v("500")]),t._v(": 服务器错误")])]),t._v(" "),a("h3",{attrs:{id:"_3-get-post"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-get-post"}},[t._v("#")]),t._v(" 3. get / post")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("get")]),t._v(": 缓存、请求长度受限、会被历史保存记录\n"),a("ul",[a("li",[t._v("无副作用(不修改资源)，幂等(请求次数与资源无关)的场景")])])]),t._v(" "),a("li",[a("code",[t._v("post")]),t._v(": 安全、大数据、更多编码类型")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/2/14/168e9d9050b9d08a",alt:""}})]),t._v(" "),a("h3",{attrs:{id:"_4-websocket"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-websocket"}},[t._v("#")]),t._v(" 4. Websocket")]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("Websocket")]),t._v(" 是一个 持久化的协议， 基于 "),a("code",[t._v("http")]),t._v(" ， 服务端可以 主动 "),a("code",[t._v("push")])])]),t._v(" "),a("p",[a("strong",[t._v("兼容：")])]),t._v(" "),a("blockquote",[a("ul",[a("li",[a("code",[t._v("FLASH Socket")])]),t._v(" "),a("li",[t._v("长轮询： 定时发送 "),a("code",[t._v("ajax")])]),t._v(" "),a("li",[a("code",[t._v("long poll")]),t._v("： 发送 --\x3e 有消息时再 "),a("code",[t._v("response")])])])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("new WebSocket(url)")])]),t._v(" "),a("li",[a("code",[t._v("ws.onerror = fn")])]),t._v(" "),a("li",[a("code",[t._v("ws.onclose = fn")])]),t._v(" "),a("li",[a("code",[t._v("ws.onopen = fn")])]),t._v(" "),a("li",[a("code",[t._v("ws.onmessage = fn")])]),t._v(" "),a("li",[a("code",[t._v("ws.send()")])])]),t._v(" "),a("h3",{attrs:{id:"_5-tcp三次握手"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-tcp三次握手"}},[t._v("#")]),t._v(" 5. TCP三次握手")]),t._v(" "),a("blockquote",[a("p",[t._v("建立连接前，客户端和服务端需要通过握手来确认对方:")])]),t._v(" "),a("ul",[a("li",[t._v("客户端发送 "),a("code",[t._v("syn")]),t._v("(同步序列编号) 请求，进入 "),a("code",[t._v("syn_send")]),t._v(" 状态，等待确认")]),t._v(" "),a("li",[t._v("服务端接收并确认 "),a("code",[t._v("syn")]),t._v(" 包后发送 "),a("code",[t._v("syn+ack")]),t._v(" 包，进入 "),a("code",[t._v("syn_recv")]),t._v(" 状态")]),t._v(" "),a("li",[t._v("客户端接收 "),a("code",[t._v("syn+ack")]),t._v(" 包后，发送 "),a("code",[t._v("ack")]),t._v(" 包，双方进入 "),a("code",[t._v("established")]),t._v(" 状态")])]),t._v(" "),a("h3",{attrs:{id:"_6-tcp四次挥手"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-tcp四次挥手"}},[t._v("#")]),t._v(" 6. TCP四次挥手")]),t._v(" "),a("ul",[a("li",[t._v("客户端 -- FIN --\x3e 服务端， FIN—WAIT")]),t._v(" "),a("li",[t._v("服务端 -- ACK --\x3e 客户端， CLOSE-WAIT")]),t._v(" "),a("li",[t._v("服务端 -- ACK,FIN --\x3e 客户端， LAST-ACK")]),t._v(" "),a("li",[t._v("客户端 -- ACK --\x3e 服务端，CLOSED")])]),t._v(" "),a("h3",{attrs:{id:"_7-node-的-event-loop-6个阶段"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-node-的-event-loop-6个阶段"}},[t._v("#")]),t._v(" 7. Node 的 Event Loop: 6个阶段")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("timer")]),t._v(" 阶段: 执行到期的"),a("code",[t._v("setTimeout / setInterval")]),t._v("队列回调")]),t._v(" "),a("li",[a("code",[t._v("I/O")]),t._v(" 阶段: 执行上轮循环残流的"),a("code",[t._v("callback")])]),t._v(" "),a("li",[a("code",[t._v("idle")]),t._v(", "),a("code",[t._v("prepare")])]),t._v(" "),a("li",[a("code",[t._v("poll")]),t._v(": 等待回调\n"),a("ul",[a("li",[a("ol",[a("li",[t._v("执行回调")])])]),t._v(" "),a("li",[a("ol",{attrs:{start:"2"}},[a("li",[t._v("执行定时器")])]),t._v(" "),a("ul",[a("li",[t._v("如有到期的"),a("code",[t._v("setTimeout / setInterval")]),t._v("， 则返回 "),a("code",[t._v("timer")]),t._v(" 阶段")]),t._v(" "),a("li",[t._v("如有"),a("code",[t._v("setImmediate")]),t._v("，则前往 "),a("code",[t._v("check")]),t._v(" 阶段")])])])])]),t._v(" "),a("li",[a("code",[t._v("check")]),t._v(" "),a("ul",[a("li",[t._v("执行"),a("code",[t._v("setImmediate")])])])]),t._v(" "),a("li",[a("code",[t._v("close callbacks")])])]),t._v(" "),a("h3",{attrs:{id:"_8-跨域"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-跨域"}},[t._v("#")]),t._v(" 8. 跨域")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("JSONP")]),t._v(": 利用"),a("code",[t._v("<script>")]),t._v("标签不受跨域限制的特点，缺点是只能支持 "),a("code",[t._v("get")]),t._v(" 请求")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("jsonp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("url"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" jsonpCallback"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" success")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" script "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createElement")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'script'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  script"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("src "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" url\n  script"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("async "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n  script"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("type "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'text/javascript'")]),t._v("\n  window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("jsonpCallback"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("data")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    success "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("success")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("appendChild")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("script"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("ul",[a("li",[t._v("设置 "),a("code",[t._v("CORS: Access-Control-Allow-Origin：*")])]),t._v(" "),a("li",[a("code",[t._v("postMessage")])])]),t._v(" "),a("h3",{attrs:{id:"_9-安全"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-安全"}},[t._v("#")]),t._v(" 9. 安全")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("XSS")]),t._v("攻击: 注入恶意代码\n"),a("ul",[a("li",[a("code",[t._v("cookie")]),t._v(" 设置 "),a("code",[t._v("httpOnly")])]),t._v(" "),a("li",[t._v("转义页面上的输入内容和输出内容")])])]),t._v(" "),a("li",[a("code",[t._v("CSRF")]),t._v(": 跨站请求伪造，防护:\n"),a("ul",[a("li",[a("code",[t._v("get")]),t._v("不修改数据")]),t._v(" "),a("li",[t._v("不被第三方网站访问到用户的 "),a("code",[t._v("cookie")])]),t._v(" "),a("li",[t._v("设置白名单，不被第三方网站请求")]),t._v(" "),a("li",[t._v("请求校验")])])])]),t._v(" "),a("h2",{attrs:{id:"五、框架：vue"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#五、框架：vue"}},[t._v("#")]),t._v(" 五、框架：Vue")]),t._v(" "),a("h3",{attrs:{id:"_1-nexttick"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-nexttick"}},[t._v("#")]),t._v(" 1. nextTick")]),t._v(" "),a("blockquote",[a("p",[t._v("在下次"),a("code",[t._v("dom")]),t._v("更新循环结束之后执行延迟回调，可用于获取更新后的"),a("code",[t._v("dom")]),t._v("状态")])]),t._v(" "),a("ul",[a("li",[t._v("新版本中默认是"),a("code",[t._v("mincrotasks")]),t._v(", "),a("code",[t._v("v-on")]),t._v("中会使用"),a("code",[t._v("macrotasks")])]),t._v(" "),a("li",[a("code",[t._v("macrotasks")]),t._v("任务的实现:\n"),a("ul",[a("li",[a("code",[t._v("setImmediate / MessageChannel / setTimeout")])])])])]),t._v(" "),a("h3",{attrs:{id:"_2-生命周期"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-生命周期"}},[t._v("#")]),t._v(" 2. 生命周期")]),t._v(" "),a("p",[a("strong",[a("em",[t._v("init")])])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("initLifecycle/Event")]),t._v("，往vm上挂载各种属性")]),t._v(" "),a("li",[a("code",[t._v("callHook: beforeCreated")]),t._v(": 实例刚创建")]),t._v(" "),a("li",[a("code",[t._v("initInjection/initState")]),t._v(": 初始化注入和 "),a("code",[t._v("data")]),t._v(" 响应性")]),t._v(" "),a("li",[a("code",[t._v("created: 创建完成，属性已经绑定， 但还未生成真实")]),t._v("dom`")]),t._v(" "),a("li",[t._v("进行元素的挂载： "),a("code",[t._v("$el / vm.$mount()")])]),t._v(" "),a("li",[t._v("是否有"),a("code",[t._v("template")]),t._v(": 解析成 "),a("code",[t._v("render function")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("*.vue")]),t._v("文件: "),a("code",[t._v("vue-loader")]),t._v("会将"),a("code",[t._v("<template>")]),t._v("编译成"),a("code",[t._v("render function")])])])]),t._v(" "),a("li",[a("code",[t._v("beforeMount")]),t._v(": 模板编译/挂载之前")]),t._v(" "),a("li",[t._v("执行"),a("code",[t._v("render function")]),t._v("，生成真实的"),a("code",[t._v("dom")]),t._v("，并替换到"),a("code",[t._v("dom tree")]),t._v("中")]),t._v(" "),a("li",[a("code",[t._v("mounted")]),t._v(": 组件已挂载")])]),t._v(" "),a("p",[a("strong",[t._v("update")])]),t._v(" "),a("ul",[a("li",[t._v("执行"),a("code",[t._v("diff")]),t._v("算法，比对改变是否需要触发"),a("code",[t._v("UI")]),t._v("更新")]),t._v(" "),a("li",[a("code",[t._v("flushScheduleQueue")])]),t._v(" "),a("li",[a("code",[t._v("watcher.before")]),t._v(": 触发"),a("code",[t._v("beforeUpdate")]),t._v("钩子\t- "),a("code",[t._v("watcher.run()")]),t._v(": 执行"),a("code",[t._v("watcher")]),t._v("中的 "),a("code",[t._v("notify")]),t._v("，通知所有依赖项更新UI")]),t._v(" "),a("li",[t._v("触发"),a("code",[t._v("updated")]),t._v("钩子: 组件已更新")]),t._v(" "),a("li",[a("code",[t._v("actived / deactivated(keep-alive)")]),t._v(": 不销毁，缓存，组件激活与失活")]),t._v(" "),a("li",[a("code",[t._v("destroy")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("beforeDestroy")]),t._v(": 销毁开始")]),t._v(" "),a("li",[t._v("销毁自身且递归销毁子组件以及事件监听\n"),a("ul",[a("li",[a("code",[t._v("remove()")]),t._v(": 删除节点")]),t._v(" "),a("li",[a("code",[t._v("watcher.teardown()")]),t._v(": 清空依赖")]),t._v(" "),a("li",[a("code",[t._v("vm.$off()")]),t._v(": 解绑监听")])])]),t._v(" "),a("li",[a("code",[t._v("destroyed")]),t._v(": 完成后触发钩子")])])])]),t._v(" "),a("blockquote",[a("p",[t._v("上面是vue的声明周期的简单梳理，接下来我们直接以代码的形式来完成vue的初始化")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Vue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 初始化Vue实例")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("_init")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 挂载属性")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("initLifeCycle")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 初始化事件系统，钩子函数等")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("initEvent")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 编译slot、vnode")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("initRender")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 触发钩子")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("callHook")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'beforeCreate'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 添加inject功能")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("initInjection")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 完成数据响应性 props/data/watch/computed/methods")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("initState")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 添加 provide 功能")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("initProvide")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 触发钩子")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("callHook")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'created'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\n\t "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 挂载节点")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$options"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("el"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        vm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("$mount")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$options"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("el"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 挂载节点实现")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mountComponent")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("vm")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取 render function")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("options"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("render"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// template to render")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Vue.compile = compileToFunctions")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" render "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("compileToFunctions")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("options"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("render "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" render\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 触发钩子")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("callHook")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'beforeMounte'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 初始化观察者")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// render 渲染 vdom， ")]),t._v("\n    vdom "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" vm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// update: 根据 diff 出的 patchs 挂载成真实的 dom ")]),t._v("\n    vm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("_update")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vdom"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 触发钩子  ")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("callHook")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'mounted'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 更新节点实现")]),t._v("\nfuntion "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("queueWatcher")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("watcher")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("nextTick")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("flushScheduleQueue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 清空队列")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("flushScheduleQueue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 遍历队列中所有修改")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// beforeUpdate")]),t._v("\n        watcher"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("before")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n         \n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 依赖局部更新节点")]),t._v("\n        watcher"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("update")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("callHook")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'updated'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 销毁实例实现")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Vue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("$destory")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 触发钩子")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("callHook")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'beforeDestory'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 自身及子节点")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("remove")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 删除依赖")]),t._v("\n    watcher"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("teardown")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 删除监听")]),t._v("\n    vm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("$off")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 触发钩子")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("callHook")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'destoryed'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"_3-proxy-相比于-defineproperty-的优势"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-proxy-相比于-defineproperty-的优势"}},[t._v("#")]),t._v(" 3. Proxy 相比于 defineProperty 的优势")]),t._v(" "),a("ul",[a("li",[t._v("数组变化也能监听到")]),t._v(" "),a("li",[t._v("不需要深度遍历监听")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" data "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" reactiveData "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Proxy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("target"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"_4-vue-router"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-vue-router"}},[t._v("#")]),t._v(" 4. vue-router")]),t._v(" "),a("p",[a("strong",[t._v("mode")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("hash")])]),t._v(" "),a("li",[a("code",[t._v("history")])])]),t._v(" "),a("p",[a("strong",[t._v("跳转")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("this.$router.push()")])]),t._v(" "),a("li",[a("code",[t._v('<router-link to=""></router-link>')])])]),t._v(" "),a("p",[a("strong",[t._v("占位")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("<router-view></router-view>\n")])])]),a("h3",{attrs:{id:"_5-vuex"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-vuex"}},[t._v("#")]),t._v(" 5. vuex")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("state")]),t._v(": 状态中心")]),t._v(" "),a("li",[a("code",[t._v("mutations")]),t._v(": 更改状态")]),t._v(" "),a("li",[a("code",[t._v("actions")]),t._v(": 异步更改状态")]),t._v(" "),a("li",[a("code",[t._v("getters")]),t._v(": 获取状态")]),t._v(" "),a("li",[a("code",[t._v("modules")]),t._v(": 将"),a("code",[t._v("state")]),t._v("分成多个"),a("code",[t._v("modules")]),t._v("，便于管理")])])])}],!1,null,null,null);s.default=e.exports}}]);