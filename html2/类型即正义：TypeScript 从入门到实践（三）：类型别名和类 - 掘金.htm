<!DOCTYPE html>
<!-- saved from url=(0047)https://juejin.im/post/5e97b3c7518825737e0f88dc -->
<html lang="zh-Hans"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8"><meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1"><meta name="viewport" content="width=device-width,initial-scale=1,user-scalable=no,viewport-fit=cover"><meta name="google-site-verification" content="cCHsgG9ktuCTgWgYfqCJql8AeR4gAne4DTZqztPoirE"><meta name="google-site-verification" content="nPvn9R5NJLsZKTv5VKIbn0OmkRcJ4PC6KdDoTX3n5Mw"><meta name="apple-itunes-app" content="app-id=987739104"><meta name="baidu-site-verification" content="qiK2a1kcFc"><meta name="360-site-verification" content="4c3c7d57d59f0e1a308462fbc7fd7e51"><meta name="sogou_site_verification" content="c49WUDZczQ"><style>body {
        font-size: 16px;
        line-height: 2;
      }
      a, button, input {
        margin: 1rem 1.5rem;
      }
      img {
        width: 0;
        height: 0;
      }
      #juejin {
        overflow-x: hidden;
      }</style><title data-vue-meta="true">类型即正义：TypeScript 从入门到实践（三）：类型别名和类 - 掘金</title><link rel="apple-touch-icon" sizes="180x180" href="https://b-gold-cdn.xitu.io/favicons/v2/apple-touch-icon.png"><link rel="icon" type="image/png" sizes="32x32" href="https://b-gold-cdn.xitu.io/favicons/v2/favicon-32x32.png"><link rel="icon" type="image/png" sizes="16x16" href="https://b-gold-cdn.xitu.io/favicons/v2/favicon-16x16.png"><link rel="manifest" href="https://b-gold-cdn.xitu.io/favicons/v2/manifest.json"><link rel="mask-icon" href="https://b-gold-cdn.xitu.io/favicons/v2/safari-pinned-tab.svg" color="#5bbad5"><link rel="shortcut icon" href="https://b-gold-cdn.xitu.io/favicons/v2/favicon.ico"><meta name="msapplication-config" content="https://b-gold-cdn.xitu.io/favicons/v2/browserconfig.xml"><meta name="theme-color" content="#ffffff"><link rel="search" title="掘金" href="https://b-gold-cdn.xitu.io/conf/search.xml" type="application/opensearchdescription+xml"><link rel="stylesheet" href="./类型即正义：TypeScript 从入门到实践（三）：类型别名和类 - 掘金_files/ionicons.min.css"><link rel="stylesheet" href="./类型即正义：TypeScript 从入门到实践（三）：类型别名和类 - 掘金_files/iconfont.css"><link href="./类型即正义：TypeScript 从入门到实践（三）：类型别名和类 - 掘金_files/0.ca43282eb976179da109.css" rel="stylesheet"><script async="" src="./类型即正义：TypeScript 从入门到实践（三）：类型别名和类 - 掘金_files/hm.js"></script><script async="" src="./类型即正义：TypeScript 从入门到实践（三）：类型别名和类 - 掘金_files/analytics.js"></script><script type="text/javascript" async="" src="./类型即正义：TypeScript 从入门到实践（三）：类型别名和类 - 掘金_files/vds.js"></script><script type="text/javascript" async="" src="./类型即正义：TypeScript 从入门到实践（三）：类型别名和类 - 掘金_files/collect-v.3.2.14.js"></script><script charset="utf-8" src="./类型即正义：TypeScript 从入门到实践（三）：类型别名和类 - 掘金_files/4.4811a1c86fde15d0b829.js"></script><meta data-vmid="keywords" name="keywords" content="TypeScript" data-vue-meta="true"><meta data-vmid="description" name="description" content="我们研发开源了一款基于 Git 进行技术实战教程写作的工具，我们图雀社区的所有教程都是用这款工具写作而成，欢迎 Star 哦 如果你想快速了解如何使用，欢迎阅读我们的 教程文档 哦 学习了注解函数，又了解了类型运算如联合类型和交叉类型，接下来我们来了解一" data-vue-meta="true"></head><body><div id="juejin" data-v-2a21baac=""><div class="global-component-box" data-v-2a21baac=""><!----><div data-v-ba54b7e8="" data-v-2a21baac="" class="alert-list alert-list"></div><div data-v-78376140="" data-v-2a21baac="" class="suspension-panel suspension-panel"><button data-v-78376140="" title="回到顶部" class="btn to-top-btn" style=""><i data-v-78376140="" class="ion-android-arrow-dropup"></i></button><button data-v-78376140="" title="建议反馈" class="btn meiqia-btn" style=""><i data-v-78376140="" class="ion-chatbubble-working"></i></button></div><!----><!----><div class="emoji-barrage" data-v-c9c21dda="" data-v-2a21baac=""><!----></div><div class="book-new-user-award-popup" style="display:none;" data-v-1127fe6e="" data-v-2a21baac=""><div class="content-box" style="display:;" data-v-1127fe6e=""><div class="close ion-close-round" data-v-1127fe6e=""></div><div class="header" data-v-1127fe6e=""><div class="icon" data-v-1127fe6e=""><img src="./类型即正义：TypeScript 从入门到实践（三）：类型别名和类 - 掘金_files/icon.a87e5ae.svg" data-v-1127fe6e=""></div><div class="txt" data-v-1127fe6e="">新人专享好礼</div></div><div class="desc" data-v-1127fe6e="">凡未购买过小册的用户，均可领取三张 5 折新人专享券，购买小册时自动使用专享券，最高可节省 45 元。</div><div class="tickets" data-v-1127fe6e=""><div class="ticket" data-v-1127fe6e=""><div class="ticket__inner" data-v-1127fe6e=""><div class="enjoy" data-v-1127fe6e=""><span class="new-title" data-v-1127fe6e="">小册新人 5 折券</span></div><div class="sale" data-v-1127fe6e="">最高可省 15 元</div></div></div><div class="ticket" data-v-1127fe6e=""><div class="ticket__inner" data-v-1127fe6e=""><div class="enjoy" data-v-1127fe6e=""><span class="new-title" data-v-1127fe6e="">小册新人 5 折券</span></div><div class="sale" data-v-1127fe6e="">最高可省 15 元</div></div></div><div class="ticket" data-v-1127fe6e=""><div class="ticket__inner" data-v-1127fe6e=""><div class="enjoy" data-v-1127fe6e=""><span class="new-title" data-v-1127fe6e="">小册新人 5 折券</span></div><div class="sale" data-v-1127fe6e="">最高可省 15 元</div></div></div></div><div class="remark" data-v-1127fe6e="">注：专享券的使用期限在领券的七天内。</div><div class="submit-btn" data-v-1127fe6e="">一键领取</div></div><div class="model success" style="display:none;" data-v-1127fe6e=""><div class="heading" data-v-1127fe6e="">领取成功</div><div class="content-text" data-v-1127fe6e="">购买小册时自动使用专享券</div><div class="btn-success-footer" data-v-1127fe6e=""><div class="btn-ok" data-v-1127fe6e="">知道了</div><div class="btn-ok btn-link" data-v-1127fe6e="">前往小册首页</div></div></div><div class="model fail" style="display:none;" data-v-1127fe6e=""><div class="heading" data-v-1127fe6e="">领取失败</div><div class="content-text" data-v-1127fe6e="">本活动仅适用于小册新用户</div><div class="btn-ok" data-v-1127fe6e="">知道了</div></div></div><!----><!----><div class="bind-phone-number-modal-box" data-v-76bf06d9="" data-v-2a21baac=""><div st:block="bindPhoneNumberModal" class="modal-mask" style="display:none;" data-v-76bf06d9=""></div><form class="bind-phone-number-form" style="display:none;" data-v-76bf06d9=""><i title="关闭" class="close-btn ion-close-round" data-v-76bf06d9=""></i><h1 class="title" data-v-76bf06d9="">提示</h1><h2 class="hint" data-v-76bf06d9="">根据我国<a href="http://www.cac.gov.cn/2017-08/25/c_1121541842.htm" target="_blank" style="color:#007fff">《互联网跟帖评论服务管理规定》</a>，您需要绑定手机号后才可在掘金社区内发布内容。</h2><div class="input-group" data-v-76bf06d9=""><div class="input-box" data-v-76bf06d9=""><input maxlength="64" placeholder="请输入要绑定的手机号码" value="" class="input" data-v-76bf06d9=""></div><!----><!----></div><button st:name="bindBtn" class="btn" data-v-76bf06d9="">绑定手机</button></form></div></div><!----><div data-v-0f848c07="" data-v-50ff96fb="" data-v-2a21baac="" class="view-container"><div data-v-0f848c07="" class="main-header-box"><header data-v-89995ec0="" data-v-0f848c07="" class="main-header main-header visible"><div data-v-89995ec0="" class="container"><a data-v-89995ec0="" href="https://juejin.im/" class="logo"><img data-v-89995ec0="" src="./类型即正义：TypeScript 从入门到实践（三）：类型别名和类 - 掘金_files/logo.a7995ad.svg" alt="掘金" class="logo-img"><img data-v-89995ec0="" src="./类型即正义：TypeScript 从入门到实践（三）：类型别名和类 - 掘金_files/simplify-logo.3e3c253.svg" alt="掘金" class="mobile"></a><nav data-v-89995ec0="" role="navigation" class="main-nav"><ul data-v-89995ec0="" class="nav-list"><li data-v-89995ec0="" class="main-nav-list"><div data-v-89995ec0="" class="phone-show-menu"><span data-v-89995ec0="">首页</span><div data-v-89995ec0="" class="icon ion-arrow-down-b"></div></div><ul data-v-89995ec0="" class="phone-hide"><li data-v-89995ec0="" class="nav-item link-item route-active"><a data-v-89995ec0="" href="https://juejin.im/">首页</a></li><li data-v-89995ec0="" class="nav-item link-item activities"><a data-v-89995ec0="" href="https://juejin.im/pins">沸点</a></li><li data-v-89995ec0="" class="nav-item link-item"><a data-v-89995ec0="" href="https://juejin.im/topics">话题</a></li><li data-v-89995ec0="" class="nav-item link-item book"><a data-v-89995ec0="" href="https://juejin.im/books">小册</a></li><li data-v-89995ec0="" class="nav-item link-item"><a data-v-89995ec0="" href="https://juejin.im/events/all">活动</a></li></ul></li><li data-v-89995ec0="" class="nav-item search"><form data-v-89995ec0="" role="search" class="search-form"><input data-v-89995ec0="" type="search" maxlength="32" placeholder="搜索掘金" class="search-input"><img data-v-89995ec0="" src="./类型即正义：TypeScript 从入门到实践（三）：类型别名和类 - 掘金_files/juejin-search-icon.6f8ba1b.svg" alt="搜索" class="search-icon"></form></li><li data-v-89995ec0="" class="nav-item add"><div data-v-89995ec0="" class="add-group"><button data-v-89995ec0="" class="add-btn">写文章</button><div data-v-89995ec0="" class="more"><i data-v-89995ec0="" class="more-icon ion-android-arrow-dropdown"></i></div><ul data-v-89995ec0="" class="more-list"><li data-v-89995ec0="" class="item">发布沸点</li><!----></ul></div><!----></li><li data-v-89995ec0="" class="nav-item notification"><a data-v-89995ec0="" class="app-link" href="https://juejin.im/notification" target="_blank"><i data-v-89995ec0="" class="icon ion-android-notifications"></i><!----></a></li><li data-v-89995ec0="" class="nav-item menu"><div data-v-261e638e="" data-v-b49070bc="" data-v-89995ec0="" data-src="https://mirror-gold-cdn.xitu.io/168e08d6d9e8b3febec?imageView2/1/w/100/h/100/q/85/format/webp/interlace/1" class="lazy avatar avatar loaded immediate" style="background-image: url(&quot;https://mirror-gold-cdn.xitu.io/168e08d6d9e8b3febec?imageView2/1/w/100/h/100/q/85/format/webp/interlace/1&quot;);"></div><!----><ul data-v-89995ec0="" class="nav-menu user-dropdown-list" style="display: none;"><div data-v-89995ec0="" class="nav-menu-item-group"><li data-v-89995ec0="" class="nav-menu-item"><a data-v-89995ec0=""><i data-v-89995ec0="" class="fengwei fw-write"></i><span data-v-89995ec0="">写文章</span></a></li><!----><li data-v-89995ec0="" class="nav-menu-item"><a data-v-89995ec0=""><i data-v-89995ec0="" class="fengwei fw-draft"></i><span data-v-89995ec0="">草稿</span></a></li></div><div data-v-89995ec0="" class="nav-menu-item-group"><li data-v-89995ec0="" class="nav-menu-item"><a data-v-89995ec0="" href="https://juejin.im/user/5a5f6102f265da3e3a6dd3b0" class="link-icon"><i data-v-89995ec0="" class="fengwei fw-person"></i><span data-v-89995ec0="">我的主页</span><!----></a></li><li data-v-89995ec0="" class="nav-menu-item"><a data-v-89995ec0="" href="https://juejin.im/user/5a5f6102f265da3e3a6dd3b0/likes"><img data-v-89995ec0="" src="./类型即正义：TypeScript 从入门到实践（三）：类型别名和类 - 掘金_files/zan.e9d7698.svg" class="zan"><span data-v-89995ec0="">我赞过的</span></a></li><!----><li data-v-89995ec0="" class="nav-menu-item"><a data-v-89995ec0="" href="https://juejin.im/user/5a5f6102f265da3e3a6dd3b0/collections"><img data-v-89995ec0="" src="./类型即正义：TypeScript 从入门到实践（三）：类型别名和类 - 掘金_files/collect.02e2979.svg" class="collect"><span data-v-89995ec0="">我的收藏集</span></a></li><li data-v-89995ec0="" class="nav-menu-item"><a data-v-89995ec0="" href="https://juejin.im/user/5a5f6102f265da3e3a6dd3b0/books?type=bought"><i data-v-89995ec0="" class="fengwei fw-bought"></i><span data-v-89995ec0="">已购</span></a></li><li data-v-89995ec0="" class="nav-menu-item"><a data-v-89995ec0="" href="https://juejin.im/subscribe"><i data-v-89995ec0="" class="fengwei fw-tag"></i><span data-v-89995ec0="">标签管理</span></a></li></div><div data-v-89995ec0="" class="nav-menu-item-group"><li data-v-89995ec0="" class="nav-menu-item"><a data-v-89995ec0="" href="https://juejin.im/user/settings"><i data-v-89995ec0="" class="fengwei fw-setting"></i><span data-v-89995ec0="">设置</span></a></li><li data-v-89995ec0="" class="nav-menu-item more"><a data-v-89995ec0=""><i data-v-89995ec0="" class="fengwei fw-info"></i><span data-v-89995ec0="">关于</span><i data-v-89995ec0="" class="ion-chevron-right more-icon"></i></a><ul data-v-89995ec0="" class="nav-menu more-dropdown-list"><div data-v-89995ec0="" class="nav-menu-item-group"><li data-v-89995ec0="" class="nav-menu-item"><a data-v-89995ec0="" href="https://juejin.im/app" target="_blank">下载应用</a></li><li data-v-89995ec0="" class="nav-menu-item"><a data-v-89995ec0="" href="https://juejin.im/about" target="_blank">关于</a></li><li data-v-89995ec0="" class="nav-menu-item"><a data-v-89995ec0="" href="https://xitu.io/jobs" target="_blank">加入我们</a></li><li data-v-89995ec0="" class="nav-menu-item"><a data-v-89995ec0="" href="https://github.com/xitu/gold-miner" rel="nofollow noopener noreferrer" target="_blank">翻译计划</a></li><li data-v-89995ec0="" class="nav-menu-item"><a data-v-89995ec0="" href="https://bd.juejin.im/?utm_campaign=bd&amp;utm_source=web&amp;utm_medium=nav" target="_blank">合作伙伴</a></li></div></ul></li></div><div data-v-89995ec0="" class="nav-menu-item-group"><li data-v-89995ec0="" class="nav-menu-item"><a data-v-89995ec0=""><i data-v-89995ec0="" class="fengwei fw-logout"></i><span data-v-89995ec0="">登出</span></a></li></div></ul></li><!----><!----></ul></nav></div></header></div><main data-v-0f848c07="" class="container main-container"><div data-v-50ff96fb="" data-v-0f848c07="" class="view column-view"><div data-v-50ff96fb="" data-v-0f848c07="" class="main-area article-area shadow"><article data-v-50ff96fb="" itemscope="itemscope" itemtype="http://schema.org/Article" class="article" data-v-0f848c07=""><meta itemprop="url" content="https://juejin.im/post/5e97b3c7518825737e0f88dc"><meta itemprop="headline" content="类型即正义：TypeScript 从入门到实践（三）：类型别名和类"><meta itemprop="keywords" content="TypeScript"><meta itemprop="datePublished" content="2020-04-16T02:13:04.332Z"><meta itemprop="image" content="https://user-gold-cdn.xitu.io/2020/4/16/17180a7df7945236?w=798&amp;h=359&amp;f=png&amp;s=288964"><div itemprop="author" itemscope="itemscope" itemtype="http://schema.org/Person"><meta itemprop="name" content="图雀社区"><meta itemprop="url" content="https://juejin.im/user/5b33414351882574b9694d28"></div><div itemprop="publisher" itemscope="itemscope" itemtype="http://schema.org/Organization"><meta itemprop="name" content="掘金"><div itemprop="logo" itemscope="itemscope" itemtype="https://schema.org/ImageObject"><meta itemprop="url" content="https://b-gold-cdn.xitu.io/icon/icon-white-180.png"><meta itemprop="width" content="180"><meta itemprop="height" content="180"></div></div><div data-v-50ff96fb="" class="author-info-block"><a data-v-50ff96fb="" href="https://juejin.im/user/5b33414351882574b9694d28" target="_blank" rel="" class="avatar-link"><div data-v-261e638e="" data-v-b49070bc="" data-v-50ff96fb="" data-src="https://user-gold-cdn.xitu.io/2019/9/22/16d596f04f4f4e3d?imageView2/1/w/100/h/100/q/85/format/webp/interlace/1" class="lazy avatar avatar loaded" style="background-image: url(&quot;https://user-gold-cdn.xitu.io/2019/9/22/16d596f04f4f4e3d?imageView2/1/w/100/h/100/q/85/format/webp/interlace/1&quot;);"></div></a><div data-v-50ff96fb="" class="author-info-box"><a data-v-1a54813b="" data-v-50ff96fb="" href="https://juejin.im/user/5b33414351882574b9694d28" target="_blank" rel="" class="username username ellipsis">图雀社区<a data-v-3a430c94="" data-v-1a54813b="" href="https://juejin.im/book/5c90640c5188252d7941f5bb/section/5c9065385188252da6320022" target="_blank" rel="" class="rank"><img data-v-3a430c94="" src="./类型即正义：TypeScript 从入门到实践（三）：类型别名和类 - 掘金_files/lv-4.2c3fafd.svg" alt="lv-4"></a></a><div data-v-50ff96fb="" class="meta-box"><time data-v-50ff96fb="" datetime="2020-04-16T02:13:04.332Z" title="Thu Apr 16 2020 10:13:04 GMT+0800 (中国标准时间)" class="time">2020年04月16日</time><span data-v-50ff96fb="" class="views-count">阅读 1320</span><!----></div></div><button data-v-d05fee10="" data-v-50ff96fb="" class="follow-button follow">关注</button></div><div data-v-261e638e="" data-v-a98f170a="" data-v-50ff96fb="" data-src="https://user-gold-cdn.xitu.io/2020/4/16/17180a7df7945236?imageView2/1/w/1304/h/734/q/85/format/webp/interlace/1" class="lazy thumb article-hero loaded" style="background-image: url(&quot;https://user-gold-cdn.xitu.io/2020/4/16/17180a7df7945236?imageView2/1/w/1304/h/734/q/85/format/webp/interlace/1&quot;); background-size: cover;"></div><h1 data-v-50ff96fb="" class="article-title">类型即正义：TypeScript 从入门到实践（三）：类型别名和类</h1><div data-v-50ff96fb="" data-id="5e97bf30f265da47e57fe83e" itemprop="articleBody" class="article-content"><blockquote>
<p>我们研发开源了一款基于 Git 进行技术实战教程写作的工具，我们图雀社区的所有教程都是用这款工具写作而成，欢迎 <a target="_blank" href="https://github.com/tuture-dev/tuture" rel="nofollow noopener noreferrer">Star</a> 哦</p>
</blockquote>
<blockquote>
<p>如果你想快速了解如何使用，欢迎阅读我们的 <a target="_blank" href="https://www.yuque.com/tuture/product-manuals/wsv091" rel="nofollow noopener noreferrer">教程文档</a> 哦</p>
</blockquote>
<p>学习了注解函数，又了解了类型运算如联合类型和交叉类型，接下来我们来了解一些 TS 中独有的类型别名，它类似 JS 变量，是类型变量，接着我们还会学习 TS 中内容非常庞杂的内容之一：类，了解 TS 中类的独有特性，以及如何注解类，甚至用类去注解其他内容。</p>
<p>欢迎阅读 类型即正义，TypeScript 从入门到实践系列：</p>
<ul>
<li><a target="_blank" href="https://juejin.im/post/5e8a82d2518825737b4ae3e0" rel="">《类型即正义：TypeScript 从入门到实践（序章）》</a>：用 TS 初始化一个 React 项目</li>
<li><a target="_blank" href="https://juejin.im/post/5e8a831cf265da48046988cb" rel="">《类型即正义：TypeScript 从入门到实践（一）》</a>：讲解基础的 TS 类型和接口</li>
<li><a target="_blank" href="https://juejin.im/post/5e8b3153e51d4546f70d0d3c" rel="">《类型即正义：TypeScript 从入门到实践（二）》</a>：讲解如何注解函数、高级类型以及类型守卫</li>
</ul>
<blockquote>
<p>本文所涉及的源代码都放在了 <a target="_blank" href="https://github.com/tuture-dev/typescript-tea" rel="nofollow noopener noreferrer">Github</a>&nbsp; 或者 <a target="_blank" href="https://gitee.com/tuture/typescript-tea" rel="nofollow noopener noreferrer">Gitee</a> 上，如果您觉得我们写得还不错，希望您能给<strong>❤️这篇文章点赞+<a target="_blank" href="https://github.com/tuture-dev/typescript-tea" rel="nofollow noopener noreferrer"><strong>Github</strong></a></strong> 或 <strong><a target="_blank" href="https://gitee.com/tuture/typescript-tea" rel="nofollow noopener noreferrer">Gitee</a>仓库加星❤</strong>️哦~</p>
</blockquote>
<blockquote>
<p>此教程属于 <a target="_blank" href="https://github.com/tuture-dev/react-roadmap" rel="nofollow noopener noreferrer">React 前端工程师学习路线</a>的一部分，欢迎来 Star 一波，鼓励我们继续创作出更好的教程，持续更新中~</p>
</blockquote>
<h3 class="heading" data-id="heading-0">运行代码</h3>
<p>如果你偏爱 码云，那么你可以运行如下命令获取这一步的代码，然后你可以跟着文章的内容将代码做出修改：</p>
<pre><code class="hljs bash copyable" lang="bash">git <span class="hljs-built_in">clone</span> -b part-three https://gitee.com/tuture/typescript-tea.git
<span class="hljs-built_in">cd</span> typescript-tea &amp;&amp; npm install &amp;&amp; npm start
<span class="copy-code-btn">复制代码</span></code></pre><p>如果你偏爱 Github，那么你可以运行如下命令来获取初始代码：</p>
<pre><code class="hljs bash copyable" lang="bash">git <span class="hljs-built_in">clone</span> -b part-thre git@github.com:tuture-dev/typescript-tea.git
<span class="hljs-built_in">cd</span> typescript-tea &amp;&amp; npm install &amp;&amp; npm start
<span class="copy-code-btn">复制代码</span></code></pre><h2 class="heading" data-id="heading-1">类型别名</h2>
<p>就像我们为了在平时开发中更加灵活而创建变量或者干掉硬编码数据一样，TS 为我们提供了类型别名，它允许你为类型创建一个名字，这个名字就是类型的别名，进而你可以在多处使用这个别名，并且有必要的时候，你可以更改别名的值（类型），以达到一次替换，多处应用的效果。</p>
<p>我们来看一个简单的类型别名的例子，假如我们有一个获取一个人姓名的函数，它接收一个参数，这个参数有可能直接是要获取的姓名，它是一个 <code>string</code> 类型，也有可能是一个另外一个函数，需要调用它以获取姓名，它是一个函数类型，我们来看一下这个例子：</p>
<pre><code class="hljs js copyable" lang="js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getName</span>(<span class="hljs-params">n</span>) </span>{
  <span class="hljs-keyword">if</span> (<span class="hljs-keyword">typeof</span> n === <span class="hljs-string">'string'</span>) {
    <span class="hljs-keyword">return</span> n;
  } <span class="hljs-keyword">else</span> {
    <span class="hljs-keyword">return</span> n();
  }
}
<span class="copy-code-btn">复制代码</span></code></pre><p>如果我们要给这个 <code>n</code> 进行类型注解，那么它应该同时是 <code>string | () =&gt; string</code> ，是 <code>string</code> 类型和 <code>() =&gt; string</code> 函数类型的联合类型，有过一定开发经验的同学可能会发觉，这样写可能很影响原代码的可读性，而且这个 <code>n</code> 的类型可能会变化，因为我们的函数可能扩展，所以如果我们用一个类型别名把这个 <code>n</code> 的类型表示出来，那么就类似我们用变量替代了硬编码，可扩展性就更强了，我们马上来尝试一下：</p>
<pre><code class="hljs js copyable" lang="js">type NameParams = <span class="hljs-string">'string'</span> | <span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> <span class="hljs-string">'string'</span>;

<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getName</span>(<span class="hljs-params">n: NameParams</span>): <span class="hljs-title">string</span> </span>{
  <span class="hljs-comment">// ... 其它一样</span>
}
<span class="copy-code-btn">复制代码</span></code></pre><p>可以看到我们用了一个 <code>NameParams</code> 类型别名，它保存着原联合类型，类型别名就是等号左边是 <code>type</code> 关键字加上别名变量，等号右边是带保存的类型，这个类型很广，它可以是字面量类型，基础类型，元组、函数、联合类型和交叉类型、甚至还可以是其他类型别名的组合。</p>
<p>所以对于上面的 <code>NameParams</code> ，我们可以进一步拆解它为如下的样子：</p>
<pre><code class="hljs js copyable" lang="js">type Name = string;
type NameResolver = <span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> string;
type NameParams = Name | NameResolver;

<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getName</span>(<span class="hljs-params">n: NameParams</span>): <span class="hljs-title">Name</span> </span>{
  <span class="hljs-comment">// ... 其他一样</span>
}
<span class="copy-code-btn">复制代码</span></code></pre><p>我们看到，上面这个不仅更加细粒度，我们将 <code>NameParams</code> 拆成了两个类型别名：<code>Name</code> 和 <code>NameResolver</code> ，分别处理 <code>string</code> 和 <code>() =&gt; string</code> 的情况，然后通过联合操作符联合赋值给 <code>NameParams</code> ；还带来了一个优势，我们的返回值可以更加明确就是 <code>Name</code> 类型，这样 <code>Name</code> 变化，它可能变成 <code>number</code> 类型，那么也能很好的反应这个变化，且只需要修改一下 <code>Name</code> 的值为 <code>number</code> 类型就可以了，所有其他的 <code>Name</code>  类型会自动变化。</p>
<h3 class="heading" data-id="heading-2">类型别名与接口</h3>
<p>有同学读到这里，可能有疑问了，这个类型别名貌似无所不能嘛，那它和接口有什么区别了？</p>
<p>接口主要是用来定义一个结构的类型，比如定义一个对象的类型，而类型别名可以是任意细粒度的类型定义，比如我们前面讲的最原子的字母量类型如 <code>'hello tuture'</code> 类型，到对象类型如：</p>
<pre><code class="hljs js copyable" lang="js">type tuture = {
  <span class="hljs-attr">tutureCommunity</span>: string;
  editure: string;
  tutureDocs: string;
}
<span class="copy-code-btn">复制代码</span></code></pre><p>上面这个类型我们定义了一个包含三个属性的对象类型，并用 <code>tuture</code> 别名来存储它们。</p>
<p>定义上面这个对象的类型我们可以用之前学到的接口这样写：</p>
<pre><code class="hljs js copyable" lang="js">interface Tuture {
  <span class="hljs-attr">tutureCommunity</span>: string;
  editure: string;
  tutureDocs: string;
}
<span class="copy-code-btn">复制代码</span></code></pre><p>可以看到类型别名既可以表达接口所表达的类型，还比接口更加细粒度，它还可以是一个基础类型如 <code>type name = 'string'</code> 。</p>
<h3 class="heading" data-id="heading-3">动手实践</h3>
<p>还记得之前我们那个 <code>src/TodoList.tsx</code> 中 <code>Action</code> 组件的 <code>onClick</code> 方法的参数 <code>key</code> 嘛？它是一个联合类型类型 <code>"complete | delete"</code> ，我们在多出处用到它，现在我们是硬编码写在了程序里，未来这个 <code>key</code> 可能会变化，所以我们需要换成类型别名来表达它们，打开 <code>src/TodoList.tsx</code> ，对其中的内容作出对应的修改如下：</p>
<pre><code class="hljs jsx copyable" lang="jsx"><span class="hljs-keyword">import</span> React <span class="hljs-keyword">from</span> <span class="hljs-string">"react"</span>;
<span class="hljs-keyword">import</span> { List, Avatar, Menu, Dropdown } <span class="hljs-keyword">from</span> <span class="hljs-string">"antd"</span>;
<span class="hljs-keyword">import</span> { DownOutlined } <span class="hljs-keyword">from</span> <span class="hljs-string">"@ant-design/icons"</span>;
<span class="hljs-keyword">import</span> { ClickParam } <span class="hljs-keyword">from</span> <span class="hljs-string">"antd/lib/menu"</span>;

<span class="hljs-keyword">import</span> { Todo, getUserById } <span class="hljs-keyword">from</span> <span class="hljs-string">"./utils/data"</span>;

type MenuKey = <span class="hljs-string">"complete"</span> | <span class="hljs-string">"delete"</span>;

interface ActionProps {
  <span class="hljs-attr">onClick</span>: <span class="hljs-function">(<span class="hljs-params">key: MenuKey</span>) =&gt;</span> <span class="hljs-keyword">void</span>;
  isCompleted: boolean;
}

<span class="hljs-comment">// ...</span>

interface TodoListProps {
  <span class="hljs-attr">todoList</span>: Todo[];
  onClick: <span class="hljs-function">(<span class="hljs-params">todoId: string, key: MenuKey</span>) =&gt;</span> <span class="hljs-keyword">void</span>;
}

<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">TodoList</span>(<span class="hljs-params">{ todoList, onClick }: TodoListProps</span>) </span>{
  <span class="hljs-keyword">return</span> (
    &lt;List
      className="demo-loadmore-list"
      itemLayout="horizontal"
      dataSource={todoList}
      renderItem={item =&gt; {
        const user = getUserById(item.user);

        return (
          &lt;List.Item
            key={item.id}
            actions={[
              &lt;Dropdown
                overlay={() =&gt; (
                  &lt;Action
                    isCompleted={item.isCompleted}
                    onClick={(key: MenuKey) =&gt; onClick(item.id, key)}
                  /&gt;
                )}
              &gt;
                &lt;a key="list-loadmore-more"&gt;
                  操作 &lt;DownOutlined /&gt;
                &lt;/a&gt;
              &lt;/Dropdown&gt;
            ]}
          &gt;
            &lt;List.Item.Meta
              avatar={&lt;Avatar src={user.avatar} /&gt;}
              title={&lt;a href="https://ant.design"&gt;{user.name}&lt;/a&gt;}
              description={item.date}
            /&gt;
            &lt;div
              style={{
                textDecoration: item.isCompleted ? "line-through" : "none"
              }}
            &gt;
              {item.content}
            &lt;/div&gt;
          &lt;/List.Item&gt;
        );
      }}
    /&gt;
  );
}

export default TodoList;
<span class="copy-code-btn">复制代码</span></code></pre><p>可以看到，我们定义了一个 <code>MenuKey</code> 类型别名，它表示原联合类型 <code>complete | delete</code> ，然后我们替换了组件中三处使用到这个联合类型的 <code>onClick</code> 函数的参数 <code>key</code> ，将其用 <code>MenuKey</code> 来注解。</p>
<p>其次我们还删除了 <code>antd</code> 和 <code>@ant-design/icons</code> 里面的多余导出。</p>
<h2 class="heading" data-id="heading-4">继续改进</h2>
<p>接着我们再来对 <code>TodoList</code> 做一点改变，导出一下我们刚刚定义的 <code>MenuKey</code> ，因为还有其他的地方使用到它，我们打开 <code>src/TodoList.tsx</code> 给 <code>MenuKey</code> 添加 <code>export</code> 前缀，导出我们的类型别名：</p>
<pre><code class="hljs jsx copyable" lang="jsx"><span class="hljs-comment">// ...</span>

<span class="hljs-keyword">import</span> { Todo, getUserById } <span class="hljs-keyword">from</span> <span class="hljs-string">"./utils/data"</span>;

<span class="hljs-keyword">export</span> type MenuKey = <span class="hljs-string">"complete"</span> | <span class="hljs-string">"delete"</span>;

interface ActionProps {
  <span class="hljs-attr">onClick</span>: <span class="hljs-function">(<span class="hljs-params">key: MenuKey</span>) =&gt;</span> <span class="hljs-keyword">void</span>;
  isCompleted: boolean;
}
 <span class="hljs-comment">// ...</span>
<span class="copy-code-btn">复制代码</span></code></pre><p>接着我们在 <code>src/App.tsx</code> 里面导入我们的 <code>MenuKey</code> 类型别名，并替换对应的 <code>onClick</code> 的参数 <code>key</code> 的类型注解为 <code>MenuKey</code> ：</p>
<pre><code class="hljs jsx copyable" lang="jsx"><span class="hljs-keyword">import</span> React, { useRef, useState } <span class="hljs-keyword">from</span> <span class="hljs-string">"react"</span>;
<span class="hljs-keyword">import</span> { Button, Typography, Form, Tabs } <span class="hljs-keyword">from</span> <span class="hljs-string">"antd"</span>;

<span class="hljs-keyword">import</span> TodoInput <span class="hljs-keyword">from</span> <span class="hljs-string">"./TodoInput"</span>;
<span class="hljs-keyword">import</span> TodoList <span class="hljs-keyword">from</span> <span class="hljs-string">"./TodoList"</span>;

<span class="hljs-keyword">import</span> { todoListData } <span class="hljs-keyword">from</span> <span class="hljs-string">"./utils/data"</span>;
<span class="hljs-keyword">import</span> { MenuKey } <span class="hljs-keyword">from</span> <span class="hljs-string">"./TodoList"</span>;

<span class="hljs-keyword">import</span> <span class="hljs-string">"./App.css"</span>;
<span class="hljs-keyword">import</span> logo <span class="hljs-keyword">from</span> <span class="hljs-string">"./logo.svg"</span>;
 <span class="hljs-comment">// ...</span>
<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">App</span>(<span class="hljs-params"></span>) </span>{
  <span class="hljs-keyword">const</span> [todoList, setTodoList] = useState(todoListData);

  <span class="hljs-comment">// ...</span>
  <span class="hljs-keyword">const</span> activeTodoList = todoList.filter(<span class="hljs-function"><span class="hljs-params">todo</span> =&gt;</span> !todo.isCompleted);
  <span class="hljs-keyword">const</span> completedTodoList = todoList.filter(<span class="hljs-function"><span class="hljs-params">todo</span> =&gt;</span> todo.isCompleted);

  <span class="hljs-keyword">const</span> onClick = <span class="hljs-function">(<span class="hljs-params">todoId: string, key: MenuKey</span>) =&gt;</span> {
    <span class="hljs-keyword">if</span> (key === <span class="hljs-string">"complete"</span>) {
      <span class="hljs-keyword">const</span> newTodoList = todoList.map(<span class="hljs-function"><span class="hljs-params">todo</span> =&gt;</span> {
        <span class="hljs-keyword">if</span> (todo.id === todoId) {
          <span class="hljs-keyword">return</span> { ...todo, <span class="hljs-attr">isCompleted</span>: !todo.isCompleted };
        }

        <span class="hljs-keyword">return</span> todo;
      });

      setTodoList(newTodoList);
    } <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (key === <span class="hljs-string">"delete"</span>) {
      <span class="hljs-keyword">const</span> newTodoList = todoList.filter(<span class="hljs-function"><span class="hljs-params">todo</span> =&gt;</span> todo.id !== todoId);
      setTodoList(newTodoList);
    }
  };
 <span class="hljs-comment">// ...</span>
  <span class="hljs-keyword">return</span> (
    <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">className</span>=<span class="hljs-string">"App"</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">{ref}</span>&gt;</span>
      // ...
    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span>
  );
}

<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> App;
<span class="copy-code-btn">复制代码</span></code></pre><p>可以看到如上文件里面，我们还删除了一些 <code>antd</code> 里面不必要的包导入。</p>
<h3 class="heading" data-id="heading-5">小结</h3>
<p>这一节我们学习了类型别名，它可以在一定程度上模拟接口（Interface），同时在类型上又可以达到比接口更加细粒度的效果，同时它又像 JS 中的变量，可以一处修改，多处生效，避免硬编码类型带来的一些代码上的重构和改动难题。</p>
<h2 class="heading" data-id="heading-6">类</h2>
<p>在进行类的类型注解之前，我们首先先来了解一下类的组成：</p>
<ul>
<li>构造函数</li>
<li>属性</li>
<li>实例属性</li>
<li>静态属性</li>
<li>方法</li>
<li>实例方法</li>
<li>静态方法</li>
</ul>
<p>这是 ES6 里面类的一个组成，那么在 TS 里面我们该如何注解这些内容了？主要有如下组成：</p>
<ul>
<li>注解构造函数</li>
<li>注解属性：</li>
<li>访问限定符： <code>public/protected/private</code></li>
<li>修饰符：<code>readonly</code></li>
<li>注解方法</li>
<li>访问限定符：<code>public/protected/private</code></li>
</ul>
<h3 class="heading" data-id="heading-7">简单注解</h3>
<p>了解了类大致需要进行类型注解的部分，我们来具体体验一下这个注解过程。</p>
<p>首先我们来看一个动物类：</p>
<pre><code class="hljs js copyable" lang="js"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Animal</span> </span>{
  name;

  <span class="hljs-keyword">static</span> isAnimal(a) {
    <span class="hljs-keyword">return</span> a <span class="hljs-keyword">instanceof</span> Animal;
  }
  
  <span class="hljs-keyword">constructor</span>(name) {
    <span class="hljs-keyword">this</span>.name = name;
  }

  move(distance) {
    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">`Animal moved <span class="hljs-subst">${distance}</span>m.`</span>);
  }
}
<span class="copy-code-btn">复制代码</span></code></pre><p>我们可以看到上面这个类的四个部分：</p>
<ul>
<li>实例属性 <code>name</code> ，它一般是 <code>string</code> 类型，静态属性注解同实例属性类似</li>
<li>静态方法 <code>isAnimal</code> ，按照之前讲解的注解的函数方式进行注解：1）注解参数 2）注解返回值</li>
<li>构造函数，注解参数</li>
<li>普通方法，按照之前讲解的注解的函数方式进行注解：1）注解参数 2）注解返回值</li>
</ul>
<p>了解之后，我们来注解一下上面这个类：</p>
<pre><code class="hljs js copyable" lang="js"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Animal</span> </span>{
  name: string;

  <span class="hljs-keyword">static</span> isAnimal(a: Animal): boolean {
    <span class="hljs-keyword">return</span> a <span class="hljs-keyword">instanceof</span> Animal;
  }

  <span class="hljs-keyword">constructor</span>(name: string) {
    <span class="hljs-keyword">this</span>.name = name;
  }

  move(distance: number) {
    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">`Animal moved <span class="hljs-subst">${distance}</span>m.`</span>);
  }
}
<span class="copy-code-btn">复制代码</span></code></pre><p>可以看到，经过注解后的类看起来也很熟悉，因为都是之前学过的，这里有个唯一的不同就是我们的静态方法 <code>isAnimal</code> ，它接收的参数 <code>a</code>  是 <code>Animal</code> 类本身来注解的，这里就涉及到两个知识：</p>
<ul>
<li>
<p>类可以拿来进行类型注解</p>
</li>
<li>
<p>类的实例都可以用类名来注解</p>
</li>
</ul>
<p>这两个知识我们将在后面讲解构造函数时详细讲解。</p>
<h3 class="heading" data-id="heading-8">访问限定符</h3>
<p>除了简单注解，TS 还给类赋予了一些独特的内容，其中一个就是大多数静态语言都有的访问限定符：<code>public</code> 、<code>protected</code> 和 <code>private</code> ，这些内容读者可能看起来很陌生了，我们接下来就来仔细讲一讲。</p>
<h4 class="heading" data-id="heading-9">Public</h4>
<p><code>public</code> 代表公共的，表示被此访问限定符修饰的属性，方法可以任何地方访问到：1）类中 2）类的实例对象 3）类的子类中 4）子类的实例对象 等，默认所有类的属性和方法都是 <code>public</code> 修饰的，比如我们拿上面那个 <code>Animal</code> 类来举例：</p>
<pre><code class="hljs js copyable" lang="js"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Animal</span> </span>{
  public name: string;
  <span class="hljs-comment">// ...</span>
  public <span class="hljs-keyword">constructor</span>(name: string) { <span class="hljs-comment">// 函数体 }</span>
  <span class="hljs-comment">// ...</span>
} 
<span class="copy-code-btn">复制代码</span></code></pre><p>可以看到其实我们的 <code>name</code> 属性和构造函数等，他们默认都是 <code>public</code> 访问限定符，这样我们可以在任何地方访问到这些属性，下面我们就来看看如何访问这些属性。</p>
<p><strong>在类内部访问：</strong></p>
<pre><code class="hljs js copyable" lang="js"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Animal</span> </span>{
  public name: string; 

  public <span class="hljs-keyword">constructor</span>(name: string) { <span class="hljs-comment">// 函数体 }</span>

  move(distance: number) {
    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">`<span class="hljs-subst">${<span class="hljs-keyword">this</span>.name}</span> moved <span class="hljs-subst">${distance}</span>m.`</span>);
  }
}

<span class="hljs-keyword">const</span> bird = <span class="hljs-keyword">new</span> Animal(<span class="hljs-string">'Tuture'</span>);
bird.move(<span class="hljs-number">520</span>); <span class="hljs-comment">// 打印 `Tuture moved 520m.`</span>
<span class="copy-code-btn">复制代码</span></code></pre><p>可以看到，我们在类内部的 <code>move</code> 方法内访问了 public 类型的 <code>name</code> 属性。</p>
<p><strong>在类外部访问：</strong></p>
<pre><code class="hljs js copyable" lang="js"><span class="hljs-keyword">const</span> animal = <span class="hljs-keyword">new</span> Animal(<span class="hljs-string">'bird'</span>);
<span class="hljs-built_in">console</span>.log(animal.name) <span class="hljs-comment">// 打印 bird</span>
<span class="copy-code-btn">复制代码</span></code></pre><p>可以看到，上面我们通过类 <code>Animal</code> 的实例 <code>animal</code> 访问到了 <code>name</code> 属性。</p>
<p><strong>在子类中访问：</strong></p>
<pre><code class="hljs js copyable" lang="js"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Bird</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Animal</span> </span>{
  fly() {
    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">`<span class="hljs-subst">${<span class="hljs-keyword">this</span>.name}</span> can fly!`</span>); 
  }
}

<span class="hljs-keyword">const</span> bird = <span class="hljs-keyword">new</span> Bird(<span class="hljs-string">'Tuture'</span>);
bird.fly() <span class="hljs-comment">// 打印 `Tuture can fly!`</span>
<span class="copy-code-btn">复制代码</span></code></pre><p>可以看到，上面我们在类 <code>Animal</code> 的子类 <code>Bird</code> 内部的 <code>fly</code> 方法访问到了 <code>name</code> 属性。</p>
<p><strong>在子类外部访问：</strong></p>
<pre><code class="hljs js copyable" lang="js"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Bird</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Animal</span> </span>{
  fly() {
    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">`<span class="hljs-subst">${<span class="hljs-keyword">this</span>.name}</span> can fly!`</span>);
  }
}

<span class="hljs-keyword">const</span> bird = <span class="hljs-keyword">new</span> Bird(<span class="hljs-string">'Tuture'</span>);
<span class="hljs-built_in">console</span>.log(bird.name) <span class="hljs-comment">// 打印 Tuture</span>
<span class="copy-code-btn">复制代码</span></code></pre><p>可以看到，上面我们在子类 <code>Bird</code> 的实例 <code>bird</code> 上面访问到了 <code>name</code> 属性。</p>
<h4 class="heading" data-id="heading-10">Protected</h4>
<p>接下来我们来看一下第二个访问限定符 <code>protected</code> ，它的字面意思是 “受保护的”，比 <code>public</code> 的可访问的范围要小一些，它只能在类和子类中访问，不能被类的实例对象访问也不能被子类的实例对象访问，也就是上面 <code>public</code> 的三种访问里面，被 <code>protected</code> 访问限定符修饰的只能在第一类和第三类里面被访问到：</p>
<p><strong>在类中访问：</strong></p>
<pre><code class="hljs js copyable" lang="js"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Animal</span> </span>{
  protected name: string;

  public <span class="hljs-keyword">constructor</span>(name: string) { <span class="hljs-comment">// 函数体 }</span>

  move(distance: number) {
    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">`<span class="hljs-subst">${<span class="hljs-keyword">this</span>.name}</span> moved <span class="hljs-subst">${distance}</span>m.`</span>);
  }
}

<span class="hljs-keyword">const</span> bird = <span class="hljs-keyword">new</span> Animal(<span class="hljs-string">'Tuture'</span>);
bird.move(<span class="hljs-number">520</span>); <span class="hljs-comment">// 打印 `Tuture moved 520m.`</span>
<span class="copy-code-btn">复制代码</span></code></pre><p>可以看到，我们在类内部的 <code>move</code> 方法内访问了 public 类型的 <code>name</code> 属性。</p>
<p><strong>在子类中访问：</strong></p>
<pre><code class="hljs js copyable" lang="js"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Animal</span> </span>{
  protected name: string;
  <span class="hljs-keyword">constructor</span>(name: string) {
    <span class="hljs-keyword">this</span>.name = name
  }
}

<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Bird</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Animal</span> </span>{
  fly() {
    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">`<span class="hljs-subst">${<span class="hljs-keyword">this</span>.name}</span> can fly!`</span>);
  }
}

<span class="hljs-keyword">const</span> bird = <span class="hljs-keyword">new</span> Bird(<span class="hljs-string">'Tuture'</span>);
bird.fly() <span class="hljs-comment">// 打印 `Tuture can fly!`</span>
<span class="copy-code-btn">复制代码</span></code></pre><p>可以看到，上面我们在类 <code>Animal</code> 的子类 <code>Bird</code> 内部的 <code>fly</code> 方法访问到了 <code>name</code> 属性。</p>
<h4 class="heading" data-id="heading-11">Private</h4>
<p>第三类访问限定符是 <code>private</code> ，它的字面意思是 “私有的”，也就是说它的可以访问访问是最小的，只能在类的内部访问到，其他地方都无法访问：</p>
<p><strong>在类中访问：</strong></p>
<pre><code class="hljs js copyable" lang="js"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Animal</span> </span>{
  private name: string;
  public <span class="hljs-keyword">constructor</span>(name: string) { <span class="hljs-comment">// 函数体 }</span>

  move(distance: number) {
    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">`<span class="hljs-subst">${<span class="hljs-keyword">this</span>.name}</span> moved <span class="hljs-subst">${distance}</span>m.`</span>);
  }
}

<span class="hljs-keyword">const</span> bird = <span class="hljs-keyword">new</span> Animal(<span class="hljs-string">'Tuture'</span>);
bird.move(<span class="hljs-number">520</span>); <span class="hljs-comment">// 打印 `Tuture moved 520m.`</span>
<span class="copy-code-btn">复制代码</span></code></pre><p>可以看到，我们在类内部的 <code>move</code> 方法内访问了 public 类型的 <code>name</code> 属性。</p>
<h3 class="heading" data-id="heading-12">只读修饰符</h3>
<p>就像我们之前学习的接口（<code>Interface</code> ）时可以用 <code>readonly</code> 修饰接口的属性一样，我们也可以用 <code>readonly</code> 修饰类的属性，比如我们动物的简介一旦确定就不会变了，我们可以这样来写：</p>
<pre><code class="hljs js copyable" lang="js"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Animal</span> </span>{
  readonly brief: string = <span class="hljs-string">'动物是多细胞真核生命体中的一大类群，但是不同于微生物。'</span>;
  <span class="hljs-comment">// ...其他一样</span>
}
<span class="copy-code-btn">复制代码</span></code></pre><p>除了属性，我们还可以用 <code>readonly</code> 来修饰类中方法的参数，比如我们在设置此动物的类型时，一般可以给一个默认的类型：</p>
<pre><code class="hljs js copyable" lang="js"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Animal</span> </span>{
  type: string;
  
  setType(type: string, readonly defaultType = <span class="hljs-string">'哺乳动物'</span>) {
    <span class="hljs-keyword">this</span>.type = type || defaultType;
  }
}
<span class="copy-code-btn">复制代码</span></code></pre><h3 class="heading" data-id="heading-13">抽象类</h3>
<h4 class="heading" data-id="heading-14">抽象类与抽象方法</h4>
<p>TS 另外一个特性就是抽象类，什么是抽象类了？我们来看个例子：</p>
<pre><code class="hljs js copyable" lang="js">abstract <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Animal</span> </span>{
  abstract makeSound(): <span class="hljs-keyword">void</span>;
  move(): <span class="hljs-keyword">void</span> {
    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">"Roaming the earth..."</span>);
  }
}
<span class="copy-code-btn">复制代码</span></code></pre><p>可以看到抽象类就是在类之前加上 <code>abstract</code> 关键字，同时，它还不允许被实例化，也就是说如下的操作是不允许的：</p>
<pre><code class="hljs js copyable" lang="js"><span class="hljs-keyword">const</span> bird = <span class="hljs-keyword">new</span> Animal() <span class="hljs-comment">// Error</span>
<span class="copy-code-btn">复制代码</span></code></pre><p>除此之外，抽象类相比普通类还有一个额外的特性就是，可以在抽象类中定义抽象方法，就像我们上面的 <code>makeSound</code> 方法，在普通的方法定义之前加上 <code>abstract</code> 关键字，这个抽象方法类似于接口里面的方法的类型定义：1）注解参数和返回值 2）不给出具体的实现，如上面的 <code>move</code> 就是存在具体的实现，而 <code>makeSound</code> 不给出具体的实现。</p>
<h4 class="heading" data-id="heading-15">抽象类的继承</h4>
<p>抽象类只可以被继承，不可以被实例化，且抽象类的继承与普通类也存在不同，普通类的继承可以只是简单的继承，并不需要额外的操作：</p>
<pre><code class="hljs js copyable" lang="js"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Animal</span> </span>{
  <span class="hljs-comment">// Animal 相关的属性</span>
}

<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Bird</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Animal</span> </span>{
  <span class="hljs-comment">// 不需要做任何操作</span>
}
<span class="copy-code-btn">复制代码</span></code></pre><p>但是如果一个类继承另外一个抽象类，那么它必须得实现抽象类中的抽象方法：</p>
<pre><code class="hljs js copyable" lang="js">abstract <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Animal</span> </span>{
  abstract makeSound(): <span class="hljs-keyword">void</span>;
  move(): <span class="hljs-keyword">void</span> {
    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">"Roaming the earth..."</span>);
  }
}

<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Bird</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Animal</span> </span>{
  makeSound(): <span class="hljs-keyword">void</span> {
    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'Tuture tuture tuture.'</span>);
  }
}
<span class="copy-code-btn">复制代码</span></code></pre><p>可以看到，上面我们定义了一个 <code>Bird</code> 类，它继承自 <code>Animal</code> 抽象类，它必须得实现 <code>makeSound</code> 抽象方法。</p>
<h3 class="heading" data-id="heading-16">构造函数</h3>
<p>通过上面的讲解我们基本了解了 TS 中的类相比 JS 额外增加的特性，主要是讲解了如何注解类的相关部分内容，接下来我们着重来谈一谈如何用类来注解其他内容。这里为什么类可以作为类型来注解其他内容了？原来在 TS 中声明一个类的同时会创建多个声明：</p>
<p>1）第一个声明是一个类型，这个类型是这个类实例对象类型，用于注解类的实例对象。</p>
<p>2）第二个声明则是类的构造函数，我们在实例化类时，就是通过 <code>new</code> 关键字加上这个构造函数调用来生成一个类的实例。</p>
<h4 class="heading" data-id="heading-17">声明注解类实例的类型</h4>
<p>可能上面的概念听得有点懵，我们拿之前那个例子来实际演示一下。</p>
<pre><code class="hljs js copyable" lang="js"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Animal</span> </span>{
  name: string;

  <span class="hljs-keyword">static</span> isAnimal(a: Animal): boolean {
    <span class="hljs-keyword">return</span> a <span class="hljs-keyword">instanceof</span> Animal;
  }

  <span class="hljs-keyword">constructor</span>(name: string) {
    <span class="hljs-keyword">this</span>.name = name;
  }

  move(distance: number) {
    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">`Animal moved <span class="hljs-subst">${distance}</span>m.`</span>);
  }
}

<span class="hljs-keyword">const</span> bird: Animal = <span class="hljs-keyword">new</span> Animal(<span class="hljs-string">'Tuture'</span>);
<span class="copy-code-btn">复制代码</span></code></pre><p>这第一个声明的用于注解类实例对象的类型就是我们上面的 <code>Animal</code> ，当我们声明了一个 <code>Animal</code> 类之后，我们可以用这个 <code>Animal</code> 来注解 <code>Animal</code> 的实例如 <code>bird</code> 或者 <code>isAnimal</code> 方法中的 <code>a</code> 参数，当你理解了这个概念之后，你会发现 <code>isAnimal</code> 方法只允许传入为 <code>Animal</code> 实例的参数 <code>a</code> ，然后返回一个 <code>a instance Animal</code> 的布尔值，这是一个永远返回 <code>true</code> 的函数。</p>
<blockquote>
<p><strong>提示</strong></p>
<p>这里这个声明的 <code>Animal</code> 类型不包括构造函数 <code>constructor</code> 以及类中的静态方法和静态属性，就像实例对象中是不包含类的构造函数、静态方法和静态属性一样。</p>
</blockquote>
<h4 class="heading" data-id="heading-18">声明构造函数</h4>
<p>了解了第一个声明，那么第二个声明又是什么意思了？其实就是上面我们执行 <code>new Animal('Tuture')</code> 来生成一个实例时，这里的 <code>Animal</code> 实际上就是一个构造函数，通过 <code>new Animal('Tuture')</code> 调用实际上就是调用我们类里面的 <code>constructor</code> 函数。</p>
<p>那么有的同学看到这里就有疑问了，我们的 <code>Animal</code> 类型是用来注解类的实例的，那么类的构造函数 <code>Animal</code> 该如何注解了？我们来看这样一个例子：</p>
<pre><code class="hljs js copyable" lang="js"><span class="hljs-keyword">let</span> AnimalCreator = Animal;
<span class="copy-code-btn">复制代码</span></code></pre><p>在这段代码中，我们将 <code>Animal</code>  构造函数赋值给 <code>AnimalCreator</code> ，那么我们如何注解这个 <code>AnimalCreator</code> 变量的类型了？当然 TS 具有自动类型推导机制，一般情况下我们是不需要注解这个变量的，但这里如果我们要注解它，那么该如何注解了？答案是可以借助 JS 原有的 <code>typeof</code> 方法：</p>
<pre><code class="hljs js copyable" lang="js"><span class="hljs-keyword">let</span> AnimalCreator: <span class="hljs-keyword">typeof</span> Animal = Animal;
<span class="copy-code-btn">复制代码</span></code></pre><p>我们通过 <code>typeof Animal</code> 获取构造函数 <code>Animal</code> 的类型，然后用此类型注解 <code>AnimalCreator</code> 。</p>
<h3 class="heading" data-id="heading-19">类与接口</h3>
<p>上面我们了解了类在声明的时候会声明一个类型，此类型可以用于注解类的实例，其实这个类型和我们之前学习的接口（<code>Interface</code> ）有异曲同工之妙，具体类与接口结合使用的时候有如下场景：</p>
<ul>
<li>
<p>类实现接口</p>
</li>
<li>
<p>接口继承类</p>
</li>
<li>
<p>类作为接口使用</p>
</li>
</ul>
<h4 class="heading" data-id="heading-20">类实现接口</h4>
<p>类一般只能继承类，但是多个不同的类如果共有一些属性或者方法时，就可以用接口来定义这些属性或者方法，然后多个类来继承这个接口，以达到属性和方法复用的目的，比如我们有两个类 <code>Door</code> （门）和 <code>Car</code> （车），他们都有 <code>Alarm</code> （报警器）的功能，但是他们又是不同的类，这个时候我们就可以定义一个 <code>Alarm</code> 接口：</p>
<pre><code class="hljs js copyable" lang="js">interface Alarm {
  alert(): <span class="hljs-keyword">void</span>;
}

<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Car</span> <span class="hljs-title">implements</span> <span class="hljs-title">Alarm</span> </span>{
  alert() {
    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'Car alarm'</span>);
  }
}
<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Door</span> <span class="hljs-title">implements</span> <span class="hljs-title">Alarm</span> </span>{
  alert() {
    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'Door alarm'</span>);
  }
}
<span class="copy-code-btn">复制代码</span></code></pre><p>此时的接口 <code>Alarm</code> 和我们之前定义的抽象类类似，接口中的方法 <code>alert</code> 类似抽象类中的抽象方法，一旦类实现 (<code>implements</code> ）了这个接口，那么也要实现这个接口中的方法，比如这里的 <code>alert</code> 。</p>
<p>和类的单继承不一样，一个类可以实现多个接口，比如我们的车还可以开灯，那么我们可以定义一个 <code>Light</code> 接口，给车整上灯：</p>
<pre><code class="hljs js copyable" lang="js">interface Alarm {
  alert(): <span class="hljs-keyword">void</span>;
}

interface Light {
  lightOn(): <span class="hljs-keyword">void</span>;
  lightOff(): <span class="hljs-keyword">void</span>;
}

<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Car</span> <span class="hljs-title">implements</span> <span class="hljs-title">Alarm</span>, <span class="hljs-title">Light</span> </span>{
  alert() {
    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'Car alarm'</span>);
  }

  lightOn() {
    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'Car lighton'</span>);
  }

  lightOff() {
    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'Car lightoff'</span>);
  }
}
<span class="copy-code-btn">复制代码</span></code></pre><h4 class="heading" data-id="heading-21">接口继承类</h4>
<p>接口之所以可以继承类是因为我们之前说到了类在声明的时候会声明一个类型，此类型用于注解类的实例。而接口继承类就是继承这个声明的类型，我们来看一个例子：</p>
<pre><code class="hljs js copyable" lang="js"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Point</span> </span>{
  x: number;
  y: number;
}

interface Point3d extends Point {
  <span class="hljs-attr">z</span>: number;
}

<span class="hljs-keyword">let</span> point3d: Point3d = { <span class="hljs-attr">x</span>: <span class="hljs-number">1</span>, <span class="hljs-attr">y</span>: <span class="hljs-number">2</span>, <span class="hljs-attr">z</span>: <span class="hljs-number">3</span> };
<span class="copy-code-btn">复制代码</span></code></pre><p>可以看到，接口 <code>Point3d</code> 继承自类 <code>Point</code> ，获取了来自类的 <code>x</code> 和 <code>y</code> 属性，实际上接口继承的是声明 <code>Point</code> 类时同时声明的用于注解类实例的那个类型，而这个类型只包含类的实例属性和方法，所以接口继承类也是继承此类的实例属性和方法的类型。</p>
<h4 class="heading" data-id="heading-22">类作为接口使用</h4>
<p>类作为接口使用的场景主要在我们给 React 组件的 <code>Props</code> 和 <code>State</code> 进行类型注解的时候，我们既要给组件的 <code>Props</code> 进行类型注解，有时候还要设置组件的 <code>defaultProps</code> 值，这里的 <code>Props</code> 的注解和 <code>defaultProps</code> 值设置原本需要分开进行，我们来看一个例子：</p>
<pre><code class="hljs js copyable" lang="js">interface TodoInputProps {
  <span class="hljs-attr">value</span>: string;
  onChange: <span class="hljs-function">(<span class="hljs-params">value: string</span>) =&gt;</span> <span class="hljs-keyword">void</span>;
}

interface TodoInputState {
  <span class="hljs-attr">content</span>: string;
  user: string;
  date: string;
}

<span class="hljs-keyword">const</span> hardCodeDefaultProps = {
  <span class="hljs-attr">value</span>: <span class="hljs-string">'tuture'</span>,
  onChange(value: string) { <span class="hljs-built_in">console</span>.log(<span class="hljs-string">`Hello <span class="hljs-subst">${value}</span>`</span>); }
}

<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">TodoInput</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">React</span>.<span class="hljs-title">Component</span>&lt;<span class="hljs-title">TodoInputProps</span>, <span class="hljs-title">TodoInputState</span>&gt; </span>{
  <span class="hljs-keyword">static</span> defaultProps: TodoInputProps = hardCodeDefaultProps;

  render() {
    <span class="hljs-keyword">return</span> <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>Hello World<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span>;
  }
}
<span class="copy-code-btn">复制代码</span></code></pre><p>可以看到，上面是一个标准的 React 类组件，我们通过 <code>React.Component&lt;TodoInputProps, TodoInputState&gt;</code> 的形式注解了这个类组件的 <code>Props</code> 和 <code>State</code> ，通过声明了两个接口来进行注解，这里 <code>React.Component&lt;TodoInputProps, TodoInputState&gt;</code> 就是泛型，现在不懂没关系，我们将在下一节讲解泛型，这里可以理解泛型类似 JS 函数，这里的 <code>&lt;&gt;</code> 类似函数的 <code>()</code> ，然后可以接收参数，这里我们传入了两个参数分别注解类的 <code>Props</code> 和 <code>State</code> 。</p>
<p>我们还注意到，我们声明了这个类的 <code>defaultProps</code> ，然后定义了一个 <code>hardCodeDefaultProps</code> 来初始化这个 <code>defaultProps</code> 。</p>
<p>这就是常见的 React 类组件的类型注解和默认参数初始化的场景，但是当我们学了类之后，我们可以简化一下上面的类组件的类型注解和默认参数初始化的操作：</p>
<pre><code class="hljs js copyable" lang="js"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">TodoInputProps</span> </span>{
  value: string = <span class="hljs-string">'tuture'</span>;
  onChange(value: string) {
    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'Hello Tuture'</span>);
  }
}

interface TodoInputState {
  <span class="hljs-attr">content</span>: string;
  user: string;
  date: string;
}

<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">TodoInput</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">React</span>.<span class="hljs-title">Component</span>&lt;<span class="hljs-title">TodoInputProps</span>, <span class="hljs-title">TodoInputState</span>&gt; </span>{
  <span class="hljs-keyword">static</span> defaultProps: TodoInputProps = <span class="hljs-keyword">new</span> TodoInputProps();

  render() {
    <span class="hljs-keyword">return</span> <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>Hello World<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span>;
  }
}
<span class="copy-code-btn">复制代码</span></code></pre><p>可以看到，上面我们将接口 <code>Props</code> 换成了类 <code>TodoInputProps</code> ，这带来了一些改变，就是类里面可以给出属性和方法的具体实现，而我们又知道声明类 <code>TodoInputProps</code> 的时候会同时声明一个类型 <code>TodoInputProps</code> ，我们用这个类型来注解组件的 <code>Props</code> ，然后注解 <code>defaultProps</code> ，然后我们用声明类时声明的第二个内容：<code>TodoInputProps</code> 构造函数来创建一个 <code>TodoInputProps</code> 类型的实例对象并赋值给 <code>defaultProps</code> ，细心的同学可以把这段代码复制到我们之前的 <code>src/TodoInput.tsx</code> 文件里，编辑器应该会显示正常，我们成功利用了类的特性来帮助我们的 React 组件简化代码，提高了代码的逻辑性。</p>
<h3 class="heading" data-id="heading-23">动手实践</h3>
<p>学习了类的内容之后，我们马上将学到的知识运用在我们的待办事项小应用里面，打开 <code>src/TodoInput.tsx</code> ，对其中的内容作出对应的修改如下：</p>
<pre><code class="hljs jsx copyable" lang="jsx"><span class="hljs-keyword">import</span> React <span class="hljs-keyword">from</span> <span class="hljs-string">"react"</span>;
<span class="hljs-keyword">import</span> { Input, Select, DatePicker } <span class="hljs-keyword">from</span> <span class="hljs-string">"antd"</span>;
<span class="hljs-keyword">import</span> { Moment } <span class="hljs-keyword">from</span> <span class="hljs-string">"moment"</span>;

<span class="hljs-comment">// ...</span>

interface TodoInputProps {
  value?: TodoValue;
  onChange?: <span class="hljs-function">(<span class="hljs-params">value: TodoValue</span>) =&gt;</span> <span class="hljs-keyword">void</span>;
}

interface TodoInputState {
  <span class="hljs-attr">content</span>: string;
  user: UserId;
  date: string;
}

<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">TodoInput</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">React</span>.<span class="hljs-title">Component</span>&lt;<span class="hljs-title">TodoInputProps</span>, <span class="hljs-title">TodoInputState</span>&gt; </span>{
  state = {
    <span class="hljs-attr">content</span>: <span class="hljs-string">""</span>,
    <span class="hljs-attr">user</span>: UserId.tuture,
    <span class="hljs-attr">date</span>: <span class="hljs-string">""</span>
  };

  private triggerChange = <span class="hljs-function">(<span class="hljs-params">changedValue: TodoValue</span>) =&gt;</span> {
    <span class="hljs-keyword">const</span> { content, user, date } = <span class="hljs-keyword">this</span>.state;
    <span class="hljs-keyword">const</span> { value, onChange } = <span class="hljs-keyword">this</span>.props;

    <span class="hljs-keyword">if</span> (onChange) {
      onChange({ content, user, date, ...value, ...changedValue });
    }
  };

  private onContentChange = <span class="hljs-function">(<span class="hljs-params">e: React.ChangeEvent&lt;HTMLInputElement&gt;</span>) =&gt;</span> {
    <span class="hljs-keyword">const</span> { value = {} } = <span class="hljs-keyword">this</span>.props;

    <span class="hljs-keyword">if</span> (!(<span class="hljs-string">"content"</span> <span class="hljs-keyword">in</span> value!)) {
      <span class="hljs-built_in">console</span>.log(<span class="hljs-string">"hello"</span>);
      <span class="hljs-keyword">this</span>.setState({
        <span class="hljs-attr">content</span>: e.target.value
      });
    }

    <span class="hljs-keyword">this</span>.triggerChange({ <span class="hljs-attr">content</span>: e.target.value });
  };

  private onUserChange = <span class="hljs-function">(<span class="hljs-params">selectValue: UserId</span>) =&gt;</span> {
    <span class="hljs-keyword">const</span> { value = {} } = <span class="hljs-keyword">this</span>.props;

    <span class="hljs-keyword">if</span> (!(<span class="hljs-string">"user"</span> <span class="hljs-keyword">in</span> value!)) {
      <span class="hljs-keyword">this</span>.setState({
        <span class="hljs-attr">user</span>: selectValue
      });
    }

    <span class="hljs-keyword">this</span>.triggerChange({ <span class="hljs-attr">user</span>: selectValue });
  };

  private onDateOk = <span class="hljs-function">(<span class="hljs-params">date: Moment</span>) =&gt;</span> {
    <span class="hljs-keyword">const</span> { value = {} } = <span class="hljs-keyword">this</span>.props;
    <span class="hljs-keyword">if</span> (!(<span class="hljs-string">"date"</span> <span class="hljs-keyword">in</span> value!)) {
      <span class="hljs-keyword">this</span>.setState({
        <span class="hljs-attr">date</span>: date.format(<span class="hljs-string">"YYYY-MM-DD HH:mm"</span>)
      });
    }

    <span class="hljs-keyword">this</span>.triggerChange({ <span class="hljs-attr">date</span>: date.format(<span class="hljs-string">"YYYY-MM-DD HH:mm"</span>) });
  };

  public render() {
    <span class="hljs-keyword">const</span> { value } = <span class="hljs-keyword">this</span>.props;
    <span class="hljs-keyword">const</span> { content, user } = <span class="hljs-keyword">this</span>.state;
    <span class="hljs-keyword">return</span> (
      &lt;div className="todoInput"&gt;
        &lt;Input
          type="text"
          placeholder="输入待办事项内容"
          value={value?.content || content}
          onChange={this.onContentChange}
        /&gt;
        &lt;Select
          style={{ width: 80 }}
          size="small"
          defaultValue={UserId.tuture}
          value={value?.user || user}
          onChange={this.onUserChange}
        &gt;
          {userList.map(user =&gt; (
            &lt;Option value={user.id}&gt;{user.name}&lt;/Option&gt;
          ))}
        &lt;/Select&gt;
        &lt;DatePicker
          showTime
          size="small"
          onOk={this.onDateOk}
          style={{ marginLeft: "16px", marginRight: "16px" }}
        /&gt;
      &lt;/div&gt;
    );
  }
}

export default TodoInput;
<span class="copy-code-btn">复制代码</span></code></pre><p>可以看到上面的改动主要有如下几处：</p>
<ul>
<li>我们将之前的函数式组件改成了类组件，然后定义了一个  <code>TodoInputState</code> 接口，加上之前的 <code>TodoInputProps</code> ，一起以泛型的形式注解类的 <code>Props</code> 和 <code>State</code> ，接着我们在类中加上实例属性 <code>state</code> 。</li>
<li>接着我们将 <code>triggerChange</code> 、<code>onContentChange</code> 、<code>onUserChange</code> 、<code>onDateOk</code> 四个方法改成了类的私有方法。</li>
<li>最后我们加上了类组件独有的 <code>render</code> 方法，它是一个 <code>public</code> 类型的方法。</li>
</ul>
<blockquote>
<p><strong>提示</strong></p>
<p>这里我们在改造 <code>onContentChange</code> 的时候，用 <code>React.ChangeEvent&lt;HTMLInputElement&gt;</code> 的方式注解了方法参数的 <code>e</code> ，这里也是泛型的一部分，我们将在下一节着重讲解，这里可以理解为一个 <code>HTMLInputElement</code>类型的的 <code>React.ChangeEvent</code> 。</p>
<p>那么有同学会有疑问了，这里我们是如何知道该这样注解了？实际上，我们看到 <code>render</code> 方法里的 <code>Input</code> 组件的 <code>onChange</code> 方法，当我们把鼠标放上去的时候，编辑器会给出如下提示：</p>
<p></p><figure><img class="lazyload inited loaded" data-src="https://user-gold-cdn.xitu.io/2020/4/16/17180963d146c22e?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" data-width="1280" data-height="527" src="./类型即正义：TypeScript 从入门到实践（三）：类型别名和类 - 掘金_files/17180963d146c22e"><figcaption></figcaption></figure><p></p>
<p>可以看到，编辑器直接提醒我们该怎么注解 <code>event</code> 参数了，果然优秀的编辑器可以提高生产力啊！</p>
</blockquote>
<h3 class="heading" data-id="heading-24">小结</h3>
<p>在这一节中，我们学习了 TS 的类，主要学习了如下知识：</p>
<ul>
<li>了解一个类有哪些组成部分，以及如何注解这些组成部分</li>
<li>了解了 TS 类独有的访问限定符：<code>public</code> 、<code>protected</code> 和 <code>private</code></li>
<li>了解了 TS 类就像接口一样，它的属性或者方法的参数也可以用 <code>readonly</code> 来修饰</li>
<li>学习了 TS 的抽象类，知道了抽象类的抽象方法以及抽象类不可以直接被实例化，只可以被子类继承，且继承自抽象类的子类需要实现抽象类的抽象方法，即给出具体的同名方法的方法体</li>
<li>接着，我们学习了 TS 类的独特性，同时声明了两个内容 1）一个用于注解类实例的类型 2）一个用于生成类实例的构造方法</li>
<li>最后，我们学习了类和接口的一些互相操作的场景 1）多个类实现同一个接口来复用接口的属性或者方法 2）一个类实现多个接口 3）接口也可以继承类，只不过是继承类声明时同时声明的同名类型 4）类作为接口使用，通过进一步应用类声明的两个内容来简化 React 组件代码，提高代码的逻辑性和可复用性。</li>
</ul>
<p>在这一节最后，我们稍微引申了一下泛型，说它类似 JS 里面的函数，可以接收类型参数，在下一节中，我们将重点讲解泛型的知识和应用，敬请期待！</p>
<blockquote>
<p>想要学习更多精彩的实战技术教程？来<a target="_blank" href="https://tuture.co/?utm_source=juejin_zhuanlan" rel="nofollow noopener noreferrer">图雀社区</a>逛逛吧。</p>
</blockquote>
<blockquote>
<p>本文所涉及的源代码都放在了 <a target="_blank" href="https://github.com/tuture-dev/typescript-tea" rel="nofollow noopener noreferrer">Github</a>&nbsp; 或者 <a target="_blank" href="https://gitee.com/tuture/typescript-tea" rel="nofollow noopener noreferrer">Gitee</a> 上，如果您觉得我们写得还不错，希望您能给<strong>❤️这篇文章点赞<a target="_blank" href="https://github.com/tuture-dev/typescript-tea" rel="nofollow noopener noreferrer">Github</a> 或 <a target="_blank" href="https://gitee.com/tuture/typescript-tea" rel="nofollow noopener noreferrer">Gitee</a> 仓库加星❤</strong>️哦~</p>
</blockquote>
<p></p><figure><img class="lazyload inited loaded" data-src="https://user-gold-cdn.xitu.io/2019/12/19/16f1ddb37a4d47a8?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" data-width="900" data-height="500" src="./类型即正义：TypeScript 从入门到实践（三）：类型别名和类 - 掘金_files/16f1ddb37a4d47a8"><figcaption></figcaption></figure><p></p>
</div></article><div data-v-50ff96fb="" data-v-0f848c07="" class="tag-list-box"><div data-v-50ff96fb="" data-v-0f848c07="" class="tag-list-title">关注下面的标签，发现更多相似文章</div><div data-v-50ff96fb="" data-v-0f848c07="" st:block="tagList" class="tag-list"><a data-v-50ff96fb="" href="https://juejin.im/tag/TypeScript" target="_blank" rel="" st:name="tag" class="item" data-v-0f848c07=""><div data-v-261e638e="" data-v-a98f170a="" data-v-50ff96fb="" data-src="https://lc-gold-cdn.xitu.io/d788a559489fa6e30b25.png?imageView2/2/w/42/h/42/q/85/format/webp/interlace/1" class="lazy thumb tag-icon loaded" style="background-image: url(&quot;https://lc-gold-cdn.xitu.io/d788a559489fa6e30b25.png?imageView2/2/w/42/h/42/q/85/format/webp/interlace/1&quot;); background-size: contain;"></div><div data-v-50ff96fb="" class="tag-title">TypeScript</div></a></div></div><a data-v-50ff96fb="" href="https://juejin.im/user/5b33414351882574b9694d28" target="_blank" rel="" data-v-0f848c07=""><div data-v-50ff96fb="" class="footer-author-block"><div data-v-95a5e9b8="" data-v-50ff96fb="" itemscope="itemscope" itemtype="http://schema.org/Person" class="author"><meta itemprop="url" content="https://juejin.im/user/5b33414351882574b9694d28"><meta itemprop="image" content="https://user-gold-cdn.xitu.io/2019/9/22/16d596f04f4f4e3d?w=1000&amp;h=1000&amp;f=png&amp;s=170175"><meta itemprop="name" content="图雀社区"><meta itemprop="jobTitle" content="一只图雀 @ 公众号「图雀社区」"><!----><div data-v-95a5e9b8="" class="author-info-block"><a data-v-95a5e9b8="" href="https://juejin.im/user/5b33414351882574b9694d28" target="_blank" rel="" class="avatar-link"><div data-v-261e638e="" data-v-b49070bc="" data-v-95a5e9b8="" data-src="https://user-gold-cdn.xitu.io/2019/9/22/16d596f04f4f4e3d?imageView2/1/w/100/h/100/q/85/format/webp/interlace/1" class="lazy avatar avatar loaded" style="background-image: url(&quot;https://user-gold-cdn.xitu.io/2019/9/22/16d596f04f4f4e3d?imageView2/1/w/100/h/100/q/85/format/webp/interlace/1&quot;);"></div></a><div data-v-95a5e9b8="" class="author-info-box"><div data-v-95a5e9b8="" class="profile-box"><a data-v-1a54813b="" data-v-95a5e9b8="" href="https://juejin.im/user/5b33414351882574b9694d28" target="_blank" rel="" class="username username ellipsis">图雀社区<a data-v-3a430c94="" data-v-1a54813b="" href="https://juejin.im/book/5c90640c5188252d7941f5bb/section/5c9065385188252da6320022" target="_blank" rel="" class="rank"><img data-v-3a430c94="" src="./类型即正义：TypeScript 从入门到实践（三）：类型别名和类 - 掘金_files/lv-4.2c3fafd.svg" alt="lv-4"></a></a><span data-v-95a5e9b8="" class="position ellipsis">一只图雀 @ 公众号「图雀社区」</span></div><div data-v-95a5e9b8="" class="meta-box"><a data-v-95a5e9b8="" href="https://juejin.im/user/5b33414351882574b9694d28/posts" target="_blank" rel="" class="posts"><span data-v-95a5e9b8="" class="count post-count">发布了 60 篇专栏 · </span></a><span data-v-95a5e9b8="" class="count">获得点赞 3,453 · </span><span data-v-95a5e9b8="" class="count">获得阅读 180,774</span></div></div><button data-v-d05fee10="" data-v-95a5e9b8="" class="follow-button follow">关注</button></div></div></div></a><div data-v-50ff96fb="" data-v-0f848c07="" st:block="banner" class="article-banner"><a data-v-50ff96fb="" data-v-0f848c07="" st:name="link" st:state="https://juejin.im/extension/?utm_source=juejin.im&amp;utm_medium=post&amp;utm_campaign=extension_promotion" class="banner-title" href="https://juejin.im/extension/?utm_source=juejin.im&amp;utm_medium=post&amp;utm_campaign=extension_promotion" target="_blank">安装掘金浏览器插件</a><div data-v-50ff96fb="" data-v-0f848c07="" class="banner-content">打开新标签页发现好内容，掘金、GitHub、Dribbble、ProductHunt 等站点内容轻松获取。快来安装掘金浏览器插件获取高质量内容吧！</div></div><!----><!----><div data-v-43803909="" data-v-50ff96fb="" class="comment-list-box" id="comment-box" data-v-0f848c07=""><div data-v-43803909="" class="title">评论</div><div data-v-bc5a7668="" data-v-43803909="" class="comment-form comment-form"><div data-v-bc5a7668="" class="avatar-box"><div data-v-261e638e="" data-v-b49070bc="" data-v-bc5a7668="" data-src="https://mirror-gold-cdn.xitu.io/168e08d6d9e8b3febec?imageView2/1/w/100/h/100/q/85/format/webp/interlace/1" class="lazy avatar avatar" style="background-image: none;"></div></div><div data-v-bc5a7668="" class="form-box"><div data-v-bc5a7668="" class="input-box"><div data-v-e4402004="" data-v-bc5a7668="" class="auth-card"><!----><div data-v-bc5a7668="" data-v-e4402004="" contenteditable="true" spellcheck="false" placeholder="输入评论..." class="rich-input empty"><br data-v-bc5a7668="" data-v-e4402004=""></div></div><!----></div><!----></div><input data-v-bc5a7668="" type="file" class="hidden"></div><div data-v-7c7d1c40="" data-v-43803909="" class="comment-list comment-list"><div data-v-ddb41540="" data-v-7c7d1c40="" class="image-viewer-box"><!----></div><div data-v-7c7d1c40="" class="item"><div data-v-6aebcf4a="" data-v-7c7d1c40="" class="comment comment"><div data-v-2bc7e294="" data-v-6aebcf4a="" st:block="userPopover" st:state="5c38342851882523d32016e4" class="user-popover-box popover"><!----><a data-v-6aebcf4a="" href="https://juejin.im/user/5c38342851882523d32016e4" target="_blank" rel="" class="user-link" data-v-2bc7e294=""><div data-v-261e638e="" data-v-b49070bc="" data-v-6aebcf4a="" data-src="https://mirror-gold-cdn.xitu.io/168e09b90ce37695148?imageView2/1/w/100/h/100/q/85/format/webp/interlace/1" class="lazy avatar avatar" style="background-image: none;"></div></a></div><div data-v-6aebcf4a="" class="content-box comment-divider-line"><div data-v-6aebcf4a="" class="meta-box"><div data-v-2bc7e294="" data-v-6aebcf4a="" st:block="userPopover" st:state="5c38342851882523d32016e4" class="user-popover-box"><!----><a data-v-1a54813b="" data-v-6aebcf4a="" href="https://juejin.im/user/5c38342851882523d32016e4" target="_blank" rel="" class="username username ellipsis" data-v-2bc7e294="">豪Sir<!----></a></div><div data-v-6aebcf4a="" class="position"></div></div><div data-v-6aebcf4a="" class="content">很棒，通过typescript + react可以很系统的学习。</div><div data-v-6aebcf4a="" class="limit-ctl-box"><!----><!----></div><!----><div data-v-6aebcf4a="" class="reply-stat"><time data-v-6aebcf4a="" datetime="2020-05-27T09:14:03.335Z" title="Wed May 27 2020 17:14:03 GMT+0800 (中国标准时间)" class="time">11天前</time><div data-v-6aebcf4a="" class="delete"> &nbsp;·&nbsp;删除</div><div data-v-6aebcf4a="" class="action-box"><div data-v-6aebcf4a="" class="like-action action"><svg data-v-6aebcf4a="" aria-hidden="true" width="16" height="16" viewBox="0 0 20 20" class="icon like-icon"><g data-v-6aebcf4a="" fill="none" fill-rule="evenodd"><path data-v-6aebcf4a="" d="M0 0h20v20H0z"></path> <path data-v-6aebcf4a="" stroke="#8A93A0" stroke-linejoin="round" d="M4.58 8.25V17h-1.4C2.53 17 2 16.382 2 15.624V9.735c0-.79.552-1.485 1.18-1.485h1.4zM11.322 2c1.011.019 1.614.833 1.823 1.235.382.735.392 1.946.13 2.724-.236.704-.785 1.629-.785 1.629h4.11c.434 0 .838.206 1.107.563.273.365.363.84.24 1.272l-1.86 6.513A1.425 1.425 0 0 1 14.724 17H6.645V7.898C8.502 7.51 9.643 4.59 9.852 3.249A1.47 1.47 0 0 1 11.322 2z"></path></g></svg><span data-v-6aebcf4a="" class="action-title">1</span></div><div data-v-6aebcf4a="" class="comment-action action"><svg data-v-6aebcf4a="" aria-hidden="true" width="16" height="16" viewBox="0 0 20 20" class="icon comment-icon"><g data-v-6aebcf4a="" fill="none" fill-rule="evenodd"><path data-v-6aebcf4a="" d="M0 0h20v20H0z"></path> <path data-v-6aebcf4a="" stroke="#8A93A0" stroke-linejoin="round" d="M10 17c-4.142 0-7.5-2.91-7.5-6.5S5.858 4 10 4c4.142 0 7.5 2.91 7.5 6.5 0 1.416-.522 2.726-1.41 3.794-.129.156.41 3.206.41 3.206l-3.265-1.134c-.998.369-2.077.634-3.235.634z"></path></g></svg> <span data-v-6aebcf4a="" class="action-title">回复</span></div></div></div><!----><div data-v-18f279d9="" data-v-6aebcf4a="" class="sub-comment-list sub-comment-list"><div data-v-18f279d9="" class="item"><div data-v-0a600e85="" data-v-18f279d9="" class="sub-comment sub-comment"><div data-v-0a600e85="" class="sub-comment-content-row"><div data-v-0a600e85="" class="sub-comment-content-box"><div data-v-2bc7e294="" data-v-0a600e85="" st:block="userPopover" st:state="5b33414351882574b9694d28" class="user-popover-box popover"><!----><a data-v-0a600e85="" href="https://juejin.im/user/5b33414351882574b9694d28" target="_blank" rel="" class="username" data-v-2bc7e294=""><div data-v-261e638e="" data-v-b49070bc="" data-v-0a600e85="" data-src="https://user-gold-cdn.xitu.io/2019/9/22/16d596f04f4f4e3d?imageView2/1/w/100/h/100/q/85/format/webp/interlace/1" class="lazy avatar avatar" style="background-image: none;"></div></a></div><div data-v-0a600e85="" class="user-content-box"><div data-v-0a600e85="" class="profie"><div data-v-2bc7e294="" data-v-0a600e85="" st:block="userPopover" st:state="5b33414351882574b9694d28" class="user-popover-box"><!----><a data-v-1a54813b="" data-v-0a600e85="" href="https://juejin.im/user/5b33414351882574b9694d28" target="_blank" rel="" class="username" data-v-2bc7e294="">图雀社区<a data-v-3a430c94="" data-v-1a54813b="" href="https://juejin.im/book/5c90640c5188252d7941f5bb/section/5c9065385188252da6320022" target="_blank" rel="" class="rank"><img data-v-3a430c94="" src="./类型即正义：TypeScript 从入门到实践（三）：类型别名和类 - 掘金_files/lv-4.2c3fafd.svg" alt="lv-4"></a><span data-v-0a600e85="" class="author-badge-text">(作者)</span></a></div><div data-v-0a600e85="" class="position">一只图雀 @ 公众号「图雀社区」</div></div><div data-v-0a600e85="" class="content-box"><span data-v-0a600e85=""> 回复 </span><div data-v-2bc7e294="" data-v-0a600e85="" st:block="userPopover" st:state="5c38342851882523d32016e4" class="user-popover-box"><!----><a data-v-1a54813b="" data-v-0a600e85="" href="https://juejin.im/user/5c38342851882523d32016e4" target="_blank" rel="" class="username username be-replied" data-v-2bc7e294="">豪Sir<!----></a></div><!----><span data-v-0a600e85="">: </span><span data-v-0a600e85="" class="content">谢谢<img class="emoji" draggable="false" alt="😁" src="./类型即正义：TypeScript 从入门到实践（三）：类型别名和类 - 掘金_files/1f601.svg"></span></div><!----><!----><div data-v-0a600e85="" class="limit-all-box"><!----></div><div data-v-0a600e85="" class="sub-comment-stat-box"><time data-v-0a600e85="" datetime="2020-05-27T09:15:49.463Z" title="Wed May 27 2020 17:15:49 GMT+0800 (中国标准时间)" class="time">11天前</time><div data-v-0a600e85="" class="delete"> &nbsp;·&nbsp;删除</div><div data-v-0a600e85="" class="sub-comment-action-box"><div data-v-0a600e85="" class="like-action action"><svg data-v-0a600e85="" aria-hidden="true" width="16" height="16" viewBox="0 0 20 20" class="icon like-icon"><g data-v-0a600e85="" fill="none" fill-rule="evenodd"><path data-v-0a600e85="" d="M0 0h20v20H0z"></path> <path data-v-0a600e85="" stroke="#8A93A0" stroke-linejoin="round" d="M4.58 8.25V17h-1.4C2.53 17 2 16.382 2 15.624V9.735c0-.79.552-1.485 1.18-1.485h1.4zM11.322 2c1.011.019 1.614.833 1.823 1.235.382.735.392 1.946.13 2.724-.236.704-.785 1.629-.785 1.629h4.11c.434 0 .838.206 1.107.563.273.365.363.84.24 1.272l-1.86 6.513A1.425 1.425 0 0 1 14.724 17H6.645V7.898C8.502 7.51 9.643 4.59 9.852 3.249A1.47 1.47 0 0 1 11.322 2z"></path></g></svg><!----></div><div data-v-0a600e85="" class="comment-action action"><svg data-v-0a600e85="" aria-hidden="true" width="16" height="16" viewBox="0 0 20 20" class="icon comment-icon"><g data-v-0a600e85="" fill="none" fill-rule="evenodd"><path data-v-0a600e85="" d="M0 0h20v20H0z"></path> <path data-v-0a600e85="" stroke="#8A93A0" stroke-linejoin="round" d="M10 17c-4.142 0-7.5-2.91-7.5-6.5S5.858 4 10 4c4.142 0 7.5 2.91 7.5 6.5 0 1.416-.522 2.726-1.41 3.794-.129.156.41 3.206.41 3.206l-3.265-1.134c-.998.369-2.077.634-3.235.634z"></path></g></svg> <span data-v-0a600e85="">回复</span></div></div></div><!----></div></div></div><!----></div></div><!----></div></div><!----></div></div><div data-v-7c7d1c40="" class="item"><div data-v-6aebcf4a="" data-v-7c7d1c40="" class="comment comment"><div data-v-2bc7e294="" data-v-6aebcf4a="" st:block="userPopover" st:state="5dc2ffeb6fb9a04aa7049e21" class="user-popover-box popover"><!----><a data-v-6aebcf4a="" href="https://juejin.im/user/5dc2ffeb6fb9a04aa7049e21" target="_blank" rel="" class="user-link" data-v-2bc7e294=""><div data-v-261e638e="" data-v-b49070bc="" data-v-6aebcf4a="" data-src="https://mirror-gold-cdn.xitu.io/16e41b7b65ecf0abc80?imageView2/1/w/100/h/100/q/85/format/webp/interlace/1" class="lazy avatar avatar" style="background-image: none;"></div></a></div><div data-v-6aebcf4a="" class="content-box comment-divider-line"><div data-v-6aebcf4a="" class="meta-box"><div data-v-2bc7e294="" data-v-6aebcf4a="" st:block="userPopover" st:state="5dc2ffeb6fb9a04aa7049e21" class="user-popover-box"><!----><a data-v-1a54813b="" data-v-6aebcf4a="" href="https://juejin.im/user/5dc2ffeb6fb9a04aa7049e21" target="_blank" rel="" class="username username ellipsis" data-v-2bc7e294="">江之岛的猫<a data-v-3a430c94="" data-v-1a54813b="" href="https://juejin.im/book/5c90640c5188252d7941f5bb/section/5c9065385188252da6320022" target="_blank" rel="" class="rank"><img data-v-3a430c94="" src="./类型即正义：TypeScript 从入门到实践（三）：类型别名和类 - 掘金_files/lv-1.636691c.svg" alt="lv-1"></a></a></div><div data-v-6aebcf4a="" class="position">前端实习 @ 字节跳动</div></div><div data-v-6aebcf4a="" class="content">催更！！！哈哈哈写的很好！！</div><div data-v-6aebcf4a="" class="limit-ctl-box"><!----><!----></div><!----><div data-v-6aebcf4a="" class="reply-stat"><time data-v-6aebcf4a="" datetime="2020-04-22T15:17:14.741Z" title="Wed Apr 22 2020 23:17:14 GMT+0800 (中国标准时间)" class="time">1月前</time><div data-v-6aebcf4a="" class="delete"> &nbsp;·&nbsp;删除</div><div data-v-6aebcf4a="" class="action-box"><div data-v-6aebcf4a="" class="like-action action"><svg data-v-6aebcf4a="" aria-hidden="true" width="16" height="16" viewBox="0 0 20 20" class="icon like-icon"><g data-v-6aebcf4a="" fill="none" fill-rule="evenodd"><path data-v-6aebcf4a="" d="M0 0h20v20H0z"></path> <path data-v-6aebcf4a="" stroke="#8A93A0" stroke-linejoin="round" d="M4.58 8.25V17h-1.4C2.53 17 2 16.382 2 15.624V9.735c0-.79.552-1.485 1.18-1.485h1.4zM11.322 2c1.011.019 1.614.833 1.823 1.235.382.735.392 1.946.13 2.724-.236.704-.785 1.629-.785 1.629h4.11c.434 0 .838.206 1.107.563.273.365.363.84.24 1.272l-1.86 6.513A1.425 1.425 0 0 1 14.724 17H6.645V7.898C8.502 7.51 9.643 4.59 9.852 3.249A1.47 1.47 0 0 1 11.322 2z"></path></g></svg><span data-v-6aebcf4a="" class="action-title">1</span></div><div data-v-6aebcf4a="" class="comment-action action"><svg data-v-6aebcf4a="" aria-hidden="true" width="16" height="16" viewBox="0 0 20 20" class="icon comment-icon"><g data-v-6aebcf4a="" fill="none" fill-rule="evenodd"><path data-v-6aebcf4a="" d="M0 0h20v20H0z"></path> <path data-v-6aebcf4a="" stroke="#8A93A0" stroke-linejoin="round" d="M10 17c-4.142 0-7.5-2.91-7.5-6.5S5.858 4 10 4c4.142 0 7.5 2.91 7.5 6.5 0 1.416-.522 2.726-1.41 3.794-.129.156.41 3.206.41 3.206l-3.265-1.134c-.998.369-2.077.634-3.235.634z"></path></g></svg> <span data-v-6aebcf4a="" class="action-title">回复</span></div></div></div><!----><div data-v-18f279d9="" data-v-6aebcf4a="" class="sub-comment-list sub-comment-list"><div data-v-18f279d9="" class="item"><div data-v-0a600e85="" data-v-18f279d9="" class="sub-comment sub-comment"><div data-v-0a600e85="" class="sub-comment-content-row"><div data-v-0a600e85="" class="sub-comment-content-box"><div data-v-2bc7e294="" data-v-0a600e85="" st:block="userPopover" st:state="5b33414351882574b9694d28" class="user-popover-box popover"><!----><a data-v-0a600e85="" href="https://juejin.im/user/5b33414351882574b9694d28" target="_blank" rel="" class="username" data-v-2bc7e294=""><div data-v-261e638e="" data-v-b49070bc="" data-v-0a600e85="" data-src="https://user-gold-cdn.xitu.io/2019/9/22/16d596f04f4f4e3d?imageView2/1/w/100/h/100/q/85/format/webp/interlace/1" class="lazy avatar avatar" style="background-image: none;"></div></a></div><div data-v-0a600e85="" class="user-content-box"><div data-v-0a600e85="" class="profie"><div data-v-2bc7e294="" data-v-0a600e85="" st:block="userPopover" st:state="5b33414351882574b9694d28" class="user-popover-box"><!----><a data-v-1a54813b="" data-v-0a600e85="" href="https://juejin.im/user/5b33414351882574b9694d28" target="_blank" rel="" class="username" data-v-2bc7e294="">图雀社区<a data-v-3a430c94="" data-v-1a54813b="" href="https://juejin.im/book/5c90640c5188252d7941f5bb/section/5c9065385188252da6320022" target="_blank" rel="" class="rank"><img data-v-3a430c94="" src="./类型即正义：TypeScript 从入门到实践（三）：类型别名和类 - 掘金_files/lv-4.2c3fafd.svg" alt="lv-4"></a><span data-v-0a600e85="" class="author-badge-text">(作者)</span></a></div><div data-v-0a600e85="" class="position">一只图雀 @ 公众号「图雀社区」</div></div><div data-v-0a600e85="" class="content-box"><span data-v-0a600e85=""> 回复 </span><div data-v-2bc7e294="" data-v-0a600e85="" st:block="userPopover" st:state="5dc2ffeb6fb9a04aa7049e21" class="user-popover-box"><!----><a data-v-1a54813b="" data-v-0a600e85="" href="https://juejin.im/user/5dc2ffeb6fb9a04aa7049e21" target="_blank" rel="" class="username username be-replied" data-v-2bc7e294="">江之岛的猫<a data-v-3a430c94="" data-v-1a54813b="" href="https://juejin.im/book/5c90640c5188252d7941f5bb/section/5c9065385188252da6320022" target="_blank" rel="" class="rank"><img data-v-3a430c94="" src="./类型即正义：TypeScript 从入门到实践（三）：类型别名和类 - 掘金_files/lv-1.636691c.svg" alt="lv-1"></a></a></div><!----><span data-v-0a600e85="">: </span><span data-v-0a600e85="" class="content">哇！Thanks♪(･ω･)ﾉ<img class="emoji" draggable="false" alt="😘" src="./类型即正义：TypeScript 从入门到实践（三）：类型别名和类 - 掘金_files/1f618.svg"></span></div><!----><!----><div data-v-0a600e85="" class="limit-all-box"><!----></div><div data-v-0a600e85="" class="sub-comment-stat-box"><time data-v-0a600e85="" datetime="2020-04-23T00:47:25.005Z" title="Thu Apr 23 2020 08:47:25 GMT+0800 (中国标准时间)" class="time">1月前</time><div data-v-0a600e85="" class="delete"> &nbsp;·&nbsp;删除</div><div data-v-0a600e85="" class="sub-comment-action-box"><div data-v-0a600e85="" class="like-action action"><svg data-v-0a600e85="" aria-hidden="true" width="16" height="16" viewBox="0 0 20 20" class="icon like-icon"><g data-v-0a600e85="" fill="none" fill-rule="evenodd"><path data-v-0a600e85="" d="M0 0h20v20H0z"></path> <path data-v-0a600e85="" stroke="#8A93A0" stroke-linejoin="round" d="M4.58 8.25V17h-1.4C2.53 17 2 16.382 2 15.624V9.735c0-.79.552-1.485 1.18-1.485h1.4zM11.322 2c1.011.019 1.614.833 1.823 1.235.382.735.392 1.946.13 2.724-.236.704-.785 1.629-.785 1.629h4.11c.434 0 .838.206 1.107.563.273.365.363.84.24 1.272l-1.86 6.513A1.425 1.425 0 0 1 14.724 17H6.645V7.898C8.502 7.51 9.643 4.59 9.852 3.249A1.47 1.47 0 0 1 11.322 2z"></path></g></svg><!----></div><div data-v-0a600e85="" class="comment-action action"><svg data-v-0a600e85="" aria-hidden="true" width="16" height="16" viewBox="0 0 20 20" class="icon comment-icon"><g data-v-0a600e85="" fill="none" fill-rule="evenodd"><path data-v-0a600e85="" d="M0 0h20v20H0z"></path> <path data-v-0a600e85="" stroke="#8A93A0" stroke-linejoin="round" d="M10 17c-4.142 0-7.5-2.91-7.5-6.5S5.858 4 10 4c4.142 0 7.5 2.91 7.5 6.5 0 1.416-.522 2.726-1.41 3.794-.129.156.41 3.206.41 3.206l-3.265-1.134c-.998.369-2.077.634-3.235.634z"></path></g></svg> <span data-v-0a600e85="">回复</span></div></div></div><!----></div></div></div><!----></div></div><div data-v-18f279d9="" class="item"><div data-v-0a600e85="" data-v-18f279d9="" class="sub-comment sub-comment"><div data-v-0a600e85="" class="sub-comment-content-row"><div data-v-0a600e85="" class="sub-comment-content-box"><div data-v-2bc7e294="" data-v-0a600e85="" st:block="userPopover" st:state="5dc2ffeb6fb9a04aa7049e21" class="user-popover-box popover"><!----><a data-v-0a600e85="" href="https://juejin.im/user/5dc2ffeb6fb9a04aa7049e21" target="_blank" rel="" class="username" data-v-2bc7e294=""><div data-v-261e638e="" data-v-b49070bc="" data-v-0a600e85="" data-src="https://mirror-gold-cdn.xitu.io/16e41b7b65ecf0abc80?imageView2/1/w/100/h/100/q/85/format/webp/interlace/1" class="lazy avatar avatar" style="background-image: none;"></div></a></div><div data-v-0a600e85="" class="user-content-box"><div data-v-0a600e85="" class="profie"><div data-v-2bc7e294="" data-v-0a600e85="" st:block="userPopover" st:state="5dc2ffeb6fb9a04aa7049e21" class="user-popover-box"><!----><a data-v-1a54813b="" data-v-0a600e85="" href="https://juejin.im/user/5dc2ffeb6fb9a04aa7049e21" target="_blank" rel="" class="username" data-v-2bc7e294="">江之岛的猫<a data-v-3a430c94="" data-v-1a54813b="" href="https://juejin.im/book/5c90640c5188252d7941f5bb/section/5c9065385188252da6320022" target="_blank" rel="" class="rank"><img data-v-3a430c94="" src="./类型即正义：TypeScript 从入门到实践（三）：类型别名和类 - 掘金_files/lv-1.636691c.svg" alt="lv-1"></a></a></div><div data-v-0a600e85="" class="position">前端实习 @ 字节跳动</div></div><div data-v-0a600e85="" class="content-box"><span data-v-0a600e85=""> 回复 </span><div data-v-2bc7e294="" data-v-0a600e85="" st:block="userPopover" st:state="5b33414351882574b9694d28" class="user-popover-box"><!----><a data-v-1a54813b="" data-v-0a600e85="" href="https://juejin.im/user/5b33414351882574b9694d28" target="_blank" rel="" class="username username be-replied" data-v-2bc7e294="">图雀社区<a data-v-3a430c94="" data-v-1a54813b="" href="https://juejin.im/book/5c90640c5188252d7941f5bb/section/5c9065385188252da6320022" target="_blank" rel="" class="rank"><img data-v-3a430c94="" src="./类型即正义：TypeScript 从入门到实践（三）：类型别名和类 - 掘金_files/lv-4.2c3fafd.svg" alt="lv-4"></a></a></div><span data-v-0a600e85="" class="author-badge-text">(作者)</span><span data-v-0a600e85="">: </span><span data-v-0a600e85="" class="content">类作为接口使用第二段代码里面new Props()是不是应该是new TodoInputProps()啊</span></div><!----><!----><div data-v-0a600e85="" class="limit-all-box"><!----></div><div data-v-0a600e85="" class="sub-comment-stat-box"><time data-v-0a600e85="" datetime="2020-04-23T04:59:40.381Z" title="Thu Apr 23 2020 12:59:40 GMT+0800 (中国标准时间)" class="time">1月前</time><div data-v-0a600e85="" class="delete"> &nbsp;·&nbsp;删除</div><div data-v-0a600e85="" class="sub-comment-action-box"><div data-v-0a600e85="" class="like-action action"><svg data-v-0a600e85="" aria-hidden="true" width="16" height="16" viewBox="0 0 20 20" class="icon like-icon"><g data-v-0a600e85="" fill="none" fill-rule="evenodd"><path data-v-0a600e85="" d="M0 0h20v20H0z"></path> <path data-v-0a600e85="" stroke="#8A93A0" stroke-linejoin="round" d="M4.58 8.25V17h-1.4C2.53 17 2 16.382 2 15.624V9.735c0-.79.552-1.485 1.18-1.485h1.4zM11.322 2c1.011.019 1.614.833 1.823 1.235.382.735.392 1.946.13 2.724-.236.704-.785 1.629-.785 1.629h4.11c.434 0 .838.206 1.107.563.273.365.363.84.24 1.272l-1.86 6.513A1.425 1.425 0 0 1 14.724 17H6.645V7.898C8.502 7.51 9.643 4.59 9.852 3.249A1.47 1.47 0 0 1 11.322 2z"></path></g></svg><!----></div><div data-v-0a600e85="" class="comment-action action"><svg data-v-0a600e85="" aria-hidden="true" width="16" height="16" viewBox="0 0 20 20" class="icon comment-icon"><g data-v-0a600e85="" fill="none" fill-rule="evenodd"><path data-v-0a600e85="" d="M0 0h20v20H0z"></path> <path data-v-0a600e85="" stroke="#8A93A0" stroke-linejoin="round" d="M10 17c-4.142 0-7.5-2.91-7.5-6.5S5.858 4 10 4c4.142 0 7.5 2.91 7.5 6.5 0 1.416-.522 2.726-1.41 3.794-.129.156.41 3.206.41 3.206l-3.265-1.134c-.998.369-2.077.634-3.235.634z"></path></g></svg> <span data-v-0a600e85="">回复</span></div></div></div><!----></div></div></div><!----></div></div><div data-v-18f279d9="" class="item fetch-more"><div data-v-18f279d9="" class="fetch-more-comment">加载更多</div></div></div></div><!----></div></div><div data-v-7c7d1c40="" class="item"><div data-v-6aebcf4a="" data-v-7c7d1c40="" class="comment comment"><div data-v-2bc7e294="" data-v-6aebcf4a="" st:block="userPopover" st:state="5b87a62a51882542c76387df" class="user-popover-box popover"><!----><a data-v-6aebcf4a="" href="https://juejin.im/user/5b87a62a51882542c76387df" target="_blank" rel="" class="user-link" data-v-2bc7e294=""><div data-v-261e638e="" data-v-b49070bc="" data-v-6aebcf4a="" data-src="https://user-gold-cdn.xitu.io/2020/4/3/1713e389ea8fd878?imageView2/1/w/100/h/100/q/85/format/webp/interlace/1" class="lazy avatar avatar" style="background-image: none;"></div></a></div><div data-v-6aebcf4a="" class="content-box comment-divider-line"><div data-v-6aebcf4a="" class="meta-box"><div data-v-2bc7e294="" data-v-6aebcf4a="" st:block="userPopover" st:state="5b87a62a51882542c76387df" class="user-popover-box"><!----><a data-v-1a54813b="" data-v-6aebcf4a="" href="https://juejin.im/user/5b87a62a51882542c76387df" target="_blank" rel="" class="username username ellipsis" data-v-2bc7e294="">代码糖<!----></a></div><div data-v-6aebcf4a="" class="position"></div></div><div data-v-6aebcf4a="" class="content">通俗易懂，<img class="emoji" draggable="false" alt="👍" src="./类型即正义：TypeScript 从入门到实践（三）：类型别名和类 - 掘金_files/1f44d.svg"></div><div data-v-6aebcf4a="" class="limit-ctl-box"><!----><!----></div><!----><div data-v-6aebcf4a="" class="reply-stat"><time data-v-6aebcf4a="" datetime="2020-04-16T04:25:20.575Z" title="Thu Apr 16 2020 12:25:20 GMT+0800 (中国标准时间)" class="time">1月前</time><div data-v-6aebcf4a="" class="delete"> &nbsp;·&nbsp;删除</div><div data-v-6aebcf4a="" class="action-box"><div data-v-6aebcf4a="" class="like-action action"><svg data-v-6aebcf4a="" aria-hidden="true" width="16" height="16" viewBox="0 0 20 20" class="icon like-icon"><g data-v-6aebcf4a="" fill="none" fill-rule="evenodd"><path data-v-6aebcf4a="" d="M0 0h20v20H0z"></path> <path data-v-6aebcf4a="" stroke="#8A93A0" stroke-linejoin="round" d="M4.58 8.25V17h-1.4C2.53 17 2 16.382 2 15.624V9.735c0-.79.552-1.485 1.18-1.485h1.4zM11.322 2c1.011.019 1.614.833 1.823 1.235.382.735.392 1.946.13 2.724-.236.704-.785 1.629-.785 1.629h4.11c.434 0 .838.206 1.107.563.273.365.363.84.24 1.272l-1.86 6.513A1.425 1.425 0 0 1 14.724 17H6.645V7.898C8.502 7.51 9.643 4.59 9.852 3.249A1.47 1.47 0 0 1 11.322 2z"></path></g></svg><span data-v-6aebcf4a="" class="action-title">1</span></div><div data-v-6aebcf4a="" class="comment-action action"><svg data-v-6aebcf4a="" aria-hidden="true" width="16" height="16" viewBox="0 0 20 20" class="icon comment-icon"><g data-v-6aebcf4a="" fill="none" fill-rule="evenodd"><path data-v-6aebcf4a="" d="M0 0h20v20H0z"></path> <path data-v-6aebcf4a="" stroke="#8A93A0" stroke-linejoin="round" d="M10 17c-4.142 0-7.5-2.91-7.5-6.5S5.858 4 10 4c4.142 0 7.5 2.91 7.5 6.5 0 1.416-.522 2.726-1.41 3.794-.129.156.41 3.206.41 3.206l-3.265-1.134c-.998.369-2.077.634-3.235.634z"></path></g></svg> <span data-v-6aebcf4a="" class="action-title">回复</span></div></div></div><!----><div data-v-18f279d9="" data-v-6aebcf4a="" class="sub-comment-list sub-comment-list"><div data-v-18f279d9="" class="item"><div data-v-0a600e85="" data-v-18f279d9="" class="sub-comment sub-comment"><div data-v-0a600e85="" class="sub-comment-content-row"><div data-v-0a600e85="" class="sub-comment-content-box"><div data-v-2bc7e294="" data-v-0a600e85="" st:block="userPopover" st:state="5b33414351882574b9694d28" class="user-popover-box popover"><!----><a data-v-0a600e85="" href="https://juejin.im/user/5b33414351882574b9694d28" target="_blank" rel="" class="username" data-v-2bc7e294=""><div data-v-261e638e="" data-v-b49070bc="" data-v-0a600e85="" data-src="https://user-gold-cdn.xitu.io/2019/9/22/16d596f04f4f4e3d?imageView2/1/w/100/h/100/q/85/format/webp/interlace/1" class="lazy avatar avatar" style="background-image: none;"></div></a></div><div data-v-0a600e85="" class="user-content-box"><div data-v-0a600e85="" class="profie"><div data-v-2bc7e294="" data-v-0a600e85="" st:block="userPopover" st:state="5b33414351882574b9694d28" class="user-popover-box"><!----><a data-v-1a54813b="" data-v-0a600e85="" href="https://juejin.im/user/5b33414351882574b9694d28" target="_blank" rel="" class="username" data-v-2bc7e294="">图雀社区<a data-v-3a430c94="" data-v-1a54813b="" href="https://juejin.im/book/5c90640c5188252d7941f5bb/section/5c9065385188252da6320022" target="_blank" rel="" class="rank"><img data-v-3a430c94="" src="./类型即正义：TypeScript 从入门到实践（三）：类型别名和类 - 掘金_files/lv-4.2c3fafd.svg" alt="lv-4"></a><span data-v-0a600e85="" class="author-badge-text">(作者)</span></a></div><div data-v-0a600e85="" class="position">一只图雀 @ 公众号「图雀社区」</div></div><div data-v-0a600e85="" class="content-box"><span data-v-0a600e85=""> 回复 </span><div data-v-2bc7e294="" data-v-0a600e85="" st:block="userPopover" st:state="5b87a62a51882542c76387df" class="user-popover-box"><!----><a data-v-1a54813b="" data-v-0a600e85="" href="https://juejin.im/user/5b87a62a51882542c76387df" target="_blank" rel="" class="username username be-replied" data-v-2bc7e294="">代码糖<!----></a></div><!----><span data-v-0a600e85="">: </span><span data-v-0a600e85="" class="content">谢谢<img class="emoji" draggable="false" alt="😉" src="./类型即正义：TypeScript 从入门到实践（三）：类型别名和类 - 掘金_files/1f609.svg"></span></div><!----><!----><div data-v-0a600e85="" class="limit-all-box"><!----></div><div data-v-0a600e85="" class="sub-comment-stat-box"><time data-v-0a600e85="" datetime="2020-04-16T04:44:33.062Z" title="Thu Apr 16 2020 12:44:33 GMT+0800 (中国标准时间)" class="time">1月前</time><div data-v-0a600e85="" class="delete"> &nbsp;·&nbsp;删除</div><div data-v-0a600e85="" class="sub-comment-action-box"><div data-v-0a600e85="" class="like-action action"><svg data-v-0a600e85="" aria-hidden="true" width="16" height="16" viewBox="0 0 20 20" class="icon like-icon"><g data-v-0a600e85="" fill="none" fill-rule="evenodd"><path data-v-0a600e85="" d="M0 0h20v20H0z"></path> <path data-v-0a600e85="" stroke="#8A93A0" stroke-linejoin="round" d="M4.58 8.25V17h-1.4C2.53 17 2 16.382 2 15.624V9.735c0-.79.552-1.485 1.18-1.485h1.4zM11.322 2c1.011.019 1.614.833 1.823 1.235.382.735.392 1.946.13 2.724-.236.704-.785 1.629-.785 1.629h4.11c.434 0 .838.206 1.107.563.273.365.363.84.24 1.272l-1.86 6.513A1.425 1.425 0 0 1 14.724 17H6.645V7.898C8.502 7.51 9.643 4.59 9.852 3.249A1.47 1.47 0 0 1 11.322 2z"></path></g></svg><!----></div><div data-v-0a600e85="" class="comment-action action"><svg data-v-0a600e85="" aria-hidden="true" width="16" height="16" viewBox="0 0 20 20" class="icon comment-icon"><g data-v-0a600e85="" fill="none" fill-rule="evenodd"><path data-v-0a600e85="" d="M0 0h20v20H0z"></path> <path data-v-0a600e85="" stroke="#8A93A0" stroke-linejoin="round" d="M10 17c-4.142 0-7.5-2.91-7.5-6.5S5.858 4 10 4c4.142 0 7.5 2.91 7.5 6.5 0 1.416-.522 2.726-1.41 3.794-.129.156.41 3.206.41 3.206l-3.265-1.134c-.998.369-2.077.634-3.235.634z"></path></g></svg> <span data-v-0a600e85="">回复</span></div></div></div><!----></div></div></div><!----></div></div><!----></div></div><!----></div></div></div><!----></div></div><!----><div data-v-50ff96fb="" data-v-0f848c07="" st:block="recommended" class="main-area recommended-area shadow"><div data-v-50ff96fb="" data-v-0f848c07="" class="recommended-entry-list-title">相关推荐</div><!----><ul data-v-3ce073b0="" data-v-50ff96fb="" st:block="entryList" class="entry-list recommended-entry-list" data-v-0f848c07=""><!----><li data-v-3ce073b0="" data-growing-container="true" data-growing-title="entryList" class="item"><div data-v-392c77a2="" data-v-3ce073b0="" class="entry-box"><div data-v-6d34c71c="" data-v-392c77a2="" st:block="entry" st:state="5ed3d6f251882542ed671bea|1" class="entry"><a data-v-6d34c71c="" href="https://juejin.im/post/5ec34a68f265da49b3375f92" target="_blank" rel="" st:name="link" class="entry-link"><div data-v-6d34c71c="" class="content-box"><div data-v-6d34c71c="" class="info-box"><div data-v-6d34c71c="" class="info-row meta-row"><ul data-v-6d34c71c="" class="meta-list"><!----><!----><li data-v-6d34c71c="" class="item post">专栏</li><li data-v-6d34c71c="" class="item username clickable"><div data-v-2bc7e294="" data-v-6d34c71c="" st:block="userPopover" st:state="5cdb722e6fb9a0322415bc76" class="user-popover-box"><!----><a data-v-6d34c71c="" href="https://juejin.im/user/5cdb722e6fb9a0322415bc76" target="_blank" rel="" st:name="user" st:state="5cdb722e6fb9a0322415bc76" data-v-2bc7e294="">浪呀</a></div></li><li data-v-6d34c71c="" class="item">6天前</li><li data-v-6d34c71c="" class="item tag"><a data-v-6d34c71c="" href="https://juejin.im/tag/TypeScript" target="_blank" rel="" st:name="tag" st:state="55e7d5a360b2d687f60ae13a" class="tag">TypeScript</a></li><!----></ul></div><div data-v-6d34c71c="" class="info-row title-row"><!----><!----><a data-v-6d34c71c="" href="https://juejin.im/post/5ec34a68f265da49b3375f92" target="_blank" rel="" st:name="title" class="title">2020还不会TypeScript？</a></div><div data-v-6d34c71c="" class="info-row action-row"><ul data-v-6d34c71c="" class="action-list"><li data-v-6d34c71c="" st:name="likeBtn" class="item like clickable"><a data-v-6d34c71c="" class="title-box"><img data-v-6d34c71c="" src="./类型即正义：TypeScript 从入门到实践（三）：类型别名和类 - 掘金_files/zan.e9d7698.svg" class="icon"><span data-v-6d34c71c="" class="count">16</span></a></li><li data-v-6d34c71c="" st:name="commentBtn" class="item comment clickable"><a data-v-6d34c71c="" href="https://juejin.im/post/5ec34a68f265da49b3375f92#comment" target="_blank" rel="" class="title-box"><img data-v-6d34c71c="" src="./类型即正义：TypeScript 从入门到实践（三）：类型别名和类 - 掘金_files/comment.4d5744f.svg" class="icon"><span data-v-6d34c71c="" class="count">5</span></a></li><li data-v-6d34c71c="" st:name="shareBtn" title="分享" class="item share clickable hover"><img data-v-6d34c71c="" src="./类型即正义：TypeScript 从入门到实践（三）：类型别名和类 - 掘金_files/share.1d55e69.svg" class="icon"><div data-v-6d34c71c="" class="share-panel"><div data-v-6d34c71c="" st:name="shareItem" st:state="weibo" class="share-item weibo"><img data-v-6d34c71c="" src="./类型即正义：TypeScript 从入门到实践（三）：类型别名和类 - 掘金_files/weibo.8e2f5d6.svg" class="icon">微博</div><div data-v-6d34c71c="" st:name="shareItem" st:state="wechat" class="share-item wechat"><img data-v-6d34c71c="" src="./类型即正义：TypeScript 从入门到实践（三）：类型别名和类 - 掘金_files/wechat.844402c.svg" class="icon">微信扫一扫<div data-v-6d34c71c="" class="qr-code-box"><img data-v-6d34c71c="" src="https://juejin.im/post/5e97b3c7518825737e0f88dc" class="qr-code"></div></div></div></li><li data-v-6d34c71c="" title="收藏" st:name="collectBtn" class="item collect clickable hover"><img data-v-6d34c71c="" src="./类型即正义：TypeScript 从入门到实践（三）：类型别名和类 - 掘金_files/collect.02e2979.svg" class="icon"><!----></li><!----></ul></div></div><!----></div></a></div></div></li><li data-v-3ce073b0="" data-growing-container="true" data-growing-title="entryList" class="item"><div data-v-392c77a2="" data-v-3ce073b0="" class="entry-box"><div data-v-6d34c71c="" data-v-392c77a2="" st:block="entry" st:state="5ecdb294f265da76cb3be4dc|2" class="entry"><a data-v-6d34c71c="" href="https://juejin.im/post/5ecdb192f265da76d53c08e1" target="_blank" rel="" st:name="link" class="entry-link"><div data-v-6d34c71c="" class="content-box"><div data-v-6d34c71c="" class="info-box"><div data-v-6d34c71c="" class="info-row meta-row"><ul data-v-6d34c71c="" class="meta-list"><!----><!----><li data-v-6d34c71c="" class="item post">专栏</li><li data-v-6d34c71c="" class="item username clickable"><div data-v-2bc7e294="" data-v-6d34c71c="" st:block="userPopover" st:state="58cc0d9b44d9040069fab44f" class="user-popover-box"><!----><a data-v-6d34c71c="" href="https://juejin.im/user/58cc0d9b44d9040069fab44f" target="_blank" rel="" st:name="user" st:state="58cc0d9b44d9040069fab44f" data-v-2bc7e294="">semlinker</a></div></li><li data-v-6d34c71c="" class="item">11天前</li><li data-v-6d34c71c="" class="item tag"><a data-v-6d34c71c="" href="https://juejin.im/tag/TypeScript" target="_blank" rel="" st:name="tag" st:state="55e7d5a360b2d687f60ae13a" class="tag">TypeScript</a></li><!----></ul></div><div data-v-6d34c71c="" class="info-row title-row"><!----><!----><a data-v-6d34c71c="" href="https://juejin.im/post/5ecdb192f265da76d53c08e1" target="_blank" rel="" st:name="title" class="title">在 TS 中如何减少重复代码</a></div><div data-v-6d34c71c="" class="info-row action-row"><ul data-v-6d34c71c="" class="action-list"><li data-v-6d34c71c="" st:name="likeBtn" class="item like clickable"><a data-v-6d34c71c="" class="title-box"><img data-v-6d34c71c="" src="./类型即正义：TypeScript 从入门到实践（三）：类型别名和类 - 掘金_files/zan.e9d7698.svg" class="icon"><span data-v-6d34c71c="" class="count">72</span></a></li><li data-v-6d34c71c="" st:name="commentBtn" class="item comment clickable"><a data-v-6d34c71c="" href="https://juejin.im/post/5ecdb192f265da76d53c08e1#comment" target="_blank" rel="" class="title-box"><img data-v-6d34c71c="" src="./类型即正义：TypeScript 从入门到实践（三）：类型别名和类 - 掘金_files/comment.4d5744f.svg" class="icon"><span data-v-6d34c71c="" class="count">11</span></a></li><li data-v-6d34c71c="" st:name="shareBtn" title="分享" class="item share clickable hover"><img data-v-6d34c71c="" src="./类型即正义：TypeScript 从入门到实践（三）：类型别名和类 - 掘金_files/share.1d55e69.svg" class="icon"><div data-v-6d34c71c="" class="share-panel"><div data-v-6d34c71c="" st:name="shareItem" st:state="weibo" class="share-item weibo"><img data-v-6d34c71c="" src="./类型即正义：TypeScript 从入门到实践（三）：类型别名和类 - 掘金_files/weibo.8e2f5d6.svg" class="icon">微博</div><div data-v-6d34c71c="" st:name="shareItem" st:state="wechat" class="share-item wechat"><img data-v-6d34c71c="" src="./类型即正义：TypeScript 从入门到实践（三）：类型别名和类 - 掘金_files/wechat.844402c.svg" class="icon">微信扫一扫<div data-v-6d34c71c="" class="qr-code-box"><img data-v-6d34c71c="" src="https://juejin.im/post/5e97b3c7518825737e0f88dc" class="qr-code"></div></div></div></li><li data-v-6d34c71c="" title="收藏" st:name="collectBtn" class="item collect clickable hover"><img data-v-6d34c71c="" src="./类型即正义：TypeScript 从入门到实践（三）：类型别名和类 - 掘金_files/collect.02e2979.svg" class="icon"><!----></li><!----></ul></div></div><div data-v-261e638e="" data-v-a98f170a="" data-v-6d34c71c="" data-src="https://user-gold-cdn.xitu.io/2020/5/27/1725380544b1f2a4?imageView2/1/w/120/h/120/q/85/format/webp/interlace/1" class="lazy thumb thumb" style="background-image: none; background-size: cover;"></div></div></a></div></div></li><li data-v-3ce073b0="" data-growing-container="true" data-growing-title="entryList" class="item"><div data-v-392c77a2="" data-v-3ce073b0="" class="entry-box"><div data-v-6d34c71c="" data-v-392c77a2="" st:block="entry" st:state="5ecb342df265da76c4243c84|3" class="entry"><a data-v-6d34c71c="" href="https://juejin.im/post/5ec6377ff265da76f30e45d2" target="_blank" rel="" st:name="link" class="entry-link"><div data-v-6d34c71c="" class="content-box"><div data-v-6d34c71c="" class="info-box"><div data-v-6d34c71c="" class="info-row meta-row"><ul data-v-6d34c71c="" class="meta-list"><!----><!----><li data-v-6d34c71c="" class="item post">专栏</li><li data-v-6d34c71c="" class="item username clickable"><div data-v-2bc7e294="" data-v-6d34c71c="" st:block="userPopover" st:state="5b33414351882574b9694d28" class="user-popover-box"><!----><a data-v-6d34c71c="" href="https://juejin.im/user/5b33414351882574b9694d28" target="_blank" rel="" st:name="user" st:state="5b33414351882574b9694d28" data-v-2bc7e294="">图雀社区</a></div></li><li data-v-6d34c71c="" class="item">13天前</li><li data-v-6d34c71c="" class="item tag"><a data-v-6d34c71c="" href="https://juejin.im/tag/TypeScript" target="_blank" rel="" st:name="tag" st:state="55e7d5a360b2d687f60ae13a" class="tag">TypeScript</a></li><!----></ul></div><div data-v-6d34c71c="" class="info-row title-row"><!----><!----><a data-v-6d34c71c="" href="https://juejin.im/post/5ec6377ff265da76f30e45d2" target="_blank" rel="" st:name="title" class="title">（三万字长文）类型即正义：TypeScript 从入门到实践系列，正式完结！</a></div><div data-v-6d34c71c="" class="info-row action-row"><ul data-v-6d34c71c="" class="action-list"><li data-v-6d34c71c="" st:name="likeBtn" class="item like clickable"><a data-v-6d34c71c="" class="title-box"><img data-v-6d34c71c="" src="./类型即正义：TypeScript 从入门到实践（三）：类型别名和类 - 掘金_files/zan.e9d7698.svg" class="icon"><span data-v-6d34c71c="" class="count">94</span></a></li><li data-v-6d34c71c="" st:name="commentBtn" class="item comment clickable"><a data-v-6d34c71c="" href="https://juejin.im/post/5ec6377ff265da76f30e45d2#comment" target="_blank" rel="" class="title-box"><img data-v-6d34c71c="" src="./类型即正义：TypeScript 从入门到实践（三）：类型别名和类 - 掘金_files/comment.4d5744f.svg" class="icon"><span data-v-6d34c71c="" class="count">4</span></a></li><li data-v-6d34c71c="" st:name="shareBtn" title="分享" class="item share clickable hover"><img data-v-6d34c71c="" src="./类型即正义：TypeScript 从入门到实践（三）：类型别名和类 - 掘金_files/share.1d55e69.svg" class="icon"><div data-v-6d34c71c="" class="share-panel"><div data-v-6d34c71c="" st:name="shareItem" st:state="weibo" class="share-item weibo"><img data-v-6d34c71c="" src="./类型即正义：TypeScript 从入门到实践（三）：类型别名和类 - 掘金_files/weibo.8e2f5d6.svg" class="icon">微博</div><div data-v-6d34c71c="" st:name="shareItem" st:state="wechat" class="share-item wechat"><img data-v-6d34c71c="" src="./类型即正义：TypeScript 从入门到实践（三）：类型别名和类 - 掘金_files/wechat.844402c.svg" class="icon">微信扫一扫<div data-v-6d34c71c="" class="qr-code-box"><img data-v-6d34c71c="" src="https://juejin.im/post/5e97b3c7518825737e0f88dc" class="qr-code"></div></div></div></li><li data-v-6d34c71c="" title="收藏" st:name="collectBtn" class="item collect clickable hover"><img data-v-6d34c71c="" src="./类型即正义：TypeScript 从入门到实践（三）：类型别名和类 - 掘金_files/collect.02e2979.svg" class="icon"><!----></li><!----></ul></div></div><div data-v-261e638e="" data-v-a98f170a="" data-v-6d34c71c="" data-src="https://user-gold-cdn.xitu.io/2020/5/21/17236506bb36a70b?imageView2/1/w/120/h/120/q/85/format/webp/interlace/1" class="lazy thumb thumb" style="background-image: none; background-size: cover;"></div></div></a></div></div></li><!----><li data-v-3ce073b0="" data-growing-container="true" data-growing-title="entryList" class="item"><div data-v-392c77a2="" data-v-3ce073b0="" class="entry-box"><div data-v-6d34c71c="" data-v-392c77a2="" st:block="entry" st:state="5ecd1c3e518825430812fef9|4" class="entry"><a data-v-6d34c71c="" href="https://juejin.im/post/5ecd1ad3e51d45784c52db73" target="_blank" rel="" st:name="link" class="entry-link"><div data-v-6d34c71c="" class="content-box"><div data-v-6d34c71c="" class="info-box"><div data-v-6d34c71c="" class="info-row meta-row"><ul data-v-6d34c71c="" class="meta-list"><!----><!----><li data-v-6d34c71c="" class="item post">专栏</li><li data-v-6d34c71c="" class="item username clickable"><div data-v-2bc7e294="" data-v-6d34c71c="" st:block="userPopover" st:state="58cc0d9b44d9040069fab44f" class="user-popover-box"><!----><a data-v-6d34c71c="" href="https://juejin.im/user/58cc0d9b44d9040069fab44f" target="_blank" rel="" st:name="user" st:state="58cc0d9b44d9040069fab44f" data-v-2bc7e294="">semlinker</a></div></li><li data-v-6d34c71c="" class="item">12天前</li><li data-v-6d34c71c="" class="item tag"><a data-v-6d34c71c="" href="https://juejin.im/tag/ECMAScript%206" target="_blank" rel="" st:name="tag" st:state="5597a13de4b08a686ce58b7e" class="tag">ECMAScript 6</a><a data-v-6d34c71c="" href="https://juejin.im/tag/TypeScript" target="_blank" rel="" st:name="tag" st:state="55e7d5a360b2d687f60ae13a" class="tag">TypeScript</a></li><!----></ul></div><div data-v-6d34c71c="" class="info-row title-row"><!----><!----><a data-v-6d34c71c="" href="https://juejin.im/post/5ecd1ad3e51d45784c52db73" target="_blank" rel="" st:name="title" class="title">你不知道的 WeakMap</a></div><div data-v-6d34c71c="" class="info-row action-row"><ul data-v-6d34c71c="" class="action-list"><li data-v-6d34c71c="" st:name="likeBtn" class="item like clickable"><a data-v-6d34c71c="" class="title-box"><img data-v-6d34c71c="" src="./类型即正义：TypeScript 从入门到实践（三）：类型别名和类 - 掘金_files/zan.e9d7698.svg" class="icon"><span data-v-6d34c71c="" class="count">38</span></a></li><li data-v-6d34c71c="" st:name="commentBtn" class="item comment clickable"><a data-v-6d34c71c="" href="https://juejin.im/post/5ecd1ad3e51d45784c52db73#comment" target="_blank" rel="" class="title-box"><img data-v-6d34c71c="" src="./类型即正义：TypeScript 从入门到实践（三）：类型别名和类 - 掘金_files/comment.4d5744f.svg" class="icon"><span data-v-6d34c71c="" class="count">12</span></a></li><li data-v-6d34c71c="" st:name="shareBtn" title="分享" class="item share clickable hover"><img data-v-6d34c71c="" src="./类型即正义：TypeScript 从入门到实践（三）：类型别名和类 - 掘金_files/share.1d55e69.svg" class="icon"><div data-v-6d34c71c="" class="share-panel"><div data-v-6d34c71c="" st:name="shareItem" st:state="weibo" class="share-item weibo"><img data-v-6d34c71c="" src="./类型即正义：TypeScript 从入门到实践（三）：类型别名和类 - 掘金_files/weibo.8e2f5d6.svg" class="icon">微博</div><div data-v-6d34c71c="" st:name="shareItem" st:state="wechat" class="share-item wechat"><img data-v-6d34c71c="" src="./类型即正义：TypeScript 从入门到实践（三）：类型别名和类 - 掘金_files/wechat.844402c.svg" class="icon">微信扫一扫<div data-v-6d34c71c="" class="qr-code-box"><img data-v-6d34c71c="" src="https://juejin.im/post/5e97b3c7518825737e0f88dc" class="qr-code"></div></div></div></li><li data-v-6d34c71c="" title="收藏" st:name="collectBtn" class="item collect clickable hover"><img data-v-6d34c71c="" src="./类型即正义：TypeScript 从入门到实践（三）：类型别名和类 - 掘金_files/collect.02e2979.svg" class="icon"><!----></li><!----></ul></div></div><div data-v-261e638e="" data-v-a98f170a="" data-v-6d34c71c="" data-src="https://user-gold-cdn.xitu.io/2020/5/26/17251349d6367b00?imageView2/1/w/120/h/120/q/85/format/webp/interlace/1" class="lazy thumb thumb" style="background-image: none; background-size: cover;"></div></div></a></div></div></li><li data-v-3ce073b0="" data-growing-container="true" data-growing-title="entryList" class="item"><div data-v-392c77a2="" data-v-3ce073b0="" class="entry-box"><div data-v-6d34c71c="" data-v-392c77a2="" st:block="entry" st:state="5e95066bf265da47f73441a8|5" class="entry"><a data-v-6d34c71c="" href="https://juejin.im/post/5e94595c6fb9a03c341daa75" target="_blank" rel="" st:name="link" class="entry-link"><div data-v-6d34c71c="" class="content-box"><div data-v-6d34c71c="" class="info-box"><div data-v-6d34c71c="" class="info-row meta-row"><ul data-v-6d34c71c="" class="meta-list"><!----><!----><li data-v-6d34c71c="" class="item post">专栏</li><li data-v-6d34c71c="" class="item username clickable"><div data-v-2bc7e294="" data-v-6d34c71c="" st:block="userPopover" st:state="5b13f11d5188257da1245183" class="user-popover-box"><!----><a data-v-6d34c71c="" href="https://juejin.im/user/5b13f11d5188257da1245183" target="_blank" rel="" st:name="user" st:state="5b13f11d5188257da1245183" data-v-2bc7e294="">晨曦时梦见兮</a></div></li><li data-v-6d34c71c="" class="item">1月前</li><li data-v-6d34c71c="" class="item tag"><a data-v-6d34c71c="" href="https://juejin.im/tag/Vue.js" target="_blank" rel="" st:name="tag" st:state="555e9a98e4b00c57d9955f68" class="tag">Vue.js</a><a data-v-6d34c71c="" href="https://juejin.im/tag/TypeScript" target="_blank" rel="" st:name="tag" st:state="55e7d5a360b2d687f60ae13a" class="tag">TypeScript</a></li><!----></ul></div><div data-v-6d34c71c="" class="info-row title-row"><!----><!----><a data-v-6d34c71c="" href="https://juejin.im/post/5e94595c6fb9a03c341daa75" target="_blank" rel="" st:name="title" class="title">Vue3 跟着尤雨溪学 TypeScript 之 Ref 类型从零实现</a></div><div data-v-6d34c71c="" class="info-row action-row"><ul data-v-6d34c71c="" class="action-list"><li data-v-6d34c71c="" st:name="likeBtn" class="item like clickable"><a data-v-6d34c71c="" class="title-box"><img data-v-6d34c71c="" src="./类型即正义：TypeScript 从入门到实践（三）：类型别名和类 - 掘金_files/zan.e9d7698.svg" class="icon"><span data-v-6d34c71c="" class="count">297</span></a></li><li data-v-6d34c71c="" st:name="commentBtn" class="item comment clickable"><a data-v-6d34c71c="" href="https://juejin.im/post/5e94595c6fb9a03c341daa75#comment" target="_blank" rel="" class="title-box"><img data-v-6d34c71c="" src="./类型即正义：TypeScript 从入门到实践（三）：类型别名和类 - 掘金_files/comment.4d5744f.svg" class="icon"><span data-v-6d34c71c="" class="count">62</span></a></li><li data-v-6d34c71c="" st:name="shareBtn" title="分享" class="item share clickable hover"><img data-v-6d34c71c="" src="./类型即正义：TypeScript 从入门到实践（三）：类型别名和类 - 掘金_files/share.1d55e69.svg" class="icon"><div data-v-6d34c71c="" class="share-panel"><div data-v-6d34c71c="" st:name="shareItem" st:state="weibo" class="share-item weibo"><img data-v-6d34c71c="" src="./类型即正义：TypeScript 从入门到实践（三）：类型别名和类 - 掘金_files/weibo.8e2f5d6.svg" class="icon">微博</div><div data-v-6d34c71c="" st:name="shareItem" st:state="wechat" class="share-item wechat"><img data-v-6d34c71c="" src="./类型即正义：TypeScript 从入门到实践（三）：类型别名和类 - 掘金_files/wechat.844402c.svg" class="icon">微信扫一扫<div data-v-6d34c71c="" class="qr-code-box"><img data-v-6d34c71c="" src="https://juejin.im/post/5e97b3c7518825737e0f88dc" class="qr-code"></div></div></div></li><li data-v-6d34c71c="" title="收藏" st:name="collectBtn" class="item collect clickable hover"><img data-v-6d34c71c="" src="./类型即正义：TypeScript 从入门到实践（三）：类型别名和类 - 掘金_files/collect.02e2979.svg" class="icon"><!----></li><!----></ul></div></div><!----></div></a></div></div></li><!----><!----><li data-v-3ce073b0="" data-growing-container="true" data-growing-title="entryList" class="item"><div data-v-392c77a2="" data-v-3ce073b0="" class="entry-box"><div data-v-6d34c71c="" data-v-392c77a2="" st:block="entry" st:state="5ed76d13f265da76be12adb9|4" class="entry"><a data-v-6d34c71c="" href="https://juejin.im/post/5ed75c54e51d4578a2555751" target="_blank" rel="" st:name="link" class="entry-link"><div data-v-6d34c71c="" class="content-box"><div data-v-6d34c71c="" class="info-box"><div data-v-6d34c71c="" class="info-row meta-row"><ul data-v-6d34c71c="" class="meta-list"><!----><!----><li data-v-6d34c71c="" class="item post">专栏</li><li data-v-6d34c71c="" class="item username clickable"><div data-v-2bc7e294="" data-v-6d34c71c="" st:block="userPopover" st:state="57d6a53967f3560057e95dd0" class="user-popover-box"><!----><a data-v-6d34c71c="" href="https://juejin.im/user/57d6a53967f3560057e95dd0" target="_blank" rel="" st:name="user" st:state="57d6a53967f3560057e95dd0" data-v-2bc7e294="">Championer</a></div></li><li data-v-6d34c71c="" class="item">4天前</li><li data-v-6d34c71c="" class="item tag"><a data-v-6d34c71c="" href="https://juejin.im/tag/TypeScript" target="_blank" rel="" st:name="tag" st:state="55e7d5a360b2d687f60ae13a" class="tag">TypeScript</a></li><!----></ul></div><div data-v-6d34c71c="" class="info-row title-row"><!----><!----><a data-v-6d34c71c="" href="https://juejin.im/post/5ed75c54e51d4578a2555751" target="_blank" rel="" st:name="title" class="title">VUE使用typescript搭建项目</a></div><div data-v-6d34c71c="" class="info-row action-row"><ul data-v-6d34c71c="" class="action-list"><li data-v-6d34c71c="" st:name="likeBtn" class="item like clickable"><a data-v-6d34c71c="" class="title-box"><img data-v-6d34c71c="" src="./类型即正义：TypeScript 从入门到实践（三）：类型别名和类 - 掘金_files/zan.e9d7698.svg" class="icon"><span data-v-6d34c71c="" class="count">7</span></a></li><li data-v-6d34c71c="" st:name="commentBtn" class="item comment clickable"><a data-v-6d34c71c="" href="https://juejin.im/post/5ed75c54e51d4578a2555751#comment" target="_blank" rel="" class="title-box"><img data-v-6d34c71c="" src="./类型即正义：TypeScript 从入门到实践（三）：类型别名和类 - 掘金_files/comment.4d5744f.svg" class="icon"><span data-v-6d34c71c="" class="count">3</span></a></li><li data-v-6d34c71c="" st:name="shareBtn" title="分享" class="item share clickable hover"><img data-v-6d34c71c="" src="./类型即正义：TypeScript 从入门到实践（三）：类型别名和类 - 掘金_files/share.1d55e69.svg" class="icon"><div data-v-6d34c71c="" class="share-panel"><div data-v-6d34c71c="" st:name="shareItem" st:state="weibo" class="share-item weibo"><img data-v-6d34c71c="" src="./类型即正义：TypeScript 从入门到实践（三）：类型别名和类 - 掘金_files/weibo.8e2f5d6.svg" class="icon">微博</div><div data-v-6d34c71c="" st:name="shareItem" st:state="wechat" class="share-item wechat"><img data-v-6d34c71c="" src="./类型即正义：TypeScript 从入门到实践（三）：类型别名和类 - 掘金_files/wechat.844402c.svg" class="icon">微信扫一扫<div data-v-6d34c71c="" class="qr-code-box"><img data-v-6d34c71c="" src="https://juejin.im/post/5e97b3c7518825737e0f88dc" class="qr-code"></div></div></div></li><li data-v-6d34c71c="" title="收藏" st:name="collectBtn" class="item collect clickable hover"><img data-v-6d34c71c="" src="./类型即正义：TypeScript 从入门到实践（三）：类型别名和类 - 掘金_files/collect.02e2979.svg" class="icon"><!----></li><!----></ul></div></div><!----></div></a></div></div></li><li data-v-3ce073b0="" data-growing-container="true" data-growing-title="entryList" class="item"><div data-v-392c77a2="" data-v-3ce073b0="" class="entry-box"><div data-v-6d34c71c="" data-v-392c77a2="" st:block="entry" st:state="5ecef50ee51d4578615ad998|5" class="entry"><a data-v-6d34c71c="" href="https://juejin.im/post/5ecef4466fb9a047d5645254" target="_blank" rel="" st:name="link" class="entry-link"><div data-v-6d34c71c="" class="content-box"><div data-v-6d34c71c="" class="info-box"><div data-v-6d34c71c="" class="info-row meta-row"><ul data-v-6d34c71c="" class="meta-list"><!----><!----><li data-v-6d34c71c="" class="item post">专栏</li><li data-v-6d34c71c="" class="item username clickable"><div data-v-2bc7e294="" data-v-6d34c71c="" st:block="userPopover" st:state="58cc0d9b44d9040069fab44f" class="user-popover-box"><!----><a data-v-6d34c71c="" href="https://juejin.im/user/58cc0d9b44d9040069fab44f" target="_blank" rel="" st:name="user" st:state="58cc0d9b44d9040069fab44f" data-v-2bc7e294="">semlinker</a></div></li><li data-v-6d34c71c="" class="item">10天前</li><li data-v-6d34c71c="" class="item tag"><a data-v-6d34c71c="" href="https://juejin.im/tag/TypeScript" target="_blank" rel="" st:name="tag" st:state="55e7d5a360b2d687f60ae13a" class="tag">TypeScript</a></li><!----></ul></div><div data-v-6d34c71c="" class="info-row title-row"><!----><!----><a data-v-6d34c71c="" href="https://juejin.im/post/5ecef4466fb9a047d5645254" target="_blank" rel="" st:name="title" class="title">一文读懂 TS 中 Object, object, {} 类型之间的区别</a></div><div data-v-6d34c71c="" class="info-row action-row"><ul data-v-6d34c71c="" class="action-list"><li data-v-6d34c71c="" st:name="likeBtn" class="item like clickable"><a data-v-6d34c71c="" class="title-box"><img data-v-6d34c71c="" src="./类型即正义：TypeScript 从入门到实践（三）：类型别名和类 - 掘金_files/zan.e9d7698.svg" class="icon"><span data-v-6d34c71c="" class="count">15</span></a></li><li data-v-6d34c71c="" st:name="commentBtn" class="item comment clickable"><a data-v-6d34c71c="" href="https://juejin.im/post/5ecef4466fb9a047d5645254#comment" target="_blank" rel="" class="title-box"><img data-v-6d34c71c="" src="./类型即正义：TypeScript 从入门到实践（三）：类型别名和类 - 掘金_files/comment.4d5744f.svg" class="icon"><span data-v-6d34c71c="" class="count">2</span></a></li><li data-v-6d34c71c="" st:name="shareBtn" title="分享" class="item share clickable hover"><img data-v-6d34c71c="" src="./类型即正义：TypeScript 从入门到实践（三）：类型别名和类 - 掘金_files/share.1d55e69.svg" class="icon"><div data-v-6d34c71c="" class="share-panel"><div data-v-6d34c71c="" st:name="shareItem" st:state="weibo" class="share-item weibo"><img data-v-6d34c71c="" src="./类型即正义：TypeScript 从入门到实践（三）：类型别名和类 - 掘金_files/weibo.8e2f5d6.svg" class="icon">微博</div><div data-v-6d34c71c="" st:name="shareItem" st:state="wechat" class="share-item wechat"><img data-v-6d34c71c="" src="./类型即正义：TypeScript 从入门到实践（三）：类型别名和类 - 掘金_files/wechat.844402c.svg" class="icon">微信扫一扫<div data-v-6d34c71c="" class="qr-code-box"><img data-v-6d34c71c="" src="https://juejin.im/post/5e97b3c7518825737e0f88dc" class="qr-code"></div></div></div></li><li data-v-6d34c71c="" title="收藏" st:name="collectBtn" class="item collect clickable hover"><img data-v-6d34c71c="" src="./类型即正义：TypeScript 从入门到实践（三）：类型别名和类 - 掘金_files/collect.02e2979.svg" class="icon"><!----></li><!----></ul></div></div><div data-v-261e638e="" data-v-a98f170a="" data-v-6d34c71c="" data-src="https://user-gold-cdn.xitu.io/2020/5/28/172586abd0044463?imageView2/1/w/120/h/120/q/85/format/webp/interlace/1" class="lazy thumb thumb" style="background-image: none; background-size: cover;"></div></div></a></div></div></li><li data-v-3ce073b0="" data-growing-container="true" data-growing-title="entryList" class="item"><div data-v-392c77a2="" data-v-3ce073b0="" class="entry-box"><div data-v-6d34c71c="" data-v-392c77a2="" st:block="entry" st:state="5ece6ea76fb9a047be3881d4|6" class="entry"><a data-v-6d34c71c="" href="https://juejin.im/post/5ece6e63e51d457848685547" target="_blank" rel="" st:name="link" class="entry-link"><div data-v-6d34c71c="" class="content-box"><div data-v-6d34c71c="" class="info-box"><div data-v-6d34c71c="" class="info-row meta-row"><ul data-v-6d34c71c="" class="meta-list"><!----><!----><li data-v-6d34c71c="" class="item post">专栏</li><li data-v-6d34c71c="" class="item username clickable"><div data-v-2bc7e294="" data-v-6d34c71c="" st:block="userPopover" st:state="5e609bf4e51d4527086b4483" class="user-popover-box"><!----><a data-v-6d34c71c="" href="https://juejin.im/user/5e609bf4e51d4527086b4483" target="_blank" rel="" st:name="user" st:state="5e609bf4e51d4527086b4483" data-v-2bc7e294="">偶像练习生</a></div></li><li data-v-6d34c71c="" class="item">11天前</li><li data-v-6d34c71c="" class="item tag"><a data-v-6d34c71c="" href="https://juejin.im/tag/TypeScript" target="_blank" rel="" st:name="tag" st:state="55e7d5a360b2d687f60ae13a" class="tag">TypeScript</a></li><!----></ul></div><div data-v-6d34c71c="" class="info-row title-row"><!----><!----><a data-v-6d34c71c="" href="https://juejin.im/post/5ece6e63e51d457848685547" target="_blank" rel="" st:name="title" class="title">TS快速入门手册---车门焊死，谁也别想下车（万字长文 高能预警！！！！！）</a></div><div data-v-6d34c71c="" class="info-row action-row"><ul data-v-6d34c71c="" class="action-list"><li data-v-6d34c71c="" st:name="likeBtn" class="item like clickable"><a data-v-6d34c71c="" class="title-box"><img data-v-6d34c71c="" src="./类型即正义：TypeScript 从入门到实践（三）：类型别名和类 - 掘金_files/zan.e9d7698.svg" class="icon"><span data-v-6d34c71c="" class="count">14</span></a></li><li data-v-6d34c71c="" st:name="commentBtn" class="item comment clickable"><a data-v-6d34c71c="" href="https://juejin.im/post/5ece6e63e51d457848685547#comment" target="_blank" rel="" class="title-box"><img data-v-6d34c71c="" src="./类型即正义：TypeScript 从入门到实践（三）：类型别名和类 - 掘金_files/comment.4d5744f.svg" class="icon"><span data-v-6d34c71c="" class="count">2</span></a></li><li data-v-6d34c71c="" st:name="shareBtn" title="分享" class="item share clickable hover"><img data-v-6d34c71c="" src="./类型即正义：TypeScript 从入门到实践（三）：类型别名和类 - 掘金_files/share.1d55e69.svg" class="icon"><div data-v-6d34c71c="" class="share-panel"><div data-v-6d34c71c="" st:name="shareItem" st:state="weibo" class="share-item weibo"><img data-v-6d34c71c="" src="./类型即正义：TypeScript 从入门到实践（三）：类型别名和类 - 掘金_files/weibo.8e2f5d6.svg" class="icon">微博</div><div data-v-6d34c71c="" st:name="shareItem" st:state="wechat" class="share-item wechat"><img data-v-6d34c71c="" src="./类型即正义：TypeScript 从入门到实践（三）：类型别名和类 - 掘金_files/wechat.844402c.svg" class="icon">微信扫一扫<div data-v-6d34c71c="" class="qr-code-box"><img data-v-6d34c71c="" src="https://juejin.im/post/5e97b3c7518825737e0f88dc" class="qr-code"></div></div></div></li><li data-v-6d34c71c="" title="收藏" st:name="collectBtn" class="item collect clickable hover"><img data-v-6d34c71c="" src="./类型即正义：TypeScript 从入门到实践（三）：类型别名和类 - 掘金_files/collect.02e2979.svg" class="icon"><!----></li><!----></ul></div></div><div data-v-261e638e="" data-v-a98f170a="" data-v-6d34c71c="" data-src="https://user-gold-cdn.xitu.io/2020/5/27/172565fef3b06f3c?imageView2/1/w/120/h/120/q/85/format/webp/interlace/1" class="lazy thumb thumb" style="background-image: none; background-size: cover;"></div></div></a></div></div></li><li data-v-3ce073b0="" data-growing-container="true" data-growing-title="entryList" class="item"><div data-v-392c77a2="" data-v-3ce073b0="" class="entry-box"><div data-v-6d34c71c="" data-v-392c77a2="" st:block="entry" st:state="5ea40bbce51d4546fd48318f|7" class="entry"><a data-v-6d34c71c="" href="https://juejin.im/post/5ea40427518825736f6434ef" target="_blank" rel="" st:name="link" class="entry-link"><div data-v-6d34c71c="" class="content-box"><div data-v-6d34c71c="" class="info-box"><div data-v-6d34c71c="" class="info-row meta-row"><ul data-v-6d34c71c="" class="meta-list"><!----><!----><li data-v-6d34c71c="" class="item post">专栏</li><li data-v-6d34c71c="" class="item username clickable"><div data-v-2bc7e294="" data-v-6d34c71c="" st:block="userPopover" st:state="5800462ed20309006801eabf" class="user-popover-box"><!----><a data-v-6d34c71c="" href="https://juejin.im/user/5800462ed20309006801eabf" target="_blank" rel="" st:name="user" st:state="5800462ed20309006801eabf" data-v-2bc7e294="">黑头发的小强</a></div></li><li data-v-6d34c71c="" class="item">1月前</li><li data-v-6d34c71c="" class="item tag"><a data-v-6d34c71c="" href="https://juejin.im/tag/TypeScript" target="_blank" rel="" st:name="tag" st:state="55e7d5a360b2d687f60ae13a" class="tag">TypeScript</a></li><!----></ul></div><div data-v-6d34c71c="" class="info-row title-row"><!----><!----><a data-v-6d34c71c="" href="https://juejin.im/post/5ea40427518825736f6434ef" target="_blank" rel="" st:name="title" class="title">【万字长文】深入理解 Typescript 高级用法</a></div><div data-v-6d34c71c="" class="info-row action-row"><ul data-v-6d34c71c="" class="action-list"><li data-v-6d34c71c="" st:name="likeBtn" class="item like clickable"><a data-v-6d34c71c="" class="title-box"><img data-v-6d34c71c="" src="./类型即正义：TypeScript 从入门到实践（三）：类型别名和类 - 掘金_files/zan.e9d7698.svg" class="icon"><span data-v-6d34c71c="" class="count">173</span></a></li><li data-v-6d34c71c="" st:name="commentBtn" class="item comment clickable"><a data-v-6d34c71c="" href="https://juejin.im/post/5ea40427518825736f6434ef#comment" target="_blank" rel="" class="title-box"><img data-v-6d34c71c="" src="./类型即正义：TypeScript 从入门到实践（三）：类型别名和类 - 掘金_files/comment.4d5744f.svg" class="icon"><span data-v-6d34c71c="" class="count">43</span></a></li><li data-v-6d34c71c="" st:name="shareBtn" title="分享" class="item share clickable hover"><img data-v-6d34c71c="" src="./类型即正义：TypeScript 从入门到实践（三）：类型别名和类 - 掘金_files/share.1d55e69.svg" class="icon"><div data-v-6d34c71c="" class="share-panel"><div data-v-6d34c71c="" st:name="shareItem" st:state="weibo" class="share-item weibo"><img data-v-6d34c71c="" src="./类型即正义：TypeScript 从入门到实践（三）：类型别名和类 - 掘金_files/weibo.8e2f5d6.svg" class="icon">微博</div><div data-v-6d34c71c="" st:name="shareItem" st:state="wechat" class="share-item wechat"><img data-v-6d34c71c="" src="./类型即正义：TypeScript 从入门到实践（三）：类型别名和类 - 掘金_files/wechat.844402c.svg" class="icon">微信扫一扫<div data-v-6d34c71c="" class="qr-code-box"><img data-v-6d34c71c="" src="https://juejin.im/post/5e97b3c7518825737e0f88dc" class="qr-code"></div></div></div></li><li data-v-6d34c71c="" title="收藏" st:name="collectBtn" class="item collect clickable hover"><img data-v-6d34c71c="" src="./类型即正义：TypeScript 从入门到实践（三）：类型别名和类 - 掘金_files/collect.02e2979.svg" class="icon"><!----></li><!----></ul></div></div><div data-v-261e638e="" data-v-a98f170a="" data-v-6d34c71c="" data-src="https://user-gold-cdn.xitu.io/2020/4/25/171b0fe42ec18e6a?imageView2/1/w/120/h/120/q/85/format/webp/interlace/1" class="lazy thumb thumb" style="background-image: none; background-size: cover;"></div></div></a></div></div></li><li data-v-3ce073b0="" data-growing-container="true" data-growing-title="entryList" class="item"><div data-v-392c77a2="" data-v-3ce073b0="" class="entry-box"><div data-v-6d34c71c="" data-v-392c77a2="" st:block="entry" st:state="5ed589ea6fb9a04802146fb8|8" class="entry"><a data-v-6d34c71c="" href="https://juejin.im/post/5ed589a251882542e3022f44" target="_blank" rel="" st:name="link" class="entry-link"><div data-v-6d34c71c="" class="content-box"><div data-v-6d34c71c="" class="info-box"><div data-v-6d34c71c="" class="info-row meta-row"><ul data-v-6d34c71c="" class="meta-list"><!----><!----><li data-v-6d34c71c="" class="item post">专栏</li><li data-v-6d34c71c="" class="item username clickable"><div data-v-2bc7e294="" data-v-6d34c71c="" st:block="userPopover" st:state="586fc337a22b9d0058807d53" class="user-popover-box"><!----><a data-v-6d34c71c="" href="https://juejin.im/user/586fc337a22b9d0058807d53" target="_blank" rel="" st:name="user" st:state="586fc337a22b9d0058807d53" data-v-2bc7e294="">pingan8787</a></div></li><li data-v-6d34c71c="" class="item">5天前</li><li data-v-6d34c71c="" class="item tag"><a data-v-6d34c71c="" href="https://juejin.im/tag/TypeScript" target="_blank" rel="" st:name="tag" st:state="55e7d5a360b2d687f60ae13a" class="tag">TypeScript</a></li><!----></ul></div><div data-v-6d34c71c="" class="info-row title-row"><!----><!----><a data-v-6d34c71c="" href="https://juejin.im/post/5ed589a251882542e3022f44" target="_blank" rel="" st:name="title" class="title">了不起的 tsconfig.json 指南</a></div><div data-v-6d34c71c="" class="info-row action-row"><ul data-v-6d34c71c="" class="action-list"><li data-v-6d34c71c="" st:name="likeBtn" class="item like clickable"><a data-v-6d34c71c="" class="title-box"><img data-v-6d34c71c="" src="./类型即正义：TypeScript 从入门到实践（三）：类型别名和类 - 掘金_files/zan.e9d7698.svg" class="icon"><span data-v-6d34c71c="" class="count">6</span></a></li><li data-v-6d34c71c="" st:name="commentBtn" class="item comment clickable"><a data-v-6d34c71c="" href="https://juejin.im/post/5ed589a251882542e3022f44#comment" target="_blank" rel="" class="title-box"><img data-v-6d34c71c="" src="./类型即正义：TypeScript 从入门到实践（三）：类型别名和类 - 掘金_files/comment.4d5744f.svg" class="icon"><!----></a></li><li data-v-6d34c71c="" st:name="shareBtn" title="分享" class="item share clickable hover"><img data-v-6d34c71c="" src="./类型即正义：TypeScript 从入门到实践（三）：类型别名和类 - 掘金_files/share.1d55e69.svg" class="icon"><div data-v-6d34c71c="" class="share-panel"><div data-v-6d34c71c="" st:name="shareItem" st:state="weibo" class="share-item weibo"><img data-v-6d34c71c="" src="./类型即正义：TypeScript 从入门到实践（三）：类型别名和类 - 掘金_files/weibo.8e2f5d6.svg" class="icon">微博</div><div data-v-6d34c71c="" st:name="shareItem" st:state="wechat" class="share-item wechat"><img data-v-6d34c71c="" src="./类型即正义：TypeScript 从入门到实践（三）：类型别名和类 - 掘金_files/wechat.844402c.svg" class="icon">微信扫一扫<div data-v-6d34c71c="" class="qr-code-box"><img data-v-6d34c71c="" src="https://juejin.im/post/5e97b3c7518825737e0f88dc" class="qr-code"></div></div></div></li><li data-v-6d34c71c="" title="收藏" st:name="collectBtn" class="item collect clickable hover"><img data-v-6d34c71c="" src="./类型即正义：TypeScript 从入门到实践（三）：类型别名和类 - 掘金_files/collect.02e2979.svg" class="icon"><!----></li><!----></ul></div></div><div data-v-261e638e="" data-v-a98f170a="" data-v-6d34c71c="" data-src="https://user-gold-cdn.xitu.io/2020/6/2/17272225f0f3710f?imageView2/1/w/120/h/120/q/85/format/webp/interlace/1" class="lazy thumb thumb" style="background-image: none; background-size: cover;"></div></div></a></div></div></li><li data-v-3ce073b0="" class="item"><!----></li><!----></ul></div><div data-v-2184ead4="" data-v-50ff96fb="" st:block="sidebar" class="sidebar sidebar sticky" data-v-0f848c07=""><div data-v-352419ce="" data-v-234391ba="" data-v-2184ead4="" class="sidebar-block author-block shadow"><div data-v-352419ce="" class="block-title">关于作者</div><div data-v-352419ce="" class="block-body"><a data-v-234391ba="" href="https://juejin.im/user/5b33414351882574b9694d28" target="_blank" rel="" class="user-item item" data-v-352419ce=""><div data-v-261e638e="" data-v-b49070bc="" data-v-234391ba="" data-src="https://user-gold-cdn.xitu.io/2019/9/22/16d596f04f4f4e3d?imageView2/1/w/100/h/100/q/85/format/webp/interlace/1" class="lazy avatar avatar loaded" style="background-image: url(&quot;https://user-gold-cdn.xitu.io/2019/9/22/16d596f04f4f4e3d?imageView2/1/w/100/h/100/q/85/format/webp/interlace/1&quot;);"></div><div data-v-234391ba="" class="info-box"><a data-v-1a54813b="" data-v-234391ba="" href="https://juejin.im/user/5b33414351882574b9694d28" target="_blank" rel="" class="username">图雀社区<a data-v-3a430c94="" data-v-1a54813b="" href="https://juejin.im/book/5c90640c5188252d7941f5bb/section/5c9065385188252da6320022" target="_blank" rel="" class="rank"><img data-v-3a430c94="" src="./类型即正义：TypeScript 从入门到实践（三）：类型别名和类 - 掘金_files/lv-4.2c3fafd.svg" alt="lv-4"></a></a><div data-v-234391ba="" title="一只图雀 @ 公众号「图雀社区」" class="position">一只图雀 @ 公众号「图雀社区」</div></div></a><div data-v-234391ba="" data-v-352419ce="" class="stat-item item"><svg data-v-234391ba="" data-v-352419ce="" xmlns="http://www.w3.org/2000/svg" width="25" height="26" viewBox="0 0 25 26" class="zan"><g data-v-234391ba="" data-v-352419ce="" fill="none" fill-rule="evenodd" transform="translate(0 .57)"><ellipse data-v-234391ba="" data-v-352419ce="" cx="12.5" cy="12.57" fill="#E1EFFF" rx="12.5" ry="12.57"></ellipse> <path data-v-234391ba="" data-v-352419ce="" fill="#7BB9FF" d="M8.596 11.238V19H7.033C6.463 19 6 18.465 6 17.807v-5.282c0-.685.483-1.287 1.033-1.287h1.563zm4.275-4.156A1.284 1.284 0 0 1 14.156 6c.885.016 1.412.722 1.595 1.07.334.638.343 1.687.114 2.361-.207.61-.687 1.412-.687 1.412h3.596c.38 0 .733.178.969.488.239.317.318.728.21 1.102l-1.628 5.645a1.245 1.245 0 0 1-1.192.922h-7.068v-7.889c1.624-.336 2.623-2.866 2.806-4.029z"></path></g></svg> <span data-v-234391ba="" data-v-352419ce="" class="content">获得点赞<span data-v-234391ba="" data-v-352419ce="" class="count">3,453</span></span></div><div data-v-234391ba="" data-v-352419ce="" class="stat-item item"><svg data-v-234391ba="" data-v-352419ce="" width="25" height="25" viewBox="0 0 25 25" class="icon stat-view-icon"><g data-v-234391ba="" data-v-352419ce="" fill="none" fill-rule="evenodd"><circle data-v-234391ba="" data-v-352419ce="" cx="12.5" cy="12.5" r="12.5" fill="#E1EFFF"></circle> <path data-v-234391ba="" data-v-352419ce="" fill="#7BB9FF" d="M4 12.5S6.917 7 12.75 7s8.75 5.5 8.75 5.5-2.917 5.5-8.75 5.5S4 12.5 4 12.5zm8.75 2.292c1.208 0 2.188-1.026 2.188-2.292 0-1.266-.98-2.292-2.188-2.292-1.208 0-2.188 1.026-2.188 2.292 0 1.266.98 2.292 2.188 2.292z"></path></g></svg> <span data-v-234391ba="" data-v-352419ce="" class="content">文章被阅读<span data-v-234391ba="" data-v-352419ce="" class="count">180,774</span></span></div><!----></div></div><!----><div data-v-352419ce="" data-v-a07f71c6="" data-v-bf6401d0="" data-v-2184ead4="" class="sidebar-block recommend recommend-index shadow"><div data-v-352419ce="" class="block-title">你可能感兴趣的小册</div><div data-v-352419ce="" class="block-body"><div data-v-a07f71c6="" data-v-352419ce="" class="book-list"><div data-v-a07f71c6="" data-v-352419ce="" class="book"><div data-v-a07f71c6="" data-v-352419ce="" class="poster"><div data-v-261e638e="" data-v-a98f170a="" data-v-a07f71c6="" data-src="https://user-gold-cdn.xitu.io/2017/12/13/1604f3080efffc24?imageView2/1/w/200/h/280/q/95/format/webp/interlace/1" class="lazy thumb poster-img loaded" data-v-352419ce="" style="background-image: url(&quot;https://user-gold-cdn.xitu.io/2017/12/13/1604f3080efffc24?imageView2/1/w/200/h/280/q/95/format/webp/interlace/1&quot;); background-size: cover;"></div></div><div data-v-a07f71c6="" data-v-352419ce="" class="info"><div data-v-a07f71c6="" data-v-352419ce="" class="title">响应式编程 —— RxJava 高阶指南</div><div data-v-a07f71c6="" data-v-352419ce="" class="bought"><span data-v-a07f71c6="" data-v-352419ce="" class="num">1525人已购买</span><span data-v-a07f71c6="" data-v-352419ce="" class="try-read">试读</span></div></div></div><div data-v-a07f71c6="" data-v-352419ce="" class="book"><div data-v-a07f71c6="" data-v-352419ce="" class="poster"><div data-v-261e638e="" data-v-a98f170a="" data-v-a07f71c6="" data-src="https://user-gold-cdn.xitu.io/2017/11/20/15fd79563b28dd6e?imageView2/1/w/200/h/280/q/95/format/webp/interlace/1" class="lazy thumb poster-img loaded" data-v-352419ce="" style="background-image: url(&quot;https://user-gold-cdn.xitu.io/2017/11/20/15fd79563b28dd6e?imageView2/1/w/200/h/280/q/95/format/webp/interlace/1&quot;); background-size: cover;"></div></div><div data-v-a07f71c6="" data-v-352419ce="" class="info"><div data-v-a07f71c6="" data-v-352419ce="" class="title">如何使用 Canvas 制作出炫酷的网页背景特效</div><div data-v-a07f71c6="" data-v-352419ce="" class="bought"><span data-v-a07f71c6="" data-v-352419ce="" class="num">3989人已购买</span><span data-v-a07f71c6="" data-v-352419ce="" class="try-read">试读</span></div></div></div></div></div></div><div data-v-352419ce="" data-v-9f811e7c="" data-v-2184ead4="" class="sidebar-block app-download-sidebar-block shadow"><!----><div data-v-352419ce="" class="block-body"><a data-v-9f811e7c="" data-v-352419ce="" class="app-link" href="https://juejin.im/app" target="_blank"><img data-v-9f811e7c="" data-v-352419ce="" src="./类型即正义：TypeScript 从入门到实践（三）：类型别名和类 - 掘金_files/post.7cb7332.png" class="qr-img"><div data-v-9f811e7c="" data-v-352419ce="" class="content-box"><div data-v-9f811e7c="" data-v-352419ce="" class="headline">下载掘金客户端</div><div data-v-9f811e7c="" data-v-352419ce="" class="desc">一个帮助开发者成长的社区</div></div><div data-v-9f811e7c="" data-v-352419ce="" title="关闭" class="close-btn ion-close-round"></div></a></div></div><div data-v-352419ce="" data-v-524c33b2="" data-v-2184ead4="" class="sidebar-block wechat-sidebar-block pure"><div data-v-473bc7fa="" data-v-524c33b2="" class="wechat-banner" data-v-352419ce=""><img data-v-473bc7fa="" src="./类型即正义：TypeScript 从入门到实践（三）：类型别名和类 - 掘金_files/frontend.1dae74a.png" class="wechat-img"></div><div data-v-524c33b2="" data-v-352419ce="" title="关闭" class="close-btn ion-close-round"></div></div><div data-v-352419ce="" data-v-6930df48="" data-v-2184ead4="" class="sidebar-block related-entry-sidebar-block shadow" st:block="relatedEntrySidebarBlock"><div data-v-352419ce="" class="block-title">相关文章</div><div data-v-352419ce="" class="block-body"><div data-v-6930df48="" data-v-352419ce="" class="entry-list"><a data-v-6930df48="" href="https://juejin.im/post/5e7577816fb9a07c83350011" target="_blank" rel="" st:name="link" class="item" data-v-352419ce=""><div data-v-6930df48="" class="entry-title">（4.2万字🔥🔥🔥重启2020）“从零到部署”Vue全栈电商应用系列教程---正式完结</div><div data-v-6930df48="" class="entry-meta-box"><div data-v-6930df48="" class="entry-meta"><img data-v-6930df48="" src="./类型即正义：TypeScript 从入门到实践（三）：类型别名和类 - 掘金_files/zan.e9d7698.svg" class="icon"><span data-v-6930df48="" class="count">439</span></div><div data-v-6930df48="" class="entry-meta"><img data-v-6930df48="" src="./类型即正义：TypeScript 从入门到实践（三）：类型别名和类 - 掘金_files/comment.a7c8341.svg" class="icon"><span data-v-6930df48="" class="count">24</span></div></div></a><a data-v-6930df48="" href="https://juejin.im/post/5dfd851c6fb9a0163e248463" target="_blank" rel="" st:name="link" class="item" data-v-352419ce=""><div data-v-6930df48="" class="entry-title">从零到部署：用 Vue 和 Express 实现迷你全栈电商应用（一）</div><div data-v-6930df48="" class="entry-meta-box"><div data-v-6930df48="" class="entry-meta"><img data-v-6930df48="" src="./类型即正义：TypeScript 从入门到实践（三）：类型别名和类 - 掘金_files/zan.e9d7698.svg" class="icon"><span data-v-6930df48="" class="count">170</span></div><div data-v-6930df48="" class="entry-meta"><img data-v-6930df48="" src="./类型即正义：TypeScript 从入门到实践（三）：类型别名和类 - 掘金_files/comment.a7c8341.svg" class="icon"><span data-v-6930df48="" class="count">20</span></div></div></a><a data-v-6930df48="" href="https://juejin.im/post/5e670c19e51d45270764ee14" target="_blank" rel="" st:name="link" class="item" data-v-352419ce=""><div data-v-6930df48="" class="entry-title">（4.5w字🔥建议收藏）“可能是” 2020最值得看的小程序系列实战教程</div><div data-v-6930df48="" class="entry-meta-box"><div data-v-6930df48="" class="entry-meta"><img data-v-6930df48="" src="./类型即正义：TypeScript 从入门到实践（三）：类型别名和类 - 掘金_files/zan.e9d7698.svg" class="icon"><span data-v-6930df48="" class="count">286</span></div><div data-v-6930df48="" class="entry-meta"><img data-v-6930df48="" src="./类型即正义：TypeScript 从入门到实践（三）：类型别名和类 - 掘金_files/comment.a7c8341.svg" class="icon"><span data-v-6930df48="" class="count">60</span></div></div></a><a data-v-6930df48="" href="https://juejin.im/post/5df2f559e51d45584c553060" target="_blank" rel="" st:name="link" class="item" data-v-352419ce=""><div data-v-6930df48="" class="entry-title">一杯茶的时间，上手 React 框架开发</div><div data-v-6930df48="" class="entry-meta-box"><div data-v-6930df48="" class="entry-meta"><img data-v-6930df48="" src="./类型即正义：TypeScript 从入门到实践（三）：类型别名和类 - 掘金_files/zan.e9d7698.svg" class="icon"><span data-v-6930df48="" class="count">206</span></div><div data-v-6930df48="" class="entry-meta"><img data-v-6930df48="" src="./类型即正义：TypeScript 从入门到实践（三）：类型别名和类 - 掘金_files/comment.a7c8341.svg" class="icon"><span data-v-6930df48="" class="count">24</span></div></div></a><a data-v-6930df48="" href="https://juejin.im/post/5dff8da76fb9a01634475731" target="_blank" rel="" st:name="link" class="item" data-v-352419ce=""><div data-v-6930df48="" class="entry-title">从零到部署：用 Vue 和 Express 实现迷你全栈电商应用（二）</div><div data-v-6930df48="" class="entry-meta-box"><div data-v-6930df48="" class="entry-meta"><img data-v-6930df48="" src="./类型即正义：TypeScript 从入门到实践（三）：类型别名和类 - 掘金_files/zan.e9d7698.svg" class="icon"><span data-v-6930df48="" class="count">78</span></div><div data-v-6930df48="" class="entry-meta"><img data-v-6930df48="" src="./类型即正义：TypeScript 从入门到实践（三）：类型别名和类 - 掘金_files/comment.a7c8341.svg" class="icon"><span data-v-6930df48="" class="count">51</span></div></div></a></div></div></div><div data-v-2184ead4="" class="sticky-block-box"><div data-v-352419ce="" data-v-2afe7226="" data-v-2184ead4="" class="sidebar-block catalog-block pure"><nav data-v-5094e7bc="" data-v-2afe7226="" class="article-catalog" data-v-352419ce="" style=""><div data-v-5094e7bc="" class="catalog-title">目录</div><div data-v-5094e7bc="" class="catalog-body"><ul data-v-5094e7bc="" class="catalog-list" style="margin-top: -292.102px;"><li data-v-5094e7bc="" class="item d1"><a href="https://juejin.im/post/5e97b3c7518825737e0f88dc#heading-0" title="运行代码">运行代码</a><!----></li><li data-v-5094e7bc="" class="item d1"><a href="https://juejin.im/post/5e97b3c7518825737e0f88dc#heading-1" title="类型别名">类型别名</a><ul class="sub-list"><li class="item d2"><a href="https://juejin.im/post/5e97b3c7518825737e0f88dc#heading-2" title="类型别名与接口">类型别名与接口</a><!----></li><li class="item d2"><a href="https://juejin.im/post/5e97b3c7518825737e0f88dc#heading-3" title="动手实践">动手实践</a><!----></li></ul></li><li data-v-5094e7bc="" class="item d1"><a href="https://juejin.im/post/5e97b3c7518825737e0f88dc#heading-4" title="继续改进">继续改进</a><ul class="sub-list"><li class="item d2"><a href="https://juejin.im/post/5e97b3c7518825737e0f88dc#heading-5" title="小结">小结</a><!----></li></ul></li><li data-v-5094e7bc="" class="item d1"><a href="https://juejin.im/post/5e97b3c7518825737e0f88dc#heading-6" title="类">类</a><ul class="sub-list"><li class="item d2"><a href="https://juejin.im/post/5e97b3c7518825737e0f88dc#heading-7" title="简单注解">简单注解</a><!----></li><li class="item d2"><a href="https://juejin.im/post/5e97b3c7518825737e0f88dc#heading-8" title="访问限定符">访问限定符</a><ul class="sub-list"><li class="item d3"><a href="https://juejin.im/post/5e97b3c7518825737e0f88dc#heading-9" title="Public">Public</a><!----></li><li class="item d3"><a href="https://juejin.im/post/5e97b3c7518825737e0f88dc#heading-10" title="Protected">Protected</a><!----></li><li class="item d3"><a href="https://juejin.im/post/5e97b3c7518825737e0f88dc#heading-11" title="Private">Private</a><!----></li></ul></li><li class="item d2"><a href="https://juejin.im/post/5e97b3c7518825737e0f88dc#heading-12" title="只读修饰符">只读修饰符</a><!----></li><li class="item d2"><a href="https://juejin.im/post/5e97b3c7518825737e0f88dc#heading-13" title="抽象类">抽象类</a><ul class="sub-list"><li class="item d3"><a href="https://juejin.im/post/5e97b3c7518825737e0f88dc#heading-14" title="抽象类与抽象方法">抽象类与抽象方法</a><!----></li><li class="item d3"><a href="https://juejin.im/post/5e97b3c7518825737e0f88dc#heading-15" title="抽象类的继承">抽象类的继承</a><!----></li></ul></li><li class="item d2"><a href="https://juejin.im/post/5e97b3c7518825737e0f88dc#heading-16" title="构造函数">构造函数</a><ul class="sub-list"><li class="item d3"><a href="https://juejin.im/post/5e97b3c7518825737e0f88dc#heading-17" title="声明注解类实例的类型">声明注解类实例的类型</a><!----></li><li class="item d3"><a href="https://juejin.im/post/5e97b3c7518825737e0f88dc#heading-18" title="声明构造函数">声明构造函数</a><!----></li></ul></li><li class="item d2"><a href="https://juejin.im/post/5e97b3c7518825737e0f88dc#heading-19" title="类与接口">类与接口</a><ul class="sub-list"><li class="item d3"><a href="https://juejin.im/post/5e97b3c7518825737e0f88dc#heading-20" title="类实现接口">类实现接口</a><!----></li><li class="item d3"><a href="https://juejin.im/post/5e97b3c7518825737e0f88dc#heading-21" title="接口继承类">接口继承类</a><!----></li><li class="item d3"><a href="https://juejin.im/post/5e97b3c7518825737e0f88dc#heading-22" title="类作为接口使用">类作为接口使用</a><!----></li></ul></li><li class="item d2 active"><a href="https://juejin.im/post/5e97b3c7518825737e0f88dc#heading-23" title="动手实践">动手实践</a><!----></li><li class="item d2"><a href="https://juejin.im/post/5e97b3c7518825737e0f88dc#heading-24" title="小结">小结</a><!----></li></ul></li></ul></div></nav></div></div></div><div data-v-77aa2e39="" data-v-50ff96fb="" class="article-suspended-panel article-suspended-panel" data-v-0f848c07=""><div data-v-77aa2e39="" class="like-btn panel-btn like-adjust with-badge" badge="22"></div><div data-v-77aa2e39="" class="comment-btn panel-btn comment-adjust with-badge" badge="11"></div><div data-v-77aa2e39="" class="collect-btn panel-btn"><!----></div><div data-v-77aa2e39="" class="share-title">分享</div><div data-v-77aa2e39="" class="weibo-btn share-btn panel-btn"></div><div data-v-77aa2e39="" class="qq-btn share-btn panel-btn"></div><div data-v-77aa2e39="" class="wechat-btn share-btn panel-btn"><img data-v-77aa2e39="" src="https://juejin.im/post/5e97b3c7518825737e0f88dc" class="wechat-qr-code-img shadow" style="display: none;"></div></div><div data-v-ddb41540="" data-v-50ff96fb="" class="image-viewer-box" data-v-0f848c07=""><!----></div><!----></div></main></div><!----></div>
      
      
      
      <script type="text/javascript" src="./类型即正义：TypeScript 从入门到实践（三）：类型别名和类 - 掘金_files/runtime.cdc821c8220e297137a0.js"></script><script type="text/javascript" src="./类型即正义：TypeScript 从入门到实践（三）：类型别名和类 - 掘金_files/0.76f0edba643f9ca4fdec.js"></script><script type="text/javascript" src="./类型即正义：TypeScript 从入门到实践（三）：类型别名和类 - 掘金_files/1.33e55539d1cddee86add.js"></script>
    </body></html>