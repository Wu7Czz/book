<!DOCTYPE html>
<!-- saved from url=(0037)https://zhuanlan.zhihu.com/p/43283016 -->
<html lang="zh" data-hairline="true" data-theme="light" data-react-helmet="data-theme"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8"><title>浅析Typescript设计模式 - 知乎</title><meta name="viewport" content="width=device-width,initial-scale=1,maximum-scale=1"><meta name="renderer" content="webkit"><meta name="force-rendering" content="webkit"><meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1"><meta name="google-site-verification" content="FTeR0c8arOPKh8c5DYh_9uu98_zJbaWw53J-Sch9MTg"><meta data-react-helmet="true" name="keywords" content="JavaScript,TypeScript,Angular​"><meta data-react-helmet="true" name="description" content="设计模式就是软件开发过程中形成的套路，就如同你在玩lol中的“正方形打野”，“四一分推”，又或者篮球运动中的“二夹一”，“高位单打”一样，属于经验的总结。熟悉设计模式有什么好处呢？ 让你在编程过程中更有…"><meta data-react-helmet="true" property="og:title" content="浅析Typescript设计模式"><meta data-react-helmet="true" property="og:url" content="https://zhuanlan.zhihu.com/p/43283016"><meta data-react-helmet="true" property="og:description" content="设计模式就是软件开发过程中形成的套路，就如同你在玩lol中的“正方形打野”，“四一分推”，又或者篮球运动中的“二夹一”，“高位单打”一样，属于经验的总结。熟悉设计模式有什么好处呢？ 让你在编程过程中更有…"><meta data-react-helmet="true" property="og:image" content="https://pic1.zhimg.com/v2-61440a19a5c778a2eccb2c7dee4064a6_b.jpg"><meta data-react-helmet="true" property="og:type" content="article"><meta data-react-helmet="true" property="og:site_name" content="知乎专栏"><link data-react-helmet="true" rel="apple-touch-icon" href="https://static.zhihu.com/heifetz/assets/apple-touch-icon-152.67c7b278.png"><link data-react-helmet="true" rel="apple-touch-icon" href="https://static.zhihu.com/heifetz/assets/apple-touch-icon-152.67c7b278.png" sizes="152x152"><link data-react-helmet="true" rel="apple-touch-icon" href="https://static.zhihu.com/heifetz/assets/apple-touch-icon-120.b3e6278d.png" sizes="120x120"><link data-react-helmet="true" rel="apple-touch-icon" href="https://static.zhihu.com/heifetz/assets/apple-touch-icon-76.7a750095.png" sizes="76x76"><link data-react-helmet="true" rel="apple-touch-icon" href="https://static.zhihu.com/heifetz/assets/apple-touch-icon-60.a4a761d4.png" sizes="60x60"><link rel="shortcut icon" type="image/x-icon" href="https://static.zhihu.com/static/favicon.ico"><link rel="search" type="application/opensearchdescription+xml" href="https://static.zhihu.com/static/search.xml" title="知乎"><link rel="dns-prefetch" href="https://static.zhimg.com/"><link rel="dns-prefetch" href="https://pic1.zhimg.com/"><link rel="dns-prefetch" href="https://pic2.zhimg.com/"><link rel="dns-prefetch" href="https://pic3.zhimg.com/"><link rel="dns-prefetch" href="https://pic4.zhimg.com/"><style>
.u-safeAreaInset-top {
  height: constant(safe-area-inset-top) !important;
  height: env(safe-area-inset-top) !important;
  
}
.u-safeAreaInset-bottom {
  height: constant(safe-area-inset-bottom) !important;
  height: env(safe-area-inset-bottom) !important;
  
}
</style><link href="./浅析Typescript设计模式 - 知乎_files/column.app.216a26f4.4b5ac67306167054cb06.css" rel="stylesheet"><script type="text/javascript" async="" src="./浅析Typescript设计模式 - 知乎_files/analytics.js" nonce=""></script><script defer="" crossorigin="anonymous" src="./浅析Typescript设计模式 - 知乎_files/init.js" data-sentry-config="{&quot;dsn&quot;:&quot;https://2d8d764432cc4f6fb3bc78ab9528299d@crash2.zhihu.com/1224&quot;,&quot;sampleRate&quot;:0.1,&quot;release&quot;:&quot;1220-8b178347&quot;,&quot;ignoreErrorNames&quot;:[&quot;NetworkError&quot;,&quot;SecurityError&quot;],&quot;ignoreErrors&quot;:[&quot;origin message&quot;,&quot;Network request failed&quot;,&quot;Loading chunk&quot;,&quot;这个系统不支持该功能。&quot;,&quot;Can&#39;t find variable: webkit&quot;,&quot;Can&#39;t find variable: $&quot;,&quot;内存不足&quot;,&quot;out of memory&quot;,&quot;DOM Exception 18&quot;,&quot;The operation is insecure&quot;,&quot;[object Event]&quot;,&quot;[object FileError]&quot;,&quot;[object DOMError]&quot;,&quot;[object Object]&quot;,&quot;拒绝访问。&quot;,&quot;Maximum call stack size exceeded&quot;,&quot;UploadError&quot;,&quot;无法 fetch&quot;,&quot;draft-js&quot;,&quot;缺少 JavaScript 对象&quot;,&quot;componentWillEnter&quot;,&quot;componentWillLeave&quot;,&quot;componentWillAppear&quot;,&quot;getInlineStyleAt&quot;,&quot;getCharacterList&quot;],&quot;whitelistUrls&quot;:[&quot;static.zhihu.com&quot;]}"></script><style data-emotion-css="1cd9gw4">.css-1cd9gw4{margin-left:.3em;}</style><script charset="utf-8" src="./浅析Typescript设计模式 - 知乎_files/column.zswsdid.3fa9036b123da6bf1325.js"></script><link rel="stylesheet" type="text/css" href="./浅析Typescript设计模式 - 知乎_files/column.Labels.216a26f4.eb281e05ad768928520e.css"><script charset="utf-8" src="./浅析Typescript设计模式 - 知乎_files/column.Labels.b056726b8bb4d0846fab.js"></script><link rel="stylesheet" type="text/css" href="./浅析Typescript设计模式 - 知乎_files/column.modals.216a26f4.3a035d6e2ac18e2fd358.css"><script charset="utf-8" src="./浅析Typescript设计模式 - 知乎_files/column.modals.0ba4fda226f797dfb809.js"></script><style data-emotion="css"></style><link rel="stylesheet" type="text/css" href="./浅析Typescript设计模式 - 知乎_files/column.richinput.216a26f4.4858714cca8c421d6091.css"><script charset="utf-8" src="./浅析Typescript设计模式 - 知乎_files/column.richinput.bcd20db478460f63f074.js"></script></head><body class="WhiteBg-body Body--isAppleDevice" data-react-helmet="class"><div id="root"><div class="App"><div class="LoadingBar"></div><main role="main" class="App-main"><div class="Post-content" data-zop-usertoken="{&quot;userToken&quot;:&quot;&quot;}" data-zop="{&quot;authorName&quot;:&quot;江湖术士&quot;,&quot;itemId&quot;:43283016,&quot;title&quot;:&quot;浅析Typescript设计模式&quot;,&quot;type&quot;:&quot;article&quot;}" data-za-detail-view-path-module="PostItem" data-za-extra-module="{&quot;card&quot;:{&quot;content&quot;:{&quot;type&quot;:&quot;Post&quot;,&quot;token&quot;:&quot;43283016&quot;}}}"><div class="ColumnPageHeader-Wrapper"><div><div class="Sticky ColumnPageHeader is-fixed" style="width: 1680px; top: 0px; left: 0px;"><div class="ColumnPageHeader-content"><a href="https://www.zhihu.com/" aria-label="知乎"><svg viewBox="0 0 200 91" fill="#0084FF" width="64" height="30"><path d="M53.29 80.035l7.32.002 2.41 8.24 13.128-8.24h15.477v-67.98H53.29v67.978zm7.79-60.598h22.756v53.22h-8.73l-8.718 5.473-1.587-5.46-3.72-.012v-53.22zM46.818 43.162h-16.35c.545-8.467.687-16.12.687-22.955h15.987s.615-7.05-2.68-6.97H16.807c1.09-4.1 2.46-8.332 4.1-12.708 0 0-7.523 0-10.085 6.74-1.06 2.78-4.128 13.48-9.592 24.41 1.84-.2 7.927-.37 11.512-6.94.66-1.84.785-2.08 1.605-4.54h9.02c0 3.28-.374 20.9-.526 22.95H6.51c-3.67 0-4.863 7.38-4.863 7.38H22.14C20.765 66.11 13.385 79.24 0 89.62c6.403 1.828 12.784-.29 15.937-3.094 0 0 7.182-6.53 11.12-21.64L43.92 85.18s2.473-8.402-.388-12.496c-2.37-2.788-8.768-10.33-11.496-13.064l-4.57 3.627c1.363-4.368 2.183-8.61 2.46-12.71H49.19s-.027-7.38-2.372-7.38zm128.752-.502c6.51-8.013 14.054-18.302 14.054-18.302s-5.827-4.625-8.556-1.27c-1.874 2.548-11.51 15.063-11.51 15.063l6.012 4.51zm-46.903-18.462c-2.814-2.577-8.096.667-8.096.667s12.35 17.2 12.85 17.953l6.08-4.29s-8.02-11.752-10.83-14.33zM199.99 46.5c-6.18 0-40.908.292-40.953.292v-31.56c1.503 0 3.882-.124 7.14-.376 12.773-.753 21.914-1.25 27.427-1.504 0 0 3.817-8.496-.185-10.45-.96-.37-7.24 1.43-7.24 1.43s-51.63 5.153-72.61 5.64c.5 2.756 2.38 5.336 4.93 6.11 4.16 1.087 7.09.53 15.36.277 7.76-.5 13.65-.76 17.66-.76v31.19h-41.71s.88 6.97 7.97 7.14h33.73v22.16c0 4.364-3.498 6.87-7.65 6.6-4.4.034-8.15-.36-13.027-.566.623 1.24 1.977 4.496 6.035 6.824 3.087 1.502 5.054 2.053 8.13 2.053 9.237 0 14.27-5.4 14.027-14.16V53.93h38.235c3.026 0 2.72-7.432 2.72-7.432z" fill-rule="evenodd"></path></svg></a><i class="ColumnPageHeader-Line"></i><div class="ColumnPageHeader-Title"><div class="ColumnPageHeader-TitleName"><span class="ColumnPageHeader-TitleMeta">首发于</span><a class="ColumnLink ColumnPageHeader-TitleColumn" href="https://www.zhihu.com/column/plightfield">前端备忘录</a></div></div><div class="ColumnPageHeader-Button"><button type="button" class="Button ColumnPageHeader-WriteButton Button--blue"><svg class="Zi Zi--EditSurround" fill="currentColor" viewBox="0 0 24 24" width="24" height="24"><path d="M18.453 7.992l-1.833-1.65.964-.978a1.223 1.223 0 0 1 1.73-.012l.005.006a1.24 1.24 0 0 1 .007 1.748l-.873.886zm-1.178 1.194l-5.578 5.66-1.935.697a.393.393 0 0 1-.504-.504l.697-1.935 5.488-5.567 1.832 1.65zM7.58 5.848l5.654.006-1.539 1.991-3.666.012A1.02 1.02 0 0 0 7 8.868v7.993c0 .558.46 1.01 1.029 1.01l7.941-.01c.568 0 1.03-.453 1.03-1.012v-4.061l2-1.442v6.002c0 1.397-1.2 2.501-2.62 2.501H7.574C6.153 19.85 5 18.717 5 17.32V8.35c0-1.397 1.16-2.502 2.58-2.502z"></path></svg>写文章</button></div></div></div><div class="Sticky--holder" style="position: relative; inset: 0px; display: block; float: none; margin: 0px; height: 52px;"></div></div></div><img class="TitleImage" src="./浅析Typescript设计模式 - 知乎_files/v2-61440a19a5c778a2eccb2c7dee4064a6_1200x500.jpg" alt="浅析Typescript设计模式"><article class="Post-Main Post-NormalMain" tabindex="-1"><header class="Post-Header"><h1 class="Post-Title">浅析Typescript设计模式</h1><div class="Post-Author"><div class="AuthorInfo" itemprop="author" itemscope="" itemtype="http://schema.org/Person"><meta itemprop="name" content="江湖术士"><meta itemprop="image" content="https://pic3.zhimg.com/v2-24beed3d4509902870594de071dc9139_l.jpg"><meta itemprop="url" content="https://www.zhihu.com/people/du-shuai-27-14"><meta itemprop="zhihu:followerCount"><span class="UserLink AuthorInfo-avatarWrapper"><div class="Popover"><div id="Popover1-toggle" aria-haspopup="true" aria-expanded="false" aria-owns="Popover1-content"><a class="UserLink-link" data-za-detail-view-element_name="User" target="_blank" href="https://www.zhihu.com/people/du-shuai-27-14"><img class="Avatar Avatar--round AuthorInfo-avatar" width="38" height="38" src="./浅析Typescript设计模式 - 知乎_files/v2-24beed3d4509902870594de071dc9139_xs.jpg" srcset="https://pic3.zhimg.com/v2-24beed3d4509902870594de071dc9139_l.jpg 2x" alt="江湖术士"></a></div></div></span><div class="AuthorInfo-content"><div class="AuthorInfo-head"><span class="UserLink AuthorInfo-name"><div class="Popover"><div id="Popover2-toggle" aria-haspopup="true" aria-expanded="false" aria-owns="Popover2-content"><a class="UserLink-link" data-za-detail-view-element_name="User" target="_blank" href="https://www.zhihu.com/people/du-shuai-27-14">江湖术士</a></div></div></span></div><div class="AuthorInfo-detail"><div class="AuthorInfo-badge"><div class="ztext AuthorInfo-badgeText">控制自己，少点发言，越学越觉得自己菜</div></div></div></div></div></div><div><span class="Voters"><button type="button" class="Button Button--plain">401 人<!-- -->赞同了该文章</button></span></div></header><div class="Post-RichTextContainer"><div class="RichText ztext Post-RichText"><p>设计模式就是软件开发过程中形成的<b>套路</b>，就如同你在玩lol中的“<i>正方形打野</i>”，“<i>四一分推</i>”，又或者篮球运动中的“<i>二夹一</i>”，“<i>高位单打</i>”一样，属于经验的总结。</p><p>熟悉设计模式有什么好处呢？</p><ol><li> 让你在编程过程中更有自信，使用经过无数前人印证过的最好的设计，自然底气十足<br> </li><li> 提升编程效率，避免开发过程中的犹豫<br> </li><li> 更能掌控项目，方便预估开发时间，方便对团队成员进行管理<br> </li></ol><p>由于设计模式和软件开发的语言，平台都没有关系，因此，前端工程师对设计模式也是有需求的。</p><p><b>设计模式是对人类工程历史总结，而不单单只是软件工程</b>。</p><p>现在大家谈的前端工程化，如果脱离设计模式，只能算徒有其表，<b>设计模式才是工程化的灵魂</b>。当然，既然是经验和历史总结，有时候并不需要系统地进行学习，口口相传也是可以的，但是单独系统地讲解设计模式，就是要将“<i>公共知识</i>”转变为“<i>共有知识</i>”，戳破皇帝的新衣，让大家真正能言之有物，交流通畅。</p><h2>类型分类</h2><p>可以将设计模式分为三种类型，分别为<b>创建型</b>，<b>结构型</b>，和<b>行为型</b>。</p><p>创建型模式主要解决对象<b>创建什么，由谁创建，何时创建</b>的3w问题，对类的实例化进行了抽象，分离概念和实现，使得系统更加符合<b>单一职责原则</b>。</p><p>结构型模式描述如何将类或者对象组合在一起，形成更大的数据结构，因此也可以分为类结构型和对象结构型。</p><p>行为型模型对不同的对象划分责任和算法的抽象，关注类和对象之间的相互作用，同样也分为类和对象。</p><p>可以看到三种类型的模式正好解决了编程中的数据结构从哪里来？如何组合？如何交流？的问题。</p><hr><h2>创建型模式</h2><p>创建型模式一共有4个，分别为工厂（工厂，工厂方法，抽象工厂合并），建造者，原型，单例。</p><h2>工厂模式</h2><blockquote> 重要程度：⭐⭐⭐⭐⭐<br> 难度：⭐<br> 命名建议：xxxFactory，FactoryOfxxx<br> </blockquote><p>工厂模式简而言之，就是要<b>替代掉“new操作符”</b>！</p><p>为什么需要替代new操作符？</p><p>因为有时候创建实例时需要大量的准备工作，而将这些准备工作全部放在构造函数中是非常危险的行为，有必要将创建实例的逻辑和使用实例的逻辑分开，方便以后扩展。</p><p>举个例子：</p><div class="highlight"><pre><code class="language-js"><span class="k">class</span> <span class="nx">People</span> <span class="p">{</span>
  <span class="nx">constructor</span><span class="p">(</span><span class="nx">des</span><span class="p">)</span> <span class="p">{</span>
    <span class="c1">// 出现异步不能使用async await
</span><span class="c1"></span>    <span class="c1">// 函数调用时可能还未完成初始化
</span><span class="c1"></span>    <span class="nx">get</span><span class="p">(</span><span class="s1">'someUrl'</span><span class="p">).</span><span class="nx">then</span><span class="p">(</span><span class="nx">data</span> <span class="p">=&gt;</span> <span class="p">{</span>
      <span class="k">this</span><span class="p">.</span><span class="nx">name</span> <span class="o">=</span> <span class="nx">data</span><span class="p">.</span><span class="nx">name</span>
      <span class="nx">get</span><span class="p">(</span><span class="s1">'someUrl?name='</span> <span class="o">+</span> <span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="p">).</span><span class="nx">then</span><span class="p">(</span><span class="nx">data</span> <span class="p">=&gt;</span> <span class="p">{</span>
        <span class="k">this</span><span class="p">.</span><span class="nx">age</span> <span class="o">=</span> <span class="nx">data</span><span class="p">.</span><span class="nx">age</span>
      <span class="p">})</span>
    <span class="p">})</span>
    <span class="c1">// 非成员函数耦合性变大
</span><span class="c1"></span>    <span class="k">this</span><span class="p">.</span><span class="nx">des</span> <span class="o">=</span> <span class="nx">handleDes</span><span class="p">(</span><span class="nx">des</span><span class="p">)</span>
  <span class="p">}</span>
<span class="p">}</span>
</code></pre></div><p>而使用Typescript，配合工厂模式，实现如下：</p><div class="highlight"><pre><code class="language-ts"><span class="c1">// 还真别说，形式上好看的代码，质量一般都比较高
</span><span class="c1"></span><span class="kr">class</span> <span class="nx">People</span> <span class="p">{</span>
  <span class="nx">name</span>: <span class="kt">string</span> <span class="o">=</span> <span class="s1">''</span>
  <span class="nx">age</span>: <span class="kt">number</span> <span class="o">=</span> <span class="mi">0</span>
  <span class="nx">des</span>: <span class="kt">string</span> <span class="o">=</span> <span class="s1">''</span>
  <span class="kr">constructor</span><span class="p">(</span><span class="nx">name</span>: <span class="kt">string</span><span class="p">,</span> <span class="nx">age</span>: <span class="kt">number</span><span class="p">,</span> <span class="nx">des</span>: <span class="kt">string</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">this</span><span class="p">.</span><span class="nx">name</span> <span class="o">=</span> <span class="nx">name</span>
    <span class="k">this</span><span class="p">.</span><span class="nx">age</span> <span class="o">=</span> <span class="nx">age</span>
    <span class="k">this</span><span class="p">.</span><span class="nx">des</span> <span class="o">=</span> <span class="nx">des</span>
  <span class="p">}</span>
<span class="p">}</span>

<span class="nx">async</span> <span class="kd">function</span> <span class="nx">peopleFactory</span><span class="p">(</span><span class="nx">description</span>:<span class="kt">any</span><span class="p">){</span>
  <span class="kr">const</span> <span class="nx">name</span> <span class="o">=</span> <span class="nx">await</span> <span class="nx">get</span><span class="p">(</span><span class="s1">'someUrl'</span><span class="p">)</span>
  <span class="kr">const</span> <span class="nx">age</span> <span class="o">=</span> <span class="nx">await</span> <span class="nx">get</span><span class="p">(</span><span class="s1">'someUrl?name='</span><span class="o">+</span><span class="nx">name</span><span class="p">)</span>
  <span class="kr">const</span> <span class="nx">des</span> <span class="o">=</span> <span class="nx">handle</span><span class="p">(</span><span class="nx">description</span><span class="p">)</span>
  <span class="k">return</span> <span class="k">new</span> <span class="nx">People</span><span class="p">(</span><span class="nx">name</span><span class="p">,</span><span class="nx">age</span><span class="p">,</span><span class="nx">des</span><span class="p">)</span>
<span class="p">}</span></code></pre></div><p>这样的封装，能清楚地分离对象的创建和使用。同时，如果之后的类的定义发生了改变，可以直接修改People，创建类的准备数据发生了改变，则修改工厂函数。</p><p>但是，选择工厂模式的原因是因为构造函数足够复杂或者对象的创建面临巨大的不确定性，只需要传入变量即可构造的情况下，用工厂函数实际上是得不偿失的。</p><p><b>几乎所有的设计模式都会带来代码可读性下降的风险，因此需要找到代码可读性降低和可维护性，稳定性之间的平衡！</b></p><p>你也可以用函数根据参数返回相应的工厂函数，又或者用一个类集中管理工厂函数来处理复杂度。</p><h2>建造者模式</h2><blockquote> 重要程度：⭐⭐⭐⭐<br> 难度：⭐⭐<br> 命名建议：xxxBuilder<br> </blockquote><p>建造者模式用于直接构建复杂对象，比如上例中的构造函数参数，如果采用一个结构表示：</p><div class="highlight"><pre><code class="language-text">constructor(peopleConfig:any) {
    this.name = peopleConfig.name
    this.age = peopleConfig.age
    this.des = peopleConfig.des
}</code></pre></div><p>那么有必要将这个人对象的构建单独封装起来：</p><div class="highlight"><pre><code class="language-text">class PeopleConfigBuilder{
    name: string = ''
    age: number = 0
    des: string = ''
    async buildName(){
        this.name = await get('someUrl')
    }
    async buildAge(){
        await get('someUrl?name='+this.name)
    }
    async buildDes(description: any){
        this.des = handleDes(description)
    }
}

class People {
  name: string = ''
  age: number = 0
  des: string = ''
  constructor(peopleConfig: PeopleCofigBuilder) {
    this.name = peopleConfig.name
    this.age = peopleConfig.age
    this.des = peopleConfig.des
  }
}

async function peopleFactory(description:any){
  const builder = new PeopleConfigBuilder()
  builder.buildName()
  builder.buildAge()
  builder.buildDes()
  return new People(builder)
}</code></pre></div><p>当然，仅仅三个属性的对象，远远没有达到复杂对象的程度，因此，只有在对象十分复杂的时候，才需要应用到建造者模式。</p><h2>原型模式</h2><blockquote> 重要程度：⭐⭐<br> 难度：⭐<br> 命名建议：xxxPrototype<br> </blockquote><p>创建新对象时是基于一个对象的拷贝，而不是重新实例化一个类。</p><p>举例说明，比如上例中的peopleConfig，其实peopleConfig应该是有固定模板的：</p><div class="highlight"><pre><code class="language-text">function peopleConfigPrototype (){
    return {
        name: '',
        age: 0,
        des: ''
    }
}</code></pre></div><p>这样每次返回的都是新的对象，也可以相当于是对象的拷贝，但是如果直接拷贝对象，应该怎么写呢？</p><div class="highlight"><pre><code class="language-text">const peopleConfigPrototype = {
    name: '',
    age: 0,
    des: ''
}
const peopleConfig = Object.create(peopleConfigPrototype)
// 采用Object.create方法，当前对象将被复制到peopleConfig的__proto__上</code></pre></div><p>还有另一种方式进行对象拷贝，但是会丢掉对象中的函数：</p><div class="highlight"><pre><code class="language-text">const peopleConfig = JSON.parse(JSON.stringfy(peopleConfigProtytype))</code></pre></div><p>注意JSON操作会阻塞线程，导致性能急剧下降，一般不考虑这种方式。</p><h2>单例模式</h2><blockquote> 重要程度：⭐⭐⭐⭐⭐<br> 难度：⭐⭐<br> 命名建议：xxxSingle，xxxSingleton，xxxUnum<br> </blockquote><p>单例模式的目的是限制一个类只能被实例化一次，防止多次实例化。其中，根据类被实例化的时间，又被分为懒汉单例和饿汉单例。懒汉单例是指在第一次调用实例的时候实例化，饿汉单例是指在类加载的时候就实例化。</p><div class="highlight"><pre><code class="language-text">/* 懒汉单例 */
class PeopleSingle{
    // 静态成员instance
    static instance = null
    // 私有构造函数
    private constructor(){ }
    public static getInstance(){
        if(PeopleSingle.instance === null){
            PeopleSingle.instance = new PeopleSingle()
        }
        return PeopleSingle.instance
    }
}
PeopleSingle.getInstance()

/* 饿汉单例 */
class PeopleSingle{
    static instance = new PeopleSingle()
    private constructor(){ }
}
PeopleSingle.instance</code></pre></div><p>四种创建模式都有其使用场景，需要针对使用场景进行组合，才能写出高质量的代码。</p><hr><h2>结构型模式</h2><p>结构型模式一共有7种：适配器，桥接，组合，装饰，外观，享元，代理</p><h2>适配器模式</h2><blockquote> 重要程度：⭐⭐⭐⭐<br> 难度：⭐⭐⭐<br> 命名建议：xxxAdapter，xxxWraper<br> </blockquote><p>想想你的转接头，实际上就是被适配对象（adaptee）上套上一层封装，将其接口与目标对象（target）相匹配，所以适配器又叫wraper（包皮）。</p><p>比如，有一个目标类UsbC：</p><div class="highlight"><pre><code class="language-text">class UsbC{
    slowCharge(){
        console.log('slow charging')
    }
    superCharge(){
        console.log('super charging')
    }
}</code></pre></div><p>有一个被适配目标MicroUsb：</p><div class="highlight"><pre><code class="language-text">class MicroUsb{
    slowCharge(){
        console.log('slow charging')
    }
}</code></pre></div><p>所以adapter是如此：</p><div class="highlight"><pre><code class="language-text">// 精髓在implements target上
class MicroToCAdapter implements UsbC{
    microUsb: MicroUsb
    constructor(microUsb: MicroUsb){
        this.microUsb = microUsb
    }
    slowCharge(){
        this.microUsb.slowCharge()
    }
    superCharge(){
        console.log('cannot super charge, slow charging')
    }
}


// 这样就可以直接
new MicroTOCAdapter(new MicroUsb()).superCharge()</code></pre></div><p>适配器模式对多个不同接口的匹配非常有效，实际情况中没有必要完全使用类来封装，一个函数也可以搞定。</p><h2>桥接模式</h2><blockquote> 重要程度：⭐⭐⭐⭐<br> 难度：⭐⭐⭐<br> 命名建议：xxxBridge，xxx（具体实现）<br> </blockquote><p>桥接模式的主要目的，<b>是将抽象与实现解耦</b>，使得二者可以独立地进行变化，以应对不断更细的需求。</p><p>其实通俗地来说，就是将所有概念想象成“灵魂——肉体”，凡是能用这个概念代入的，都可以用桥接模式重构。</p><p>比如汽车这个概念和颜色这个概念，可以将颜色作为汽车的成员变量，但是当颜色变得更加复杂时，比如渐变，模糊，图案等属性加入，不得不将其解耦，桥接模式就很重要了。</p><p>我们先定义抽象类Car和Color（Ts的抽象类功能对于实现之一模式非常重要）：</p><div class="highlight"><pre><code class="language-text">abstract class Color {
  color: string
  abstract draw(): void
}

abstract class Car {
  color: Color
  abstract setColor(color: Color): void
}</code></pre></div><p>再定义其实例：</p><div class="highlight"><pre><code class="language-text">class Red extends Color {
  constructor() {
    super()
  }
  draw() {
    this.color = 'red'
  }
}

class Van extends Car {
  constructor() {
    super()
  }
  setColor(color: Color) {
    this.color = color
  }
}</code></pre></div><p>抽象类和实现是解耦的，这时候我们如果要利用所有的类，就需要一个桥接类：</p><div class="highlight"><pre><code class="language-text">class PaintingVanBridge {
  van: Car
  red: Color
  constructor() {
    this.red = new Red()
    this.red.draw()
    this.van = new Van()
    this.van.setColor(this.red)
  }
}</code></pre></div><p>桥接模式会增加大量代码，所以一定要在使用之前对功能模块有一个恰当的评估！</p><h2>装饰模式</h2><blockquote> 重要程度：⭐⭐⭐⭐⭐<br> 难度：⭐<br> 命名建议：xxxDecorator，xxx（具体实现）<br> </blockquote><p>装饰模式是在现有类或对象的基础上，添加一些功能，使得类和对象具有新的表现。</p><p>还是之前的Car和Color的问题，可以直接继承Car，添加颜色，这是一个装饰模式：</p><div class="highlight"><pre><code class="language-text">class Car {
  name: string
  constructor(name: string) {
    this.name = name
  }
}

class Benz extends Car {
  color: string
  constructor(name: string, color: string) {
    super(name)
    this.color = color
  }
}</code></pre></div><p>但是采用继承的方式是静态的，而且会导致在继承复用的过程中耦合，比如Car2继承Car，在创建新的子类时错把Car2作为父类，结果就很容易出错了。</p><p>为了解决这个问题，可以采用Ts的装饰器特性：</p><div class="highlight"><pre><code class="language-text">function colorDecorator&lt;T extends { new(...args: any[]): {} }&gt;(color: string) {
    return function (constructor: T) {
        return class extends constructor {
            name = 'shit'
            color = color
        }
    }
}

@colorDecorator&lt;Car&gt;('red')
class Car {
    name: string
    constructor(name: string) {
        this.name = name
    }
}</code></pre></div><p>装饰器会拦截Car的构造函数，生成一个继承自Car的新的类，这样更加灵活（但是注意这个过程只发生在构造函数阶段）。</p><h2>外观模式</h2><blockquote> 重要程度：⭐⭐⭐⭐⭐<br> 难度：⭐<br> 命名建议：xxx（具体实现）<br> </blockquote><p>简单一句话总结：<b>“封装复杂，接口简单”</b>，为所有的子系统提供一致的接口，比如轮胎，方向盘和车。</p><div class="highlight"><pre><code class="language-text">class Tyre{
    name: string
    constructor(name: string){
        this.name = name
    }
}

class Steering{
    turnRight(){}
    turnLeft(){}
}

interface CarConfig{
    tyreName: string
    ifTurnRight: boolean
}

class Car{
    tyre:Tyre
    steering:Steering
    constructor(carConfig: CarConfig){
        this.tyre = new Tyre(carConfig.name)
        this.steering = new Steering()
        if(carConfig.ifTurnRight){
            this.steering.turnRight
        }
    }
}</code></pre></div><p>可以活用Typescript的接口功能实现这一模式。</p><h2>享元模式</h2><blockquote> 重要程度：⭐<br> 难度：⭐⭐<br> 命名建议：xxx（具体实现）<br> </blockquote><p>享元模式<b>避免重新创建对象</b>，其实只要有缓存对象的意思，并且共用一个对象实例，就是享元模式。</p><p>比如需要对一个Car的实例进行展示（可以搭配工厂模式）：</p><div class="highlight"><pre><code class="language-text">class Car{
    name: string
    color: string
    changeColor(color: string){
        this.color = color
    }
    changeName(name: string){
        this.name = name
    }
}

class CarFactory{
    static car: Car
    static getCar():Car{
        if(CarFactory.car === null){
            CarFactory.car = new Car()
        }
        return CarFactory.car
    }
}

CarFactory.getCar().changeColor('red')</code></pre></div><p>注意，由于是使用的同一个引用，因此会存在修改的问题。</p><h2>代理模式</h2><blockquote> 重要程度：⭐⭐⭐⭐<br> 难度：⭐<br> 命名建议：xxxProxy<br> </blockquote><p>对接口进行一定程度的隐藏，用于封装复杂类。</p><p>比如Car有很多属性，我们只需要一个简单的版本：</p><div class="highlight"><pre><code class="language-text">class Car{
    a: number = 1
    b: number = 2
    c: number = 3
    d: number = 4
    name: string = 'name'
    test(){
        console.log('this is test')
    }
}

class CarProxy{
    private car: Car
    name: number
    constructor(){
        if(this.car === null){
            this.car = new Car
        }
        this.name = this.car.name
    }
    test(){
        this.car.test()
    }
}</code></pre></div><hr><h2><b>行为型模式</b></h2><p>行为型模式一共有5种：命令，中介者，观察者，状态，策略</p><h2><b>命令模式</b></h2><blockquote>重要程度：⭐⭐⭐⭐⭐<br>难度：⭐⭐<br>命名建议：xxxCommand</blockquote><p>命令模式的主要目的是让<b>请求者和响应者解耦</b>，并集中管理。</p><p>比如大家常用的请求，其实可以这样封装：</p><div class="highlight"><pre><code class="language-text">function requestCommand(command: string){
    let method = 'get'
    let queryString = ''
    let data = null
    let url = ''
    const commandArr = command.split(' ')
    url = commandArr.find(el=&gt;el.indexOf('http'))
    const methods = commandArr.filter(el=&gt;el[0]==='-')
    methods[0].replace('-','')
    method = methods[0]
    const query = commandArr.filter(el=&gt;el.indexOf('='))
    if(query.length &gt; 0){
        queryString = '?'
        query.forEach(el=&gt;{
            queryString += el + '&amp;'
        })
    }
    const dataQuery = commandArr.filter(el=&gt;el[0]==='{')
    // 对json的判断还不够细致
    data = JSON.parse(dataQuery)
    if(method === 'get' || method === 'delete'){
        return axios[method](url+query)
    }
    return axios[method](url+query,data)
}
​
requestCommand('--get https://www.baidu.com name=1 test=2')
requestCommand('--post https://www.baidu.com {"name"=1,"test":2}')
​</code></pre></div><p>注意命令模式需要提供详尽的文档，并且尽可能集中管理。</p><h2><b>中介模式</b></h2><blockquote>重要程度：⭐⭐⭐⭐⭐<br>难度：⭐⭐⭐⭐<br>命名建议：xxxCotroller，xxxMiddleWare，xxx(具体实现)</blockquote><p>全权负责两个模块之间的通讯，比如<b>MVC，MVVM</b>就是非常典型的中介模式。</p><p>中介模式，桥接模式，代理模式的区别是：</p><p><b>代理模式一对一，只能代理特定类和对象，是对其的扩展或是约束。</b></p><p><b>桥接模式一对多，是对类或对象成员或属性的扩展。</b></p><p><b>中介模式多对多，全权承包所有两个概念间的关系。</b></p><p>比如4s店，车，和买家之间的关系：</p><div class="highlight"><pre><code class="language-text">class Car{
    name: string = 'Benz'
}
​
class Buyer{
    name: string = 'Sam'    
    buy(car: Car){
        console.log(`${this.name}购买了${car.name}`)
    }  
}
​
class FourSShop{
    constructor(){
        const benz = new Car()
        const sam = new Buyer()
        sam.buy(benz)
    }
}</code></pre></div><p>可以想象中介模式是一个立体的概念，可以理解成是两个概念发生关系的地点。</p><h2><b>观察者模式</b></h2><blockquote>重要程度：⭐⭐⭐⭐⭐<br>难度：⭐⭐⭐<br>命名建议：xxxObserver，xxxEventHandler</blockquote><p>观察者模式的目的是为了<b>“检测变更”</b>，既然要检测变更，自然需要记录之前的信息：</p><div class="highlight"><pre><code class="language-text">class Observer{
    states: string[] = []
    update(state: string){
        this.states.push(state)
    }
}
​
class People{
    state: string = ''
    observer: Observer
    // 可以用getter setter优化
    setState(newState: string){
        if(this.state !== newState){
            this.state = newState
            this.notify(this.state)
        }
    }
    notify(state: string){
        if(this.observer !== null){
            this.observer.update(state)
        }
    }
    setObserver(observer: Observer){
        this.observer = observer
    }
}
​
const observer = new Observer()
const people = new People().serObserver(observer)
​
people.setState('shit')
console.log(observer.state)</code></pre></div><p>可以把观察者模式看成是<b>“记录事件”</b>，这对于理解观察者模式和状态模式区别很有帮助。</p><p>实际上前端很多事件处理，就是基于观察者模式的，在上例中的update中的state，就是事件名称，js的事件循环会轮流处理states的状态变化。</p><h2><b>状态模式</b></h2><blockquote>重要程度：⭐⭐⭐⭐⭐<br>难度：⭐⭐⭐<br>命名建议：xxxState</blockquote><p>与观察者模式相对，表示的是<b>“记录状态”</b>，只要状态变更，表现即不同，这是设计数据驱动的基础。</p><div class="highlight"><pre><code class="language-text">class State{
    tmp: string
    set store(state: string){
        if(this.tmp !== state){
            // do something
            this.tmp = state
        }
    }
    get store(): string{
        return this.tmp
    }
}
​
class People{
    state: State
    constructor(state: State){
        this.state = state
    }
}
​
const state = new State()
const people = new People(state)
​
state.store = 1
console.log(people.state.store)
​</code></pre></div><p>当然，如果一个数据接口既能记录事件，又能记录状态，可以么？</p><p><b>这就是传说中的响应式数据流</b>，也就是大家平时使用的ReactiveX。</p><h2><b>策略模式</b></h2><blockquote>重要程度：⭐⭐⭐<br>难度：⭐⭐⭐⭐<br>命名建议：xxxStratege</blockquote><p>策略模式表示动态地修改行为，而行为有时候是一系列方法和对象的组合，与命令模式的区别也在这里。</p><p>比如从中国到罗马，可以如此封装：</p><div class="highlight"><pre><code class="language-text">class Location{
    position: string
    constructor(poosition: string){
        this.position = position
    }
}
​
class Stratege{
    locations: Location [] = []
    constructor(...locations){
        this.locations = locations
        console.log('路线经过了')
        this.locations.forEach(el=&gt;{
            console.log(el.position+',')
        })
    }
}
​
class Move{
    start: Location
    end: Location
    stratege: Stratege
    
    constructor(){
        this.start = new Location('1 1')
        this.end = new Location('0 0')
        const sea = new Location('0 1')
        const land = new Location('1 0')
        this.stratege = new Stratege(this.start,sea,this.end)
    }
}</code></pre></div><p class="ztext-empty-paragraph"><br></p><hr><p class="ztext-empty-paragraph"><br></p><p>设计模式根植于面向对象思想，也就是任何实现都要区分概念（类）和实例（对象），也就是要分清楚白马和马，这样才能竟可能减轻扩展和团队协作的负担。</p><p>但是任何东西有利就有弊，扬长避短才是我们应该在意的方向。</p></div></div><div class="ContentItem-time">编辑于 2018-08-30</div><div class="Post-topicsAndReviewer"><div class="TopicList Post-Topics"><div class="Tag Topic" data-za-detail-view-path-module="TopicItem" data-za-extra-module="{&quot;card&quot;:{&quot;content&quot;:{&quot;type&quot;:&quot;Topic&quot;,&quot;token&quot;:&quot;19552521&quot;}}}"><span class="Tag-content"><a class="TopicLink" href="https://www.zhihu.com/topic/19552521" target="_blank"><div class="Popover"><div id="Popover3-toggle" aria-haspopup="true" aria-expanded="false" aria-owns="Popover3-content">JavaScript</div></div></a></span></div><div class="Tag Topic" data-za-detail-view-path-module="TopicItem" data-za-extra-module="{&quot;card&quot;:{&quot;content&quot;:{&quot;type&quot;:&quot;Topic&quot;,&quot;token&quot;:&quot;19766226&quot;}}}"><span class="Tag-content"><a class="TopicLink" href="https://www.zhihu.com/topic/19766226" target="_blank"><div class="Popover"><div id="Popover4-toggle" aria-haspopup="true" aria-expanded="false" aria-owns="Popover4-content">TypeScript</div></div></a></span></div><div class="Tag Topic" data-za-detail-view-path-module="TopicItem" data-za-extra-module="{&quot;card&quot;:{&quot;content&quot;:{&quot;type&quot;:&quot;Topic&quot;,&quot;token&quot;:&quot;20015467&quot;}}}"><span class="Tag-content"><a class="TopicLink" href="https://www.zhihu.com/topic/20015467" target="_blank"><div class="Popover"><div id="Popover5-toggle" aria-haspopup="true" aria-expanded="false" aria-owns="Popover5-content">Angular​</div></div></a></span></div></div></div><div><div class="Sticky RichContent-actions is-fixed is-bottom" style="width: 690px; bottom: 0px; left: 495px;"><div class="ContentItem-actions" data-za-detail-view-path-module="BottomBar" data-za-extra-module="{&quot;card&quot;:{&quot;content&quot;:{&quot;type&quot;:&quot;Post&quot;,&quot;id&quot;:&quot;43283016&quot;}}}"><span><button aria-label="赞同 401 " type="button" class="Button VoteButton VoteButton--up"><span style="display:inline-flex;align-items:center">​<svg class="Zi Zi--TriangleUp VoteButton-TriangleUp" fill="currentColor" viewBox="0 0 24 24" width="10" height="10"><path d="M2 18.242c0-.326.088-.532.237-.896l7.98-13.203C10.572 3.57 11.086 3 12 3c.915 0 1.429.571 1.784 1.143l7.98 13.203c.15.364.236.57.236.896 0 1.386-.875 1.9-1.955 1.9H3.955c-1.08 0-1.955-.517-1.955-1.9z" fill-rule="evenodd"></path></svg></span>赞同 401</button><button aria-label="反对" type="button" class="Button VoteButton VoteButton--down"><span style="display:inline-flex;align-items:center">​<svg class="Zi Zi--TriangleDown" fill="currentColor" viewBox="0 0 24 24" width="10" height="10"><path d="M20.044 3H3.956C2.876 3 2 3.517 2 4.9c0 .326.087.533.236.896L10.216 19c.355.571.87 1.143 1.784 1.143s1.429-.572 1.784-1.143l7.98-13.204c.149-.363.236-.57.236-.896 0-1.386-.876-1.9-1.956-1.9z" fill-rule="evenodd"></path></svg></span></button></span><button type="button" class="Button BottomActions-CommentBtn Button--plain Button--withIcon Button--withLabel"><span style="display:inline-flex;align-items:center">​<svg class="Zi Zi--Comment Button-zi" fill="currentColor" viewBox="0 0 24 24" width="1.2em" height="1.2em"><path d="M10.241 19.313a.97.97 0 0 0-.77.2 7.908 7.908 0 0 1-3.772 1.482.409.409 0 0 1-.38-.637 5.825 5.825 0 0 0 1.11-2.237.605.605 0 0 0-.227-.59A7.935 7.935 0 0 1 3 11.25C3 6.7 7.03 3 12 3s9 3.7 9 8.25-4.373 9.108-10.759 8.063z" fill-rule="evenodd"></path></svg></span>39 条评论</button><div class="Popover ShareMenu"><div class="ShareMenu-toggler" id="Popover6-toggle" aria-haspopup="true" aria-expanded="false" aria-owns="Popover6-content"><button type="button" class="Button Button--plain Button--withIcon Button--withLabel"><span style="display:inline-flex;align-items:center">​<svg class="Zi Zi--Share Button-zi" fill="currentColor" viewBox="0 0 24 24" width="1.2em" height="1.2em"><path d="M2.931 7.89c-1.067.24-1.275 1.669-.318 2.207l5.277 2.908 8.168-4.776c.25-.127.477.198.273.39L9.05 14.66l.927 5.953c.18 1.084 1.593 1.376 2.182.456l9.644-15.242c.584-.892-.212-2.029-1.234-1.796L2.93 7.89z" fill-rule="evenodd"></path></svg></span>分享</button></div></div><button type="button" class="Button ContentItem-action Button--plain Button--withIcon Button--withLabel"><span style="display:inline-flex;align-items:center">​<svg class="Zi Zi--Star Button-zi" fill="currentColor" viewBox="0 0 24 24" width="1.2em" height="1.2em"><path d="M5.515 19.64l.918-5.355-3.89-3.792c-.926-.902-.639-1.784.64-1.97L8.56 7.74l2.404-4.871c.572-1.16 1.5-1.16 2.072 0L15.44 7.74l5.377.782c1.28.186 1.566 1.068.64 1.97l-3.89 3.793.918 5.354c.219 1.274-.532 1.82-1.676 1.218L12 18.33l-4.808 2.528c-1.145.602-1.896.056-1.677-1.218z" fill-rule="evenodd"></path></svg></span>收藏</button><div class="Post-ActionMenuButton"><div class="Popover"><div id="Popover7-toggle" aria-haspopup="true" aria-expanded="false" aria-owns="Popover7-content"><button type="button" class="Button Button--plain Button--withIcon Button--iconOnly"><span style="display:inline-flex;align-items:center">​<svg class="Zi Zi--Dots Button-zi" fill="currentColor" viewBox="0 0 24 24" width="1.2em" height="1.2em"><path d="M5 14a2 2 0 1 1 0-4 2 2 0 0 1 0 4zm7 0a2 2 0 1 1 0-4 2 2 0 0 1 0 4zm7 0a2 2 0 1 1 0-4 2 2 0 0 1 0 4z" fill-rule="evenodd"></path></svg></span></button></div></div></div></div><div class="Post-SideActions" style="opacity: 1;"><button class="like"><div class="Post-SideActions-icon"><svg class="Zi Zi--TriangleUp Post-SideActions-upIcon" fill="currentColor" viewBox="0 0 24 24" width="16" height="16"><path d="M2 18.242c0-.326.088-.532.237-.896l7.98-13.203C10.572 3.57 11.086 3 12 3c.915 0 1.429.571 1.784 1.143l7.98 13.203c.15.364.236.57.236.896 0 1.386-.875 1.9-1.955 1.9H3.955c-1.08 0-1.955-.517-1.955-1.9z" fill-rule="evenodd"></path></svg></div><div class="likeCount"><div class="likeCount-inner" data-previous="已赞同 402">赞同 401</div></div></button><div class="Popover ShareMenu"><div class="ShareMenu-toggler" id="Popover29-toggle" aria-haspopup="true" aria-expanded="false" aria-owns="Popover29-content"><button><div class="Post-SideActions-icon"><span style="display: inline-flex; align-items: center;">​<svg class="Zi Zi--Share" fill="currentColor" viewBox="0 0 24 24" width="20" height="20"><path d="M2.931 7.89c-1.067.24-1.275 1.669-.318 2.207l5.277 2.908 8.168-4.776c.25-.127.477.198.273.39L9.05 14.66l.927 5.953c.18 1.084 1.593 1.376 2.182.456l9.644-15.242c.584-.892-.212-2.029-1.234-1.796L2.93 7.89z" fill-rule="evenodd"></path></svg></span></div>分享</button></div></div></div></div><div class="Sticky--holder" style="position: static; inset: auto auto 0px 0px; display: block; float: none; margin: 0px 0px 10px; height: 54px;"></div></div></article><div class="Post-Sub Post-NormalSub"><div class="PostIndex-Contributions" data-za-detail-view-path-module="ColumnList" data-za-detail-view-path-module_name="文章被以下专栏收录" data-za-extra-module="{}"><h3 class="BlockTitle">文章被以下专栏收录</h3><ul><div class="ContentItem Column-ColumnItem"><div class="ContentItem-main"><div class="ContentItem-image"><a class="ColumnLink" href="https://www.zhihu.com/column/plightfield"><div class="Popover"><div id="Popover8-toggle" aria-haspopup="true" aria-expanded="false" aria-owns="Popover8-content"><img class="Avatar Avatar--medium Avatar--round" width="40" height="40" src="./浅析Typescript设计模式 - 知乎_files/v2-21072a9b372fae04658a4224cc498707_xs.jpg" srcset="https://pic2.zhimg.com/v2-21072a9b372fae04658a4224cc498707_l.jpg 2x" alt="前端备忘录"></div></div></a></div><div class="ContentItem-head"><h2 class="ContentItem-title"><a class="ColumnLink ColumnItem-Title" href="https://www.zhihu.com/column/plightfield"><div class="Popover"><div id="Popover9-toggle" aria-haspopup="true" aria-expanded="false" aria-owns="Popover9-content">前端备忘录</div></div></a></h2><div class="ContentItem-meta">世间洞明皆学问，打破固有的工作模式，追求更高的效率和更优雅的设计！</div></div><div class="ContentItem-extra"><a href="https://www.zhihu.com/column/plightfield" type="button" class="Button">进入专栏</a></div></div></div></ul></div><div class="Recommendations-Main" style="width: 1680px;"><h3 class="BlockTitle Recommendations-BlockTitle">推荐阅读</h3><ul class="Recommendations-List"><button class="PagingButton PagingButton-Previous" disabled="" data-za-detail-view-path-module="Unknown" data-za-detail-view-path-module_name="推荐阅读" data-za-extra-module="{}"><svg class="Zi Zi--ArrowLeft" fill="#d3d3d3" viewBox="0 0 24 24" width="40" height="40"><path d="M14.782 16.78a.737.737 0 0 1-1.052 0L9.218 12.53a.758.758 0 0 1 0-1.063L13.73 7.22a.737.737 0 0 1 1.052 0c.29.294.29.77.001 1.063L11 12l3.782 3.716c.29.294.29.77 0 1.063z" fill-rule="evenodd"></path></svg></button><a href="https://zhuanlan.zhihu.com/p/34223095" class="PostItem"><div><img src="./浅析Typescript设计模式 - 知乎_files/v2-a550bfd7a1b632ffef2b6f286d33c5e4_250x0.jpg" srcset="https://pic4.zhimg.com/v2-a550bfd7a1b632ffef2b6f286d33c5e4_qhd.jpg 2x" class="PostItem-TitleImage" alt="TypeScript 实践分享"><h1 class="PostItem-Title">TypeScript 实践分享</h1><div class="PostItem-Footer"><span>长佑</span><span class="PostItem-FooterTitle">发表于数据体验技...</span></div></div></a><a href="https://zhuanlan.zhihu.com/p/127208760" class="PostItem"><div><img src="./浅析Typescript设计模式 - 知乎_files/v2-288a87cd8ca0b18865a0c66ca55b0149_250x0.jpg" srcset="https://pic1.zhimg.com/v2-288a87cd8ca0b18865a0c66ca55b0149_qhd.jpg 2x" class="PostItem-TitleImage" alt="先别用 TypeScript了！"><h1 class="PostItem-Title">先别用 TypeScript了！</h1><div class="PostItem-Footer"><span>读芯术</span><span class="PostItem-FooterTitle"></span></div></div></a><a href="https://zhuanlan.zhihu.com/p/103209639" class="PostItem"><div><h1 class="PostItem-Title">TypeScript 高级技巧</h1><p class="PostItem-Summary">用了一段时间的 typescript 之后，深感中大型项目中 typescript 的必要性，它能够提前在编译期避免许多 bug，如很恶心的拼写问题。而越来越多的 package 也开始使用 ts，学习 ts 已是势在必…</p><div class="PostItem-Footer"><span>追逐者</span><span class="PostItem-FooterTitle"></span></div></div></a><a href="https://zhuanlan.zhihu.com/p/65764702" class="PostItem"><div><img src="./浅析Typescript设计模式 - 知乎_files/v2-259ff76f207159b6b1d223ab84bdd5fa_250x0.jpg" srcset="https://pic1.zhimg.com/v2-259ff76f207159b6b1d223ab84bdd5fa_qhd.jpg 2x" class="PostItem-TitleImage" alt="理解 TypeScript 装饰器（为什么 Angular 不需要 Hooks）"><h1 class="PostItem-Title">理解 TypeScript 装饰器（为什么 Angular 不需要 Hooks）</h1><div class="PostItem-Footer"><span>Wendell</span><span class="PostItem-FooterTitle"></span></div></div></a><button class="PagingButton PagingButton-Next" data-za-detail-view-path-module="Unknown" data-za-detail-view-path-module_name="推荐阅读" data-za-extra-module="{}"><svg class="Zi Zi--ArrowRight" fill="#d3d3d3" viewBox="0 0 24 24" width="40" height="40"><path d="M9.218 16.78a.737.737 0 0 0 1.052 0l4.512-4.249a.758.758 0 0 0 0-1.063L10.27 7.22a.737.737 0 0 0-1.052 0 .759.759 0 0 0-.001 1.063L13 12l-3.782 3.716a.758.758 0 0 0 0 1.063z" fill-rule="evenodd"></path></svg></button></ul></div><div class="Comments-container" data-za-detail-view-path-module="CommentList" data-za-extra-module="{}"><div class="CommentsV2 CommentsV2--withEditor CommentsV2-withPagination"><div class="Topbar CommentTopbar"><div class="Topbar-title"><h2 class="CommentTopbar-title">39 条评论</h2></div><div class="Topbar-options"><button type="button" class="Button Button--plain Button--withIcon Button--withLabel"><span style="display: inline-flex; align-items: center;">​<svg class="Zi Zi--Switch Button-zi" fill="currentColor" viewBox="0 0 24 24" width="1.2em" height="1.2em"><path d="M13.004 7V4.232c0-.405.35-.733.781-.733.183 0 .36.06.501.17l6.437 5.033c.331.26.376.722.1 1.033a.803.803 0 0 1-.601.264H2.75a.75.75 0 0 1-.75-.75V7.75A.75.75 0 0 1 2.75 7h10.254zm-1.997 9.999v2.768c0 .405-.35.733-.782.733a.814.814 0 0 1-.5-.17l-6.437-5.034a.702.702 0 0 1-.1-1.032.803.803 0 0 1 .6-.264H21.25a.75.75 0 0 1 .75.75v1.499a.75.75 0 0 1-.75.75H11.007z" fill-rule="evenodd"></path></svg></span>切换为时间排序</button></div></div><div><div class="CommentsV2-footer CommentEditorV2--normal"><div class="CommentEditorV2-inputWrap"><div class="InputLike CommentEditorV2-input Editable"><div class="Dropzone Editable-content RichText RichText--editable RichText--clearBoth ztext" style="min-height: 198px;"><div class="DraftEditor-root"><div class="public-DraftEditorPlaceholder-root"><div class="public-DraftEditorPlaceholder-inner" id="placeholder-e1rvf" style="white-space: pre-wrap;">写下你的评论...</div></div><div class="DraftEditor-editorContainer"><div aria-describedby="placeholder-e1rvf" class="notranslate public-DraftEditor-content" contenteditable="true" role="textbox" spellcheck="true" tabindex="0" style="outline: none; user-select: text; white-space: pre-wrap; overflow-wrap: break-word;"><div data-contents="true"><div class="Editable-unstyled" data-block="true" data-editor="e1rvf" data-offset-key="cm3oj-0-0"><div data-offset-key="cm3oj-0-0" class="public-DraftStyleDefault-block public-DraftStyleDefault-ltr"><span data-offset-key="cm3oj-0-0"><br data-text="true"></span></div></div></div></div></div></div></div><input multiple="" type="file" accept="image/jpg,image/jpeg,image/png,image/gif" style="display: none;"><div></div></div><div class="CommentEditorV2-inputUpload"><div class="CommentEditorV2-popoverWrap"><div class="Popover CommentEditorV2-inputUpLoad-Icon"><button aria-label="插入表情" data-tooltip="插入表情" data-tooltip-position="bottom" data-tooltip-will-hide-on-click="true" id="Popover10-toggle" aria-haspopup="true" aria-expanded="false" aria-owns="Popover10-content" type="button" class="Button Editable-control Button--plain"><svg class="Zi Zi--Emotion" fill="currentColor" viewBox="0 0 24 24" width="24" height="24"><path d="M7.523 13.5h8.954c-.228 2.47-2.145 4-4.477 4-2.332 0-4.25-1.53-4.477-4zM12 21a9 9 0 1 1 0-18 9 9 0 0 1 0 18zm0-1.5a7.5 7.5 0 1 0 0-15 7.5 7.5 0 0 0 0 15zm-3-8a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3zm6 0a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3z"></path></svg></button></div></div></div></div><button disabled="" type="button" class="Button CommentEditorV2-singleButton Button--primary Button--blue">发布</button></div></div><div><div class="CommentListV2"><ul class="NestComment"><li class="NestComment--rootCommentNoChild"><div class="CommentItemV2"><div><div class="CommentItemV2-meta"><span class="UserLink CommentItemV2-avatar"><img class="Avatar UserLink-avatar" width="24" height="24" src="./浅析Typescript设计模式 - 知乎_files/da8e974dc_s.jpg" srcset="https://pic4.zhimg.com/da8e974dc_xs.jpg 2x" alt="知乎用户"></span><span class="UserLink">知乎用户</span><span class="CommentItemV2-time">2018-08-29</span></div><div class="CommentItemV2-metaSibling"><div class="CommentRichText CommentItemV2-content"><div class="RichText ztext"><p>继续更新</p></div></div><div class="CommentItemV2-footer"><button type="button" class="Button CommentItemV2-likeBtn Button--plain"><span style="display: inline-flex; align-items: center;">​<svg class="Zi Zi--Like" fill="currentColor" viewBox="0 0 24 24" width="16" height="16" style="margin-right: 5px;"><path d="M14.445 9h5.387s2.997.154 1.95 3.669c-.168.51-2.346 6.911-2.346 6.911s-.763 1.416-2.86 1.416H8.989c-1.498 0-2.005-.896-1.989-2v-7.998c0-.987.336-2.032 1.114-2.639 4.45-3.773 3.436-4.597 4.45-5.83.985-1.13 3.2-.5 3.037 2.362C15.201 7.397 14.445 9 14.445 9zM3 9h2a1 1 0 0 1 1 1v10a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V10a1 1 0 0 1 1-1z" fill-rule="evenodd"></path></svg></span>赞</button><button type="button" class="Button CommentItemV2-hoverBtn Button--plain"><span style="display: inline-flex; align-items: center;">​<svg class="Zi Zi--Reply" fill="currentColor" viewBox="0 0 24 24" width="16" height="16" style="margin-right: 5px;"><path d="M22.959 17.22c-1.686-3.552-5.128-8.062-11.636-8.65-.539-.053-1.376-.436-1.376-1.561V4.678c0-.521-.635-.915-1.116-.521L1.469 10.67a1.506 1.506 0 0 0-.1 2.08s6.99 6.818 7.443 7.114c.453.295 1.136.124 1.135-.501V17a1.525 1.525 0 0 1 1.532-1.466c1.186-.139 7.597-.077 10.33 2.396 0 0 .396.257.536.257.892 0 .614-.967.614-.967z" fill-rule="evenodd"></path></svg></span>回复</button><button type="button" class="Button CommentItemV2-hoverBtn Button--plain"><span style="display: inline-flex; align-items: center;">​<svg class="Zi Zi--Like" fill="currentColor" viewBox="0 0 24 24" width="16" height="16" style="transform: rotate(180deg); margin-right: 5px;"><path d="M14.445 9h5.387s2.997.154 1.95 3.669c-.168.51-2.346 6.911-2.346 6.911s-.763 1.416-2.86 1.416H8.989c-1.498 0-2.005-.896-1.989-2v-7.998c0-.987.336-2.032 1.114-2.639 4.45-3.773 3.436-4.597 4.45-5.83.985-1.13 3.2-.5 3.037 2.362C15.201 7.397 14.445 9 14.445 9zM3 9h2a1 1 0 0 1 1 1v10a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V10a1 1 0 0 1 1-1z" fill-rule="evenodd"></path></svg></span>踩</button><button type="button" class="Button CommentItemV2-hoverBtn Button--plain"><span style="display: inline-flex; align-items: center;">​<svg class="Zi Zi--Report" fill="currentColor" viewBox="0 0 24 24" width="16" height="16" style="margin-right: 5px;"><path d="M19.947 3.129c-.633.136-3.927.639-5.697.385-3.133-.45-4.776-2.54-9.949-.888-.997.413-1.277 1.038-1.277 2.019L3 20.808c0 .3.101.54.304.718a.97.97 0 0 0 .73.304c.275 0 .519-.102.73-.304.202-.179.304-.418.304-.718v-6.58c4.533-1.235 8.047.668 8.562.864 2.343.893 5.542.008 6.774-.657.397-.178.596-.474.596-.887V3.964c0-.599-.42-.972-1.053-.835z" fill-rule="evenodd"></path></svg></span>举报</button></div></div></div></div></li></ul><ul class="NestComment"><li class="NestComment--rootCommentNoChild"><div class="CommentItemV2"><div><div class="CommentItemV2-meta"><span class="UserLink CommentItemV2-avatar"><img class="Avatar UserLink-avatar" width="24" height="24" src="./浅析Typescript设计模式 - 知乎_files/da8e974dc_s.jpg" srcset="https://pic4.zhimg.com/da8e974dc_xs.jpg 2x" alt="知乎用户"></span><span class="UserLink">知乎用户</span><span class="CommentItemV2-time">2018-08-31</span></div><div class="CommentItemV2-metaSibling"><div class="CommentRichText CommentItemV2-content"><div class="RichText ztext"><p>挺好的，</p></div></div><div class="CommentItemV2-footer"><button type="button" class="Button CommentItemV2-likeBtn Button--plain"><span style="display: inline-flex; align-items: center;">​<svg class="Zi Zi--Like" fill="currentColor" viewBox="0 0 24 24" width="16" height="16" style="margin-right: 5px;"><path d="M14.445 9h5.387s2.997.154 1.95 3.669c-.168.51-2.346 6.911-2.346 6.911s-.763 1.416-2.86 1.416H8.989c-1.498 0-2.005-.896-1.989-2v-7.998c0-.987.336-2.032 1.114-2.639 4.45-3.773 3.436-4.597 4.45-5.83.985-1.13 3.2-.5 3.037 2.362C15.201 7.397 14.445 9 14.445 9zM3 9h2a1 1 0 0 1 1 1v10a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V10a1 1 0 0 1 1-1z" fill-rule="evenodd"></path></svg></span>赞</button><button type="button" class="Button CommentItemV2-hoverBtn Button--plain"><span style="display: inline-flex; align-items: center;">​<svg class="Zi Zi--Reply" fill="currentColor" viewBox="0 0 24 24" width="16" height="16" style="margin-right: 5px;"><path d="M22.959 17.22c-1.686-3.552-5.128-8.062-11.636-8.65-.539-.053-1.376-.436-1.376-1.561V4.678c0-.521-.635-.915-1.116-.521L1.469 10.67a1.506 1.506 0 0 0-.1 2.08s6.99 6.818 7.443 7.114c.453.295 1.136.124 1.135-.501V17a1.525 1.525 0 0 1 1.532-1.466c1.186-.139 7.597-.077 10.33 2.396 0 0 .396.257.536.257.892 0 .614-.967.614-.967z" fill-rule="evenodd"></path></svg></span>回复</button><button type="button" class="Button CommentItemV2-hoverBtn Button--plain"><span style="display: inline-flex; align-items: center;">​<svg class="Zi Zi--Like" fill="currentColor" viewBox="0 0 24 24" width="16" height="16" style="transform: rotate(180deg); margin-right: 5px;"><path d="M14.445 9h5.387s2.997.154 1.95 3.669c-.168.51-2.346 6.911-2.346 6.911s-.763 1.416-2.86 1.416H8.989c-1.498 0-2.005-.896-1.989-2v-7.998c0-.987.336-2.032 1.114-2.639 4.45-3.773 3.436-4.597 4.45-5.83.985-1.13 3.2-.5 3.037 2.362C15.201 7.397 14.445 9 14.445 9zM3 9h2a1 1 0 0 1 1 1v10a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V10a1 1 0 0 1 1-1z" fill-rule="evenodd"></path></svg></span>踩</button><button type="button" class="Button CommentItemV2-hoverBtn Button--plain"><span style="display: inline-flex; align-items: center;">​<svg class="Zi Zi--Report" fill="currentColor" viewBox="0 0 24 24" width="16" height="16" style="margin-right: 5px;"><path d="M19.947 3.129c-.633.136-3.927.639-5.697.385-3.133-.45-4.776-2.54-9.949-.888-.997.413-1.277 1.038-1.277 2.019L3 20.808c0 .3.101.54.304.718a.97.97 0 0 0 .73.304c.275 0 .519-.102.73-.304.202-.179.304-.418.304-.718v-6.58c4.533-1.235 8.047.668 8.562.864 2.343.893 5.542.008 6.774-.657.397-.178.596-.474.596-.887V3.964c0-.599-.42-.972-1.053-.835z" fill-rule="evenodd"></path></svg></span>举报</button></div></div></div></div></li></ul><ul class="NestComment"><li class="NestComment--rootComment"><div class="CommentItemV2"><div><div class="CommentItemV2-meta"><span class="UserLink CommentItemV2-avatar"><div class="Popover"><div id="Popover13-toggle" aria-haspopup="true" aria-expanded="false" aria-owns="Popover13-content"><a class="UserLink-link" data-za-detail-view-element_name="User" target="_blank" href="https://www.zhihu.com/people/xiao-zhu-44-93"><img class="Avatar UserLink-avatar" width="24" height="24" src="./浅析Typescript设计模式 - 知乎_files/v2-cff84aca30391f1a135a7919c943f17e_s.jpg" srcset="https://pic4.zhimg.com/v2-cff84aca30391f1a135a7919c943f17e_xs.jpg 2x" alt="johnzhu"></a></div></div></span><span class="UserLink"><a class="UserLink-link" data-za-detail-view-element_name="User" target="_blank" href="https://www.zhihu.com/people/xiao-zhu-44-93">johnzhu</a></span><span class="CommentItemV2-time">2018-08-31</span></div><div class="CommentItemV2-metaSibling"><div class="CommentRichText CommentItemV2-content"><div class="RichText ztext"><p>收藏文章，关注答主，写的真好，继续加油</p></div></div><div class="CommentItemV2-footer"><button type="button" class="Button CommentItemV2-likeBtn Button--plain"><span style="display: inline-flex; align-items: center;">​<svg class="Zi Zi--Like" fill="currentColor" viewBox="0 0 24 24" width="16" height="16" style="margin-right: 5px;"><path d="M14.445 9h5.387s2.997.154 1.95 3.669c-.168.51-2.346 6.911-2.346 6.911s-.763 1.416-2.86 1.416H8.989c-1.498 0-2.005-.896-1.989-2v-7.998c0-.987.336-2.032 1.114-2.639 4.45-3.773 3.436-4.597 4.45-5.83.985-1.13 3.2-.5 3.037 2.362C15.201 7.397 14.445 9 14.445 9zM3 9h2a1 1 0 0 1 1 1v10a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V10a1 1 0 0 1 1-1z" fill-rule="evenodd"></path></svg></span>赞</button><button type="button" class="Button CommentItemV2-hoverBtn Button--plain"><span style="display: inline-flex; align-items: center;">​<svg class="Zi Zi--Reply" fill="currentColor" viewBox="0 0 24 24" width="16" height="16" style="margin-right: 5px;"><path d="M22.959 17.22c-1.686-3.552-5.128-8.062-11.636-8.65-.539-.053-1.376-.436-1.376-1.561V4.678c0-.521-.635-.915-1.116-.521L1.469 10.67a1.506 1.506 0 0 0-.1 2.08s6.99 6.818 7.443 7.114c.453.295 1.136.124 1.135-.501V17a1.525 1.525 0 0 1 1.532-1.466c1.186-.139 7.597-.077 10.33 2.396 0 0 .396.257.536.257.892 0 .614-.967.614-.967z" fill-rule="evenodd"></path></svg></span>回复</button><button type="button" class="Button CommentItemV2-hoverBtn Button--plain"><span style="display: inline-flex; align-items: center;">​<svg class="Zi Zi--Like" fill="currentColor" viewBox="0 0 24 24" width="16" height="16" style="transform: rotate(180deg); margin-right: 5px;"><path d="M14.445 9h5.387s2.997.154 1.95 3.669c-.168.51-2.346 6.911-2.346 6.911s-.763 1.416-2.86 1.416H8.989c-1.498 0-2.005-.896-1.989-2v-7.998c0-.987.336-2.032 1.114-2.639 4.45-3.773 3.436-4.597 4.45-5.83.985-1.13 3.2-.5 3.037 2.362C15.201 7.397 14.445 9 14.445 9zM3 9h2a1 1 0 0 1 1 1v10a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V10a1 1 0 0 1 1-1z" fill-rule="evenodd"></path></svg></span>踩</button><button type="button" class="Button CommentItemV2-hoverBtn Button--plain"><span style="display: inline-flex; align-items: center;">​<svg class="Zi Zi--Report" fill="currentColor" viewBox="0 0 24 24" width="16" height="16" style="margin-right: 5px;"><path d="M19.947 3.129c-.633.136-3.927.639-5.697.385-3.133-.45-4.776-2.54-9.949-.888-.997.413-1.277 1.038-1.277 2.019L3 20.808c0 .3.101.54.304.718a.97.97 0 0 0 .73.304c.275 0 .519-.102.73-.304.202-.179.304-.418.304-.718v-6.58c4.533-1.235 8.047.668 8.562.864 2.343.893 5.542.008 6.774-.657.397-.178.596-.474.596-.887V3.964c0-.599-.42-.972-1.053-.835z" fill-rule="evenodd"></path></svg></span>举报</button></div></div></div></div></li><li class="NestComment--child"><div class="CommentItemV2"><div><div class="CommentItemV2-meta"><span class="UserLink CommentItemV2-avatar"><div class="Popover"><div id="Popover14-toggle" aria-haspopup="true" aria-expanded="false" aria-owns="Popover14-content"><a class="UserLink-link" data-za-detail-view-element_name="User" target="_blank" href="https://www.zhihu.com/people/du-shuai-27-14"><img class="Avatar UserLink-avatar" width="24" height="24" src="./浅析Typescript设计模式 - 知乎_files/v2-24beed3d4509902870594de071dc9139_s.jpg" srcset="https://pic3.zhimg.com/v2-24beed3d4509902870594de071dc9139_xs.jpg 2x" alt="江湖术士"></a></div></div></span><span class="UserLink"><a class="UserLink-link" data-za-detail-view-element_name="User" target="_blank" href="https://www.zhihu.com/people/du-shuai-27-14">江湖术士</a></span><span class="CommentItemV2-roleInfo"> (作者) </span><span class="CommentItemV2-reply">回复</span><span class="UserLink"><a class="UserLink-link" data-za-detail-view-element_name="User" target="_blank" href="https://www.zhihu.com/people/xiao-zhu-44-93">johnzhu</a></span><span class="CommentItemV2-time">2018-08-31</span></div><div class="CommentItemV2-metaSibling"><div class="CommentRichText CommentItemV2-content"><div class="RichText ztext"><p>谢谢</p></div></div><div class="CommentItemV2-footer"><button type="button" class="Button CommentItemV2-likeBtn Button--plain"><span style="display: inline-flex; align-items: center;">​<svg class="Zi Zi--Like" fill="currentColor" viewBox="0 0 24 24" width="16" height="16" style="margin-right: 5px;"><path d="M14.445 9h5.387s2.997.154 1.95 3.669c-.168.51-2.346 6.911-2.346 6.911s-.763 1.416-2.86 1.416H8.989c-1.498 0-2.005-.896-1.989-2v-7.998c0-.987.336-2.032 1.114-2.639 4.45-3.773 3.436-4.597 4.45-5.83.985-1.13 3.2-.5 3.037 2.362C15.201 7.397 14.445 9 14.445 9zM3 9h2a1 1 0 0 1 1 1v10a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V10a1 1 0 0 1 1-1z" fill-rule="evenodd"></path></svg></span>赞</button><button type="button" class="Button CommentItemV2-hoverBtn Button--plain"><span style="display: inline-flex; align-items: center;">​<svg class="Zi Zi--Reply" fill="currentColor" viewBox="0 0 24 24" width="16" height="16" style="margin-right: 5px;"><path d="M22.959 17.22c-1.686-3.552-5.128-8.062-11.636-8.65-.539-.053-1.376-.436-1.376-1.561V4.678c0-.521-.635-.915-1.116-.521L1.469 10.67a1.506 1.506 0 0 0-.1 2.08s6.99 6.818 7.443 7.114c.453.295 1.136.124 1.135-.501V17a1.525 1.525 0 0 1 1.532-1.466c1.186-.139 7.597-.077 10.33 2.396 0 0 .396.257.536.257.892 0 .614-.967.614-.967z" fill-rule="evenodd"></path></svg></span>回复</button><button type="button" class="Button CommentItemV2-hoverBtn Button--plain"><span style="display: inline-flex; align-items: center;">​<svg class="Zi Zi--Like" fill="currentColor" viewBox="0 0 24 24" width="16" height="16" style="transform: rotate(180deg); margin-right: 5px;"><path d="M14.445 9h5.387s2.997.154 1.95 3.669c-.168.51-2.346 6.911-2.346 6.911s-.763 1.416-2.86 1.416H8.989c-1.498 0-2.005-.896-1.989-2v-7.998c0-.987.336-2.032 1.114-2.639 4.45-3.773 3.436-4.597 4.45-5.83.985-1.13 3.2-.5 3.037 2.362C15.201 7.397 14.445 9 14.445 9zM3 9h2a1 1 0 0 1 1 1v10a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V10a1 1 0 0 1 1-1z" fill-rule="evenodd"></path></svg></span>踩</button><button type="button" class="Button CommentItemV2-hoverBtn Button--plain"><span style="display: inline-flex; align-items: center;">​<svg class="Zi Zi--Report" fill="currentColor" viewBox="0 0 24 24" width="16" height="16" style="margin-right: 5px;"><path d="M19.947 3.129c-.633.136-3.927.639-5.697.385-3.133-.45-4.776-2.54-9.949-.888-.997.413-1.277 1.038-1.277 2.019L3 20.808c0 .3.101.54.304.718a.97.97 0 0 0 .73.304c.275 0 .519-.102.73-.304.202-.179.304-.418.304-.718v-6.58c4.533-1.235 8.047.668 8.562.864 2.343.893 5.542.008 6.774-.657.397-.178.596-.474.596-.887V3.964c0-.599-.42-.972-1.053-.835z" fill-rule="evenodd"></path></svg></span>举报</button></div></div></div></div></li></ul><ul class="NestComment"><li class="NestComment--rootCommentNoChild"><div class="CommentItemV2"><div><div class="CommentItemV2-meta"><span class="UserLink CommentItemV2-avatar"><div class="Popover"><div id="Popover15-toggle" aria-haspopup="true" aria-expanded="false" aria-owns="Popover15-content"><a class="UserLink-link" data-za-detail-view-element_name="User" target="_blank" href="https://www.zhihu.com/people/xiao-zhu-44-93"><img class="Avatar UserLink-avatar" width="24" height="24" src="./浅析Typescript设计模式 - 知乎_files/v2-cff84aca30391f1a135a7919c943f17e_s.jpg" srcset="https://pic4.zhimg.com/v2-cff84aca30391f1a135a7919c943f17e_xs.jpg 2x" alt="johnzhu"></a></div></div></span><span class="UserLink"><a class="UserLink-link" data-za-detail-view-element_name="User" target="_blank" href="https://www.zhihu.com/people/xiao-zhu-44-93">johnzhu</a></span><span class="CommentItemV2-time">2018-08-31</span></div><div class="CommentItemV2-metaSibling"><div class="CommentRichText CommentItemV2-content"><div class="RichText ztext"><p>收藏文章，关注答主，写的真好，继续加油</p></div></div><div class="CommentItemV2-footer"><button type="button" class="Button CommentItemV2-likeBtn Button--plain"><span style="display: inline-flex; align-items: center;">​<svg class="Zi Zi--Like" fill="currentColor" viewBox="0 0 24 24" width="16" height="16" style="margin-right: 5px;"><path d="M14.445 9h5.387s2.997.154 1.95 3.669c-.168.51-2.346 6.911-2.346 6.911s-.763 1.416-2.86 1.416H8.989c-1.498 0-2.005-.896-1.989-2v-7.998c0-.987.336-2.032 1.114-2.639 4.45-3.773 3.436-4.597 4.45-5.83.985-1.13 3.2-.5 3.037 2.362C15.201 7.397 14.445 9 14.445 9zM3 9h2a1 1 0 0 1 1 1v10a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V10a1 1 0 0 1 1-1z" fill-rule="evenodd"></path></svg></span>赞</button><button type="button" class="Button CommentItemV2-hoverBtn Button--plain"><span style="display: inline-flex; align-items: center;">​<svg class="Zi Zi--Reply" fill="currentColor" viewBox="0 0 24 24" width="16" height="16" style="margin-right: 5px;"><path d="M22.959 17.22c-1.686-3.552-5.128-8.062-11.636-8.65-.539-.053-1.376-.436-1.376-1.561V4.678c0-.521-.635-.915-1.116-.521L1.469 10.67a1.506 1.506 0 0 0-.1 2.08s6.99 6.818 7.443 7.114c.453.295 1.136.124 1.135-.501V17a1.525 1.525 0 0 1 1.532-1.466c1.186-.139 7.597-.077 10.33 2.396 0 0 .396.257.536.257.892 0 .614-.967.614-.967z" fill-rule="evenodd"></path></svg></span>回复</button><button type="button" class="Button CommentItemV2-hoverBtn Button--plain"><span style="display: inline-flex; align-items: center;">​<svg class="Zi Zi--Like" fill="currentColor" viewBox="0 0 24 24" width="16" height="16" style="transform: rotate(180deg); margin-right: 5px;"><path d="M14.445 9h5.387s2.997.154 1.95 3.669c-.168.51-2.346 6.911-2.346 6.911s-.763 1.416-2.86 1.416H8.989c-1.498 0-2.005-.896-1.989-2v-7.998c0-.987.336-2.032 1.114-2.639 4.45-3.773 3.436-4.597 4.45-5.83.985-1.13 3.2-.5 3.037 2.362C15.201 7.397 14.445 9 14.445 9zM3 9h2a1 1 0 0 1 1 1v10a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V10a1 1 0 0 1 1-1z" fill-rule="evenodd"></path></svg></span>踩</button><button type="button" class="Button CommentItemV2-hoverBtn Button--plain"><span style="display: inline-flex; align-items: center;">​<svg class="Zi Zi--Report" fill="currentColor" viewBox="0 0 24 24" width="16" height="16" style="margin-right: 5px;"><path d="M19.947 3.129c-.633.136-3.927.639-5.697.385-3.133-.45-4.776-2.54-9.949-.888-.997.413-1.277 1.038-1.277 2.019L3 20.808c0 .3.101.54.304.718a.97.97 0 0 0 .73.304c.275 0 .519-.102.73-.304.202-.179.304-.418.304-.718v-6.58c4.533-1.235 8.047.668 8.562.864 2.343.893 5.542.008 6.774-.657.397-.178.596-.474.596-.887V3.964c0-.599-.42-.972-1.053-.835z" fill-rule="evenodd"></path></svg></span>举报</button></div></div></div></div></li></ul><ul class="NestComment"><li class="NestComment--rootCommentNoChild"><div class="CommentItemV2"><div><div class="CommentItemV2-meta"><span class="UserLink CommentItemV2-avatar"><img class="Avatar UserLink-avatar" width="24" height="24" src="./浅析Typescript设计模式 - 知乎_files/da8e974dc_s.jpg" srcset="https://pic4.zhimg.com/da8e974dc_xs.jpg 2x" alt="知乎用户"></span><span class="UserLink">知乎用户</span><span class="CommentItemV2-time">2018-09-02</span></div><div class="CommentItemV2-metaSibling"><div class="CommentRichText CommentItemV2-content"><div class="RichText ztext"><p>对于适配器模式模式的例子不太理解，可以多写点吗？</p></div></div><div class="CommentItemV2-footer"><button type="button" class="Button CommentItemV2-likeBtn Button--plain"><span style="display: inline-flex; align-items: center;">​<svg class="Zi Zi--Like" fill="currentColor" viewBox="0 0 24 24" width="16" height="16" style="margin-right: 5px;"><path d="M14.445 9h5.387s2.997.154 1.95 3.669c-.168.51-2.346 6.911-2.346 6.911s-.763 1.416-2.86 1.416H8.989c-1.498 0-2.005-.896-1.989-2v-7.998c0-.987.336-2.032 1.114-2.639 4.45-3.773 3.436-4.597 4.45-5.83.985-1.13 3.2-.5 3.037 2.362C15.201 7.397 14.445 9 14.445 9zM3 9h2a1 1 0 0 1 1 1v10a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V10a1 1 0 0 1 1-1z" fill-rule="evenodd"></path></svg></span>赞</button><button type="button" class="Button CommentItemV2-hoverBtn Button--plain"><span style="display: inline-flex; align-items: center;">​<svg class="Zi Zi--Reply" fill="currentColor" viewBox="0 0 24 24" width="16" height="16" style="margin-right: 5px;"><path d="M22.959 17.22c-1.686-3.552-5.128-8.062-11.636-8.65-.539-.053-1.376-.436-1.376-1.561V4.678c0-.521-.635-.915-1.116-.521L1.469 10.67a1.506 1.506 0 0 0-.1 2.08s6.99 6.818 7.443 7.114c.453.295 1.136.124 1.135-.501V17a1.525 1.525 0 0 1 1.532-1.466c1.186-.139 7.597-.077 10.33 2.396 0 0 .396.257.536.257.892 0 .614-.967.614-.967z" fill-rule="evenodd"></path></svg></span>回复</button><button type="button" class="Button CommentItemV2-hoverBtn Button--plain"><span style="display: inline-flex; align-items: center;">​<svg class="Zi Zi--Like" fill="currentColor" viewBox="0 0 24 24" width="16" height="16" style="transform: rotate(180deg); margin-right: 5px;"><path d="M14.445 9h5.387s2.997.154 1.95 3.669c-.168.51-2.346 6.911-2.346 6.911s-.763 1.416-2.86 1.416H8.989c-1.498 0-2.005-.896-1.989-2v-7.998c0-.987.336-2.032 1.114-2.639 4.45-3.773 3.436-4.597 4.45-5.83.985-1.13 3.2-.5 3.037 2.362C15.201 7.397 14.445 9 14.445 9zM3 9h2a1 1 0 0 1 1 1v10a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V10a1 1 0 0 1 1-1z" fill-rule="evenodd"></path></svg></span>踩</button><button type="button" class="Button CommentItemV2-hoverBtn Button--plain"><span style="display: inline-flex; align-items: center;">​<svg class="Zi Zi--Report" fill="currentColor" viewBox="0 0 24 24" width="16" height="16" style="margin-right: 5px;"><path d="M19.947 3.129c-.633.136-3.927.639-5.697.385-3.133-.45-4.776-2.54-9.949-.888-.997.413-1.277 1.038-1.277 2.019L3 20.808c0 .3.101.54.304.718a.97.97 0 0 0 .73.304c.275 0 .519-.102.73-.304.202-.179.304-.418.304-.718v-6.58c4.533-1.235 8.047.668 8.562.864 2.343.893 5.542.008 6.774-.657.397-.178.596-.474.596-.887V3.964c0-.599-.42-.972-1.053-.835z" fill-rule="evenodd"></path></svg></span>举报</button></div></div></div></div></li></ul><ul class="NestComment"><li class="NestComment--rootCommentNoChild"><div class="CommentItemV2"><div><div class="CommentItemV2-meta"><span class="UserLink CommentItemV2-avatar"><div class="Popover"><div id="Popover16-toggle" aria-haspopup="true" aria-expanded="false" aria-owns="Popover16-content"><a class="UserLink-link" data-za-detail-view-element_name="User" target="_blank" href="https://www.zhihu.com/people/mai-ke-si-wei-ka-pei"><img class="Avatar UserLink-avatar" width="24" height="24" src="./浅析Typescript设计模式 - 知乎_files/v2-1964d24c989438d2916ca545b5a17422_s.jpg" srcset="https://pic4.zhimg.com/v2-1964d24c989438d2916ca545b5a17422_xs.jpg 2x" alt="2933.02"></a></div></div></span><span class="UserLink"><a class="UserLink-link" data-za-detail-view-element_name="User" target="_blank" href="https://www.zhihu.com/people/mai-ke-si-wei-ka-pei">2933.02</a></span><span class="CommentItemV2-time">2018-09-02</span></div><div class="CommentItemV2-metaSibling"><div class="CommentRichText CommentItemV2-content"><div class="RichText ztext">面相对象不是必要条件吧</div></div><div class="CommentItemV2-footer"><button type="button" class="Button CommentItemV2-likeBtn Button--plain"><span style="display: inline-flex; align-items: center;">​<svg class="Zi Zi--Like" fill="currentColor" viewBox="0 0 24 24" width="16" height="16" style="margin-right: 5px;"><path d="M14.445 9h5.387s2.997.154 1.95 3.669c-.168.51-2.346 6.911-2.346 6.911s-.763 1.416-2.86 1.416H8.989c-1.498 0-2.005-.896-1.989-2v-7.998c0-.987.336-2.032 1.114-2.639 4.45-3.773 3.436-4.597 4.45-5.83.985-1.13 3.2-.5 3.037 2.362C15.201 7.397 14.445 9 14.445 9zM3 9h2a1 1 0 0 1 1 1v10a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V10a1 1 0 0 1 1-1z" fill-rule="evenodd"></path></svg></span>赞</button><button type="button" class="Button CommentItemV2-hoverBtn Button--plain"><span style="display: inline-flex; align-items: center;">​<svg class="Zi Zi--Reply" fill="currentColor" viewBox="0 0 24 24" width="16" height="16" style="margin-right: 5px;"><path d="M22.959 17.22c-1.686-3.552-5.128-8.062-11.636-8.65-.539-.053-1.376-.436-1.376-1.561V4.678c0-.521-.635-.915-1.116-.521L1.469 10.67a1.506 1.506 0 0 0-.1 2.08s6.99 6.818 7.443 7.114c.453.295 1.136.124 1.135-.501V17a1.525 1.525 0 0 1 1.532-1.466c1.186-.139 7.597-.077 10.33 2.396 0 0 .396.257.536.257.892 0 .614-.967.614-.967z" fill-rule="evenodd"></path></svg></span>回复</button><button type="button" class="Button CommentItemV2-hoverBtn Button--plain"><span style="display: inline-flex; align-items: center;">​<svg class="Zi Zi--Like" fill="currentColor" viewBox="0 0 24 24" width="16" height="16" style="transform: rotate(180deg); margin-right: 5px;"><path d="M14.445 9h5.387s2.997.154 1.95 3.669c-.168.51-2.346 6.911-2.346 6.911s-.763 1.416-2.86 1.416H8.989c-1.498 0-2.005-.896-1.989-2v-7.998c0-.987.336-2.032 1.114-2.639 4.45-3.773 3.436-4.597 4.45-5.83.985-1.13 3.2-.5 3.037 2.362C15.201 7.397 14.445 9 14.445 9zM3 9h2a1 1 0 0 1 1 1v10a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V10a1 1 0 0 1 1-1z" fill-rule="evenodd"></path></svg></span>踩</button><button type="button" class="Button CommentItemV2-hoverBtn Button--plain"><span style="display: inline-flex; align-items: center;">​<svg class="Zi Zi--Report" fill="currentColor" viewBox="0 0 24 24" width="16" height="16" style="margin-right: 5px;"><path d="M19.947 3.129c-.633.136-3.927.639-5.697.385-3.133-.45-4.776-2.54-9.949-.888-.997.413-1.277 1.038-1.277 2.019L3 20.808c0 .3.101.54.304.718a.97.97 0 0 0 .73.304c.275 0 .519-.102.73-.304.202-.179.304-.418.304-.718v-6.58c4.533-1.235 8.047.668 8.562.864 2.343.893 5.542.008 6.774-.657.397-.178.596-.474.596-.887V3.964c0-.599-.42-.972-1.053-.835z" fill-rule="evenodd"></path></svg></span>举报</button></div></div></div></div></li></ul><ul class="NestComment"><li class="NestComment--rootCommentNoChild"><div class="CommentItemV2"><div><div class="CommentItemV2-meta"><span class="UserLink CommentItemV2-avatar"><div class="Popover"><div id="Popover17-toggle" aria-haspopup="true" aria-expanded="false" aria-owns="Popover17-content"><a class="UserLink-link" data-za-detail-view-element_name="User" target="_blank" href="https://www.zhihu.com/people/yu-mu-mu-46-39"><img class="Avatar UserLink-avatar" width="24" height="24" src="./浅析Typescript设计模式 - 知乎_files/e12300f1bc880f2c81e0aa5942230354_s.jpg" srcset="https://pic3.zhimg.com/e12300f1bc880f2c81e0aa5942230354_xs.jpg 2x" alt="雨木木"></a></div></div></span><span class="UserLink"><a class="UserLink-link" data-za-detail-view-element_name="User" target="_blank" href="https://www.zhihu.com/people/yu-mu-mu-46-39">雨木木</a></span><span class="CommentItemV2-time">2018-09-02</span></div><div class="CommentItemV2-metaSibling"><div class="CommentRichText CommentItemV2-content"><div class="RichText ztext">棒棒的答主</div></div><div class="CommentItemV2-footer"><button type="button" class="Button CommentItemV2-likeBtn Button--plain"><span style="display: inline-flex; align-items: center;">​<svg class="Zi Zi--Like" fill="currentColor" viewBox="0 0 24 24" width="16" height="16" style="margin-right: 5px;"><path d="M14.445 9h5.387s2.997.154 1.95 3.669c-.168.51-2.346 6.911-2.346 6.911s-.763 1.416-2.86 1.416H8.989c-1.498 0-2.005-.896-1.989-2v-7.998c0-.987.336-2.032 1.114-2.639 4.45-3.773 3.436-4.597 4.45-5.83.985-1.13 3.2-.5 3.037 2.362C15.201 7.397 14.445 9 14.445 9zM3 9h2a1 1 0 0 1 1 1v10a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V10a1 1 0 0 1 1-1z" fill-rule="evenodd"></path></svg></span>赞</button><button type="button" class="Button CommentItemV2-hoverBtn Button--plain"><span style="display: inline-flex; align-items: center;">​<svg class="Zi Zi--Reply" fill="currentColor" viewBox="0 0 24 24" width="16" height="16" style="margin-right: 5px;"><path d="M22.959 17.22c-1.686-3.552-5.128-8.062-11.636-8.65-.539-.053-1.376-.436-1.376-1.561V4.678c0-.521-.635-.915-1.116-.521L1.469 10.67a1.506 1.506 0 0 0-.1 2.08s6.99 6.818 7.443 7.114c.453.295 1.136.124 1.135-.501V17a1.525 1.525 0 0 1 1.532-1.466c1.186-.139 7.597-.077 10.33 2.396 0 0 .396.257.536.257.892 0 .614-.967.614-.967z" fill-rule="evenodd"></path></svg></span>回复</button><button type="button" class="Button CommentItemV2-hoverBtn Button--plain"><span style="display: inline-flex; align-items: center;">​<svg class="Zi Zi--Like" fill="currentColor" viewBox="0 0 24 24" width="16" height="16" style="transform: rotate(180deg); margin-right: 5px;"><path d="M14.445 9h5.387s2.997.154 1.95 3.669c-.168.51-2.346 6.911-2.346 6.911s-.763 1.416-2.86 1.416H8.989c-1.498 0-2.005-.896-1.989-2v-7.998c0-.987.336-2.032 1.114-2.639 4.45-3.773 3.436-4.597 4.45-5.83.985-1.13 3.2-.5 3.037 2.362C15.201 7.397 14.445 9 14.445 9zM3 9h2a1 1 0 0 1 1 1v10a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V10a1 1 0 0 1 1-1z" fill-rule="evenodd"></path></svg></span>踩</button><button type="button" class="Button CommentItemV2-hoverBtn Button--plain"><span style="display: inline-flex; align-items: center;">​<svg class="Zi Zi--Report" fill="currentColor" viewBox="0 0 24 24" width="16" height="16" style="margin-right: 5px;"><path d="M19.947 3.129c-.633.136-3.927.639-5.697.385-3.133-.45-4.776-2.54-9.949-.888-.997.413-1.277 1.038-1.277 2.019L3 20.808c0 .3.101.54.304.718a.97.97 0 0 0 .73.304c.275 0 .519-.102.73-.304.202-.179.304-.418.304-.718v-6.58c4.533-1.235 8.047.668 8.562.864 2.343.893 5.542.008 6.774-.657.397-.178.596-.474.596-.887V3.964c0-.599-.42-.972-1.053-.835z" fill-rule="evenodd"></path></svg></span>举报</button></div></div></div></div></li></ul><ul class="NestComment"><li class="NestComment--rootComment"><div class="CommentItemV2"><div><div class="CommentItemV2-meta"><span class="UserLink CommentItemV2-avatar"><img class="Avatar UserLink-avatar" width="24" height="24" src="./浅析Typescript设计模式 - 知乎_files/da8e974dc_s.jpg" srcset="https://pic4.zhimg.com/da8e974dc_xs.jpg 2x" alt="知乎用户"></span><span class="UserLink">知乎用户</span><span class="CommentItemV2-time">2018-09-03</span></div><div class="CommentItemV2-metaSibling"><div class="CommentRichText CommentItemV2-content"><div class="RichText ztext"><p>单例模式，我直接export new xxx()，用的时候直接import对象怎么样？</p></div></div><div class="CommentItemV2-footer"><button type="button" class="Button CommentItemV2-likeBtn Button--plain"><span style="display: inline-flex; align-items: center;">​<svg class="Zi Zi--Like" fill="currentColor" viewBox="0 0 24 24" width="16" height="16" style="margin-right: 5px;"><path d="M14.445 9h5.387s2.997.154 1.95 3.669c-.168.51-2.346 6.911-2.346 6.911s-.763 1.416-2.86 1.416H8.989c-1.498 0-2.005-.896-1.989-2v-7.998c0-.987.336-2.032 1.114-2.639 4.45-3.773 3.436-4.597 4.45-5.83.985-1.13 3.2-.5 3.037 2.362C15.201 7.397 14.445 9 14.445 9zM3 9h2a1 1 0 0 1 1 1v10a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V10a1 1 0 0 1 1-1z" fill-rule="evenodd"></path></svg></span>赞</button><button type="button" class="Button CommentItemV2-hoverBtn Button--plain"><span style="display: inline-flex; align-items: center;">​<svg class="Zi Zi--Reply" fill="currentColor" viewBox="0 0 24 24" width="16" height="16" style="margin-right: 5px;"><path d="M22.959 17.22c-1.686-3.552-5.128-8.062-11.636-8.65-.539-.053-1.376-.436-1.376-1.561V4.678c0-.521-.635-.915-1.116-.521L1.469 10.67a1.506 1.506 0 0 0-.1 2.08s6.99 6.818 7.443 7.114c.453.295 1.136.124 1.135-.501V17a1.525 1.525 0 0 1 1.532-1.466c1.186-.139 7.597-.077 10.33 2.396 0 0 .396.257.536.257.892 0 .614-.967.614-.967z" fill-rule="evenodd"></path></svg></span>回复</button><button type="button" class="Button CommentItemV2-hoverBtn Button--plain"><span style="display: inline-flex; align-items: center;">​<svg class="Zi Zi--Like" fill="currentColor" viewBox="0 0 24 24" width="16" height="16" style="transform: rotate(180deg); margin-right: 5px;"><path d="M14.445 9h5.387s2.997.154 1.95 3.669c-.168.51-2.346 6.911-2.346 6.911s-.763 1.416-2.86 1.416H8.989c-1.498 0-2.005-.896-1.989-2v-7.998c0-.987.336-2.032 1.114-2.639 4.45-3.773 3.436-4.597 4.45-5.83.985-1.13 3.2-.5 3.037 2.362C15.201 7.397 14.445 9 14.445 9zM3 9h2a1 1 0 0 1 1 1v10a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V10a1 1 0 0 1 1-1z" fill-rule="evenodd"></path></svg></span>踩</button><button type="button" class="Button CommentItemV2-hoverBtn Button--plain"><span style="display: inline-flex; align-items: center;">​<svg class="Zi Zi--Report" fill="currentColor" viewBox="0 0 24 24" width="16" height="16" style="margin-right: 5px;"><path d="M19.947 3.129c-.633.136-3.927.639-5.697.385-3.133-.45-4.776-2.54-9.949-.888-.997.413-1.277 1.038-1.277 2.019L3 20.808c0 .3.101.54.304.718a.97.97 0 0 0 .73.304c.275 0 .519-.102.73-.304.202-.179.304-.418.304-.718v-6.58c4.533-1.235 8.047.668 8.562.864 2.343.893 5.542.008 6.774-.657.397-.178.596-.474.596-.887V3.964c0-.599-.42-.972-1.053-.835z" fill-rule="evenodd"></path></svg></span>举报</button></div></div></div></div></li><li class="NestComment--child"><div class="CommentItemV2"><div><div class="CommentItemV2-meta"><span class="UserLink CommentItemV2-avatar"><div class="Popover"><div id="Popover18-toggle" aria-haspopup="true" aria-expanded="false" aria-owns="Popover18-content"><a class="UserLink-link" data-za-detail-view-element_name="User" target="_blank" href="https://www.zhihu.com/people/du-shuai-27-14"><img class="Avatar UserLink-avatar" width="24" height="24" src="./浅析Typescript设计模式 - 知乎_files/v2-24beed3d4509902870594de071dc9139_s.jpg" srcset="https://pic3.zhimg.com/v2-24beed3d4509902870594de071dc9139_xs.jpg 2x" alt="江湖术士"></a></div></div></span><span class="UserLink"><a class="UserLink-link" data-za-detail-view-element_name="User" target="_blank" href="https://www.zhihu.com/people/du-shuai-27-14">江湖术士</a></span><span class="CommentItemV2-roleInfo"> (作者) </span><span class="CommentItemV2-reply">回复</span><span class="UserLink">知乎用户</span><span class="CommentItemV2-time">2018-09-03</span></div><div class="CommentItemV2-metaSibling"><div class="CommentRichText CommentItemV2-content"><div class="RichText ztext">可以啊，同样是沟通问题，依赖和模式建议分开，我如果引入一个首字母大写的类，打一个点，发现有getInstance方法，我就知道这是一个单例。但是你这种方式，很难区分引入的变量是什么。</div></div><div class="CommentItemV2-footer"><button type="button" class="Button CommentItemV2-likeBtn Button--plain"><span style="display: inline-flex; align-items: center;">​<svg class="Zi Zi--Like" fill="currentColor" viewBox="0 0 24 24" width="16" height="16" style="margin-right: 5px;"><path d="M14.445 9h5.387s2.997.154 1.95 3.669c-.168.51-2.346 6.911-2.346 6.911s-.763 1.416-2.86 1.416H8.989c-1.498 0-2.005-.896-1.989-2v-7.998c0-.987.336-2.032 1.114-2.639 4.45-3.773 3.436-4.597 4.45-5.83.985-1.13 3.2-.5 3.037 2.362C15.201 7.397 14.445 9 14.445 9zM3 9h2a1 1 0 0 1 1 1v10a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V10a1 1 0 0 1 1-1z" fill-rule="evenodd"></path></svg></span>赞</button><button type="button" class="Button CommentItemV2-hoverBtn Button--plain"><span style="display: inline-flex; align-items: center;">​<svg class="Zi Zi--Reply" fill="currentColor" viewBox="0 0 24 24" width="16" height="16" style="margin-right: 5px;"><path d="M22.959 17.22c-1.686-3.552-5.128-8.062-11.636-8.65-.539-.053-1.376-.436-1.376-1.561V4.678c0-.521-.635-.915-1.116-.521L1.469 10.67a1.506 1.506 0 0 0-.1 2.08s6.99 6.818 7.443 7.114c.453.295 1.136.124 1.135-.501V17a1.525 1.525 0 0 1 1.532-1.466c1.186-.139 7.597-.077 10.33 2.396 0 0 .396.257.536.257.892 0 .614-.967.614-.967z" fill-rule="evenodd"></path></svg></span>回复</button><button type="button" class="Button CommentItemV2-hoverBtn Button--plain"><span style="display: inline-flex; align-items: center;">​<svg class="Zi Zi--Like" fill="currentColor" viewBox="0 0 24 24" width="16" height="16" style="transform: rotate(180deg); margin-right: 5px;"><path d="M14.445 9h5.387s2.997.154 1.95 3.669c-.168.51-2.346 6.911-2.346 6.911s-.763 1.416-2.86 1.416H8.989c-1.498 0-2.005-.896-1.989-2v-7.998c0-.987.336-2.032 1.114-2.639 4.45-3.773 3.436-4.597 4.45-5.83.985-1.13 3.2-.5 3.037 2.362C15.201 7.397 14.445 9 14.445 9zM3 9h2a1 1 0 0 1 1 1v10a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V10a1 1 0 0 1 1-1z" fill-rule="evenodd"></path></svg></span>踩</button><button type="button" class="Button CommentItemV2-hoverBtn Button--plain"><span style="display: inline-flex; align-items: center;">​<svg class="Zi Zi--Report" fill="currentColor" viewBox="0 0 24 24" width="16" height="16" style="margin-right: 5px;"><path d="M19.947 3.129c-.633.136-3.927.639-5.697.385-3.133-.45-4.776-2.54-9.949-.888-.997.413-1.277 1.038-1.277 2.019L3 20.808c0 .3.101.54.304.718a.97.97 0 0 0 .73.304c.275 0 .519-.102.73-.304.202-.179.304-.418.304-.718v-6.58c4.533-1.235 8.047.668 8.562.864 2.343.893 5.542.008 6.774-.657.397-.178.596-.474.596-.887V3.964c0-.599-.42-.972-1.053-.835z" fill-rule="evenodd"></path></svg></span>举报</button></div></div></div></div></li><li class="NestComment--child"><div class="CommentItemV2"><div><div class="CommentItemV2-meta"><span class="UserLink CommentItemV2-avatar"><img class="Avatar UserLink-avatar" width="24" height="24" src="./浅析Typescript设计模式 - 知乎_files/da8e974dc_s.jpg" srcset="https://pic4.zhimg.com/da8e974dc_xs.jpg 2x" alt="知乎用户"></span><span class="UserLink">知乎用户</span><span class="CommentItemV2-reply">回复</span><span class="UserLink">知乎用户</span><span class="CommentItemV2-time">2018-09-03</span></div><div class="CommentItemV2-metaSibling"><div class="CommentRichText CommentItemV2-content"><div class="RichText ztext">单例模式是为了解决Java不能export new xxx() 的问题创造出来的</div></div><div class="CommentItemV2-footer"><button type="button" class="Button CommentItemV2-likeBtn Button--plain"><span style="display: inline-flex; align-items: center;">​<svg class="Zi Zi--Like" fill="currentColor" viewBox="0 0 24 24" width="16" height="16" style="margin-right: 5px;"><path d="M14.445 9h5.387s2.997.154 1.95 3.669c-.168.51-2.346 6.911-2.346 6.911s-.763 1.416-2.86 1.416H8.989c-1.498 0-2.005-.896-1.989-2v-7.998c0-.987.336-2.032 1.114-2.639 4.45-3.773 3.436-4.597 4.45-5.83.985-1.13 3.2-.5 3.037 2.362C15.201 7.397 14.445 9 14.445 9zM3 9h2a1 1 0 0 1 1 1v10a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V10a1 1 0 0 1 1-1z" fill-rule="evenodd"></path></svg></span>1</button><button type="button" class="Button CommentItemV2-hoverBtn Button--plain"><span style="display: inline-flex; align-items: center;">​<svg class="Zi Zi--Reply" fill="currentColor" viewBox="0 0 24 24" width="16" height="16" style="margin-right: 5px;"><path d="M22.959 17.22c-1.686-3.552-5.128-8.062-11.636-8.65-.539-.053-1.376-.436-1.376-1.561V4.678c0-.521-.635-.915-1.116-.521L1.469 10.67a1.506 1.506 0 0 0-.1 2.08s6.99 6.818 7.443 7.114c.453.295 1.136.124 1.135-.501V17a1.525 1.525 0 0 1 1.532-1.466c1.186-.139 7.597-.077 10.33 2.396 0 0 .396.257.536.257.892 0 .614-.967.614-.967z" fill-rule="evenodd"></path></svg></span>回复</button><button type="button" class="Button CommentItemV2-hoverBtn Button--plain"><span style="display: inline-flex; align-items: center;">​<svg class="Zi Zi--Like" fill="currentColor" viewBox="0 0 24 24" width="16" height="16" style="transform: rotate(180deg); margin-right: 5px;"><path d="M14.445 9h5.387s2.997.154 1.95 3.669c-.168.51-2.346 6.911-2.346 6.911s-.763 1.416-2.86 1.416H8.989c-1.498 0-2.005-.896-1.989-2v-7.998c0-.987.336-2.032 1.114-2.639 4.45-3.773 3.436-4.597 4.45-5.83.985-1.13 3.2-.5 3.037 2.362C15.201 7.397 14.445 9 14.445 9zM3 9h2a1 1 0 0 1 1 1v10a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V10a1 1 0 0 1 1-1z" fill-rule="evenodd"></path></svg></span>踩</button><button type="button" class="Button CommentItemV2-hoverBtn Button--plain"><span style="display: inline-flex; align-items: center;">​<svg class="Zi Zi--Report" fill="currentColor" viewBox="0 0 24 24" width="16" height="16" style="margin-right: 5px;"><path d="M19.947 3.129c-.633.136-3.927.639-5.697.385-3.133-.45-4.776-2.54-9.949-.888-.997.413-1.277 1.038-1.277 2.019L3 20.808c0 .3.101.54.304.718a.97.97 0 0 0 .73.304c.275 0 .519-.102.73-.304.202-.179.304-.418.304-.718v-6.58c4.533-1.235 8.047.668 8.562.864 2.343.893 5.542.008 6.774-.657.397-.178.596-.474.596-.887V3.964c0-.599-.42-.972-1.053-.835z" fill-rule="evenodd"></path></svg></span>举报</button></div></div></div></div></li><div><div class="CommentMoreReplyButton"><button type="button" class="Button Button--plain">展开其他 3 条回复</button></div></div></ul><ul class="NestComment"><li class="NestComment--rootCommentNoChild"><div class="CommentItemV2"><div><div class="CommentItemV2-meta"><span class="UserLink CommentItemV2-avatar"><div class="Popover"><div id="Popover19-toggle" aria-haspopup="true" aria-expanded="false" aria-owns="Popover19-content"><a class="UserLink-link" data-za-detail-view-element_name="User" target="_blank" href="https://www.zhihu.com/people/wan-mou-yong"><img class="Avatar UserLink-avatar" width="24" height="24" src="./浅析Typescript设计模式 - 知乎_files/50e1352f1_s.jpg" srcset="https://pic2.zhimg.com/50e1352f1_xs.jpg 2x" alt="xi2008wang"></a></div></div></span><span class="UserLink"><a class="UserLink-link" data-za-detail-view-element_name="User" target="_blank" href="https://www.zhihu.com/people/wan-mou-yong">xi2008wang</a></span><span class="CommentItemV2-time">2018-09-03</span></div><div class="CommentItemV2-metaSibling"><div class="CommentRichText CommentItemV2-content"><div class="RichText ztext">赞</div></div><div class="CommentItemV2-footer"><button type="button" class="Button CommentItemV2-likeBtn Button--plain"><span style="display: inline-flex; align-items: center;">​<svg class="Zi Zi--Like" fill="currentColor" viewBox="0 0 24 24" width="16" height="16" style="margin-right: 5px;"><path d="M14.445 9h5.387s2.997.154 1.95 3.669c-.168.51-2.346 6.911-2.346 6.911s-.763 1.416-2.86 1.416H8.989c-1.498 0-2.005-.896-1.989-2v-7.998c0-.987.336-2.032 1.114-2.639 4.45-3.773 3.436-4.597 4.45-5.83.985-1.13 3.2-.5 3.037 2.362C15.201 7.397 14.445 9 14.445 9zM3 9h2a1 1 0 0 1 1 1v10a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V10a1 1 0 0 1 1-1z" fill-rule="evenodd"></path></svg></span>赞</button><button type="button" class="Button CommentItemV2-hoverBtn Button--plain"><span style="display: inline-flex; align-items: center;">​<svg class="Zi Zi--Reply" fill="currentColor" viewBox="0 0 24 24" width="16" height="16" style="margin-right: 5px;"><path d="M22.959 17.22c-1.686-3.552-5.128-8.062-11.636-8.65-.539-.053-1.376-.436-1.376-1.561V4.678c0-.521-.635-.915-1.116-.521L1.469 10.67a1.506 1.506 0 0 0-.1 2.08s6.99 6.818 7.443 7.114c.453.295 1.136.124 1.135-.501V17a1.525 1.525 0 0 1 1.532-1.466c1.186-.139 7.597-.077 10.33 2.396 0 0 .396.257.536.257.892 0 .614-.967.614-.967z" fill-rule="evenodd"></path></svg></span>回复</button><button type="button" class="Button CommentItemV2-hoverBtn Button--plain"><span style="display: inline-flex; align-items: center;">​<svg class="Zi Zi--Like" fill="currentColor" viewBox="0 0 24 24" width="16" height="16" style="transform: rotate(180deg); margin-right: 5px;"><path d="M14.445 9h5.387s2.997.154 1.95 3.669c-.168.51-2.346 6.911-2.346 6.911s-.763 1.416-2.86 1.416H8.989c-1.498 0-2.005-.896-1.989-2v-7.998c0-.987.336-2.032 1.114-2.639 4.45-3.773 3.436-4.597 4.45-5.83.985-1.13 3.2-.5 3.037 2.362C15.201 7.397 14.445 9 14.445 9zM3 9h2a1 1 0 0 1 1 1v10a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V10a1 1 0 0 1 1-1z" fill-rule="evenodd"></path></svg></span>踩</button><button type="button" class="Button CommentItemV2-hoverBtn Button--plain"><span style="display: inline-flex; align-items: center;">​<svg class="Zi Zi--Report" fill="currentColor" viewBox="0 0 24 24" width="16" height="16" style="margin-right: 5px;"><path d="M19.947 3.129c-.633.136-3.927.639-5.697.385-3.133-.45-4.776-2.54-9.949-.888-.997.413-1.277 1.038-1.277 2.019L3 20.808c0 .3.101.54.304.718a.97.97 0 0 0 .73.304c.275 0 .519-.102.73-.304.202-.179.304-.418.304-.718v-6.58c4.533-1.235 8.047.668 8.562.864 2.343.893 5.542.008 6.774-.657.397-.178.596-.474.596-.887V3.964c0-.599-.42-.972-1.053-.835z" fill-rule="evenodd"></path></svg></span>举报</button></div></div></div></div></li></ul><ul class="NestComment"><li class="NestComment--rootComment"><div class="CommentItemV2"><div><div class="CommentItemV2-meta"><span class="UserLink CommentItemV2-avatar"><div class="Popover"><div id="Popover20-toggle" aria-haspopup="true" aria-expanded="false" aria-owns="Popover20-content"><a class="UserLink-link" data-za-detail-view-element_name="User" target="_blank" href="https://www.zhihu.com/people/cao-jun-67"><img class="Avatar UserLink-avatar" width="24" height="24" src="./浅析Typescript设计模式 - 知乎_files/da8e974dc_s.jpg" srcset="https://pic4.zhimg.com/da8e974dc_xs.jpg 2x" alt="曹俊"></a></div></div></span><span class="UserLink"><a class="UserLink-link" data-za-detail-view-element_name="User" target="_blank" href="https://www.zhihu.com/people/cao-jun-67">曹俊</a></span><span class="CommentItemV2-time">2018-09-04</span></div><div class="CommentItemV2-metaSibling"><div class="CommentRichText CommentItemV2-content"><div class="RichText ztext">写的简单明了，已打赏</div></div><div class="CommentItemV2-footer"><button type="button" class="Button CommentItemV2-likeBtn Button--plain"><span style="display: inline-flex; align-items: center;">​<svg class="Zi Zi--Like" fill="currentColor" viewBox="0 0 24 24" width="16" height="16" style="margin-right: 5px;"><path d="M14.445 9h5.387s2.997.154 1.95 3.669c-.168.51-2.346 6.911-2.346 6.911s-.763 1.416-2.86 1.416H8.989c-1.498 0-2.005-.896-1.989-2v-7.998c0-.987.336-2.032 1.114-2.639 4.45-3.773 3.436-4.597 4.45-5.83.985-1.13 3.2-.5 3.037 2.362C15.201 7.397 14.445 9 14.445 9zM3 9h2a1 1 0 0 1 1 1v10a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V10a1 1 0 0 1 1-1z" fill-rule="evenodd"></path></svg></span>赞</button><button type="button" class="Button CommentItemV2-hoverBtn Button--plain"><span style="display: inline-flex; align-items: center;">​<svg class="Zi Zi--Reply" fill="currentColor" viewBox="0 0 24 24" width="16" height="16" style="margin-right: 5px;"><path d="M22.959 17.22c-1.686-3.552-5.128-8.062-11.636-8.65-.539-.053-1.376-.436-1.376-1.561V4.678c0-.521-.635-.915-1.116-.521L1.469 10.67a1.506 1.506 0 0 0-.1 2.08s6.99 6.818 7.443 7.114c.453.295 1.136.124 1.135-.501V17a1.525 1.525 0 0 1 1.532-1.466c1.186-.139 7.597-.077 10.33 2.396 0 0 .396.257.536.257.892 0 .614-.967.614-.967z" fill-rule="evenodd"></path></svg></span>回复</button><button type="button" class="Button CommentItemV2-hoverBtn Button--plain"><span style="display: inline-flex; align-items: center;">​<svg class="Zi Zi--Like" fill="currentColor" viewBox="0 0 24 24" width="16" height="16" style="transform: rotate(180deg); margin-right: 5px;"><path d="M14.445 9h5.387s2.997.154 1.95 3.669c-.168.51-2.346 6.911-2.346 6.911s-.763 1.416-2.86 1.416H8.989c-1.498 0-2.005-.896-1.989-2v-7.998c0-.987.336-2.032 1.114-2.639 4.45-3.773 3.436-4.597 4.45-5.83.985-1.13 3.2-.5 3.037 2.362C15.201 7.397 14.445 9 14.445 9zM3 9h2a1 1 0 0 1 1 1v10a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V10a1 1 0 0 1 1-1z" fill-rule="evenodd"></path></svg></span>踩</button><button type="button" class="Button CommentItemV2-hoverBtn Button--plain"><span style="display: inline-flex; align-items: center;">​<svg class="Zi Zi--Report" fill="currentColor" viewBox="0 0 24 24" width="16" height="16" style="margin-right: 5px;"><path d="M19.947 3.129c-.633.136-3.927.639-5.697.385-3.133-.45-4.776-2.54-9.949-.888-.997.413-1.277 1.038-1.277 2.019L3 20.808c0 .3.101.54.304.718a.97.97 0 0 0 .73.304c.275 0 .519-.102.73-.304.202-.179.304-.418.304-.718v-6.58c4.533-1.235 8.047.668 8.562.864 2.343.893 5.542.008 6.774-.657.397-.178.596-.474.596-.887V3.964c0-.599-.42-.972-1.053-.835z" fill-rule="evenodd"></path></svg></span>举报</button></div></div></div></div></li><li class="NestComment--child"><div class="CommentItemV2"><div><div class="CommentItemV2-meta"><span class="UserLink CommentItemV2-avatar"><div class="Popover"><div id="Popover21-toggle" aria-haspopup="true" aria-expanded="false" aria-owns="Popover21-content"><a class="UserLink-link" data-za-detail-view-element_name="User" target="_blank" href="https://www.zhihu.com/people/du-shuai-27-14"><img class="Avatar UserLink-avatar" width="24" height="24" src="./浅析Typescript设计模式 - 知乎_files/v2-24beed3d4509902870594de071dc9139_s.jpg" srcset="https://pic3.zhimg.com/v2-24beed3d4509902870594de071dc9139_xs.jpg 2x" alt="江湖术士"></a></div></div></span><span class="UserLink"><a class="UserLink-link" data-za-detail-view-element_name="User" target="_blank" href="https://www.zhihu.com/people/du-shuai-27-14">江湖术士</a></span><span class="CommentItemV2-roleInfo"> (作者) </span><span class="CommentItemV2-reply">回复</span><span class="UserLink"><a class="UserLink-link" data-za-detail-view-element_name="User" target="_blank" href="https://www.zhihu.com/people/cao-jun-67">曹俊</a></span><span class="CommentItemV2-time">2018-09-04</span></div><div class="CommentItemV2-metaSibling"><div class="CommentRichText CommentItemV2-content"><div class="RichText ztext">非常感谢～</div></div><div class="CommentItemV2-footer"><button type="button" class="Button CommentItemV2-likeBtn Button--plain"><span style="display: inline-flex; align-items: center;">​<svg class="Zi Zi--Like" fill="currentColor" viewBox="0 0 24 24" width="16" height="16" style="margin-right: 5px;"><path d="M14.445 9h5.387s2.997.154 1.95 3.669c-.168.51-2.346 6.911-2.346 6.911s-.763 1.416-2.86 1.416H8.989c-1.498 0-2.005-.896-1.989-2v-7.998c0-.987.336-2.032 1.114-2.639 4.45-3.773 3.436-4.597 4.45-5.83.985-1.13 3.2-.5 3.037 2.362C15.201 7.397 14.445 9 14.445 9zM3 9h2a1 1 0 0 1 1 1v10a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V10a1 1 0 0 1 1-1z" fill-rule="evenodd"></path></svg></span>赞</button><button type="button" class="Button CommentItemV2-hoverBtn Button--plain"><span style="display: inline-flex; align-items: center;">​<svg class="Zi Zi--Reply" fill="currentColor" viewBox="0 0 24 24" width="16" height="16" style="margin-right: 5px;"><path d="M22.959 17.22c-1.686-3.552-5.128-8.062-11.636-8.65-.539-.053-1.376-.436-1.376-1.561V4.678c0-.521-.635-.915-1.116-.521L1.469 10.67a1.506 1.506 0 0 0-.1 2.08s6.99 6.818 7.443 7.114c.453.295 1.136.124 1.135-.501V17a1.525 1.525 0 0 1 1.532-1.466c1.186-.139 7.597-.077 10.33 2.396 0 0 .396.257.536.257.892 0 .614-.967.614-.967z" fill-rule="evenodd"></path></svg></span>回复</button><button type="button" class="Button CommentItemV2-hoverBtn Button--plain"><span style="display: inline-flex; align-items: center;">​<svg class="Zi Zi--Like" fill="currentColor" viewBox="0 0 24 24" width="16" height="16" style="transform: rotate(180deg); margin-right: 5px;"><path d="M14.445 9h5.387s2.997.154 1.95 3.669c-.168.51-2.346 6.911-2.346 6.911s-.763 1.416-2.86 1.416H8.989c-1.498 0-2.005-.896-1.989-2v-7.998c0-.987.336-2.032 1.114-2.639 4.45-3.773 3.436-4.597 4.45-5.83.985-1.13 3.2-.5 3.037 2.362C15.201 7.397 14.445 9 14.445 9zM3 9h2a1 1 0 0 1 1 1v10a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V10a1 1 0 0 1 1-1z" fill-rule="evenodd"></path></svg></span>踩</button><button type="button" class="Button CommentItemV2-hoverBtn Button--plain"><span style="display: inline-flex; align-items: center;">​<svg class="Zi Zi--Report" fill="currentColor" viewBox="0 0 24 24" width="16" height="16" style="margin-right: 5px;"><path d="M19.947 3.129c-.633.136-3.927.639-5.697.385-3.133-.45-4.776-2.54-9.949-.888-.997.413-1.277 1.038-1.277 2.019L3 20.808c0 .3.101.54.304.718a.97.97 0 0 0 .73.304c.275 0 .519-.102.73-.304.202-.179.304-.418.304-.718v-6.58c4.533-1.235 8.047.668 8.562.864 2.343.893 5.542.008 6.774-.657.397-.178.596-.474.596-.887V3.964c0-.599-.42-.972-1.053-.835z" fill-rule="evenodd"></path></svg></span>举报</button></div></div></div></div></li></ul><ul class="NestComment"><li class="NestComment--rootComment"><div class="CommentItemV2"><div><div class="CommentItemV2-meta"><span class="UserLink CommentItemV2-avatar"><div class="Popover"><div id="Popover22-toggle" aria-haspopup="true" aria-expanded="false" aria-owns="Popover22-content"><a class="UserLink-link" data-za-detail-view-element_name="User" target="_blank" href="https://www.zhihu.com/people/cao-jun-67"><img class="Avatar UserLink-avatar" width="24" height="24" src="./浅析Typescript设计模式 - 知乎_files/da8e974dc_s.jpg" srcset="https://pic4.zhimg.com/da8e974dc_xs.jpg 2x" alt="曹俊"></a></div></div></span><span class="UserLink"><a class="UserLink-link" data-za-detail-view-element_name="User" target="_blank" href="https://www.zhihu.com/people/cao-jun-67">曹俊</a></span><span class="CommentItemV2-time">2018-09-04</span></div><div class="CommentItemV2-metaSibling"><div class="CommentRichText CommentItemV2-content"><div class="RichText ztext">好像没有写组合模式</div></div><div class="CommentItemV2-footer"><button type="button" class="Button CommentItemV2-likeBtn Button--plain"><span style="display: inline-flex; align-items: center;">​<svg class="Zi Zi--Like" fill="currentColor" viewBox="0 0 24 24" width="16" height="16" style="margin-right: 5px;"><path d="M14.445 9h5.387s2.997.154 1.95 3.669c-.168.51-2.346 6.911-2.346 6.911s-.763 1.416-2.86 1.416H8.989c-1.498 0-2.005-.896-1.989-2v-7.998c0-.987.336-2.032 1.114-2.639 4.45-3.773 3.436-4.597 4.45-5.83.985-1.13 3.2-.5 3.037 2.362C15.201 7.397 14.445 9 14.445 9zM3 9h2a1 1 0 0 1 1 1v10a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V10a1 1 0 0 1 1-1z" fill-rule="evenodd"></path></svg></span>赞</button><button type="button" class="Button CommentItemV2-hoverBtn Button--plain"><span style="display: inline-flex; align-items: center;">​<svg class="Zi Zi--Reply" fill="currentColor" viewBox="0 0 24 24" width="16" height="16" style="margin-right: 5px;"><path d="M22.959 17.22c-1.686-3.552-5.128-8.062-11.636-8.65-.539-.053-1.376-.436-1.376-1.561V4.678c0-.521-.635-.915-1.116-.521L1.469 10.67a1.506 1.506 0 0 0-.1 2.08s6.99 6.818 7.443 7.114c.453.295 1.136.124 1.135-.501V17a1.525 1.525 0 0 1 1.532-1.466c1.186-.139 7.597-.077 10.33 2.396 0 0 .396.257.536.257.892 0 .614-.967.614-.967z" fill-rule="evenodd"></path></svg></span>回复</button><button type="button" class="Button CommentItemV2-hoverBtn Button--plain"><span style="display: inline-flex; align-items: center;">​<svg class="Zi Zi--Like" fill="currentColor" viewBox="0 0 24 24" width="16" height="16" style="transform: rotate(180deg); margin-right: 5px;"><path d="M14.445 9h5.387s2.997.154 1.95 3.669c-.168.51-2.346 6.911-2.346 6.911s-.763 1.416-2.86 1.416H8.989c-1.498 0-2.005-.896-1.989-2v-7.998c0-.987.336-2.032 1.114-2.639 4.45-3.773 3.436-4.597 4.45-5.83.985-1.13 3.2-.5 3.037 2.362C15.201 7.397 14.445 9 14.445 9zM3 9h2a1 1 0 0 1 1 1v10a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V10a1 1 0 0 1 1-1z" fill-rule="evenodd"></path></svg></span>踩</button><button type="button" class="Button CommentItemV2-hoverBtn Button--plain"><span style="display: inline-flex; align-items: center;">​<svg class="Zi Zi--Report" fill="currentColor" viewBox="0 0 24 24" width="16" height="16" style="margin-right: 5px;"><path d="M19.947 3.129c-.633.136-3.927.639-5.697.385-3.133-.45-4.776-2.54-9.949-.888-.997.413-1.277 1.038-1.277 2.019L3 20.808c0 .3.101.54.304.718a.97.97 0 0 0 .73.304c.275 0 .519-.102.73-.304.202-.179.304-.418.304-.718v-6.58c4.533-1.235 8.047.668 8.562.864 2.343.893 5.542.008 6.774-.657.397-.178.596-.474.596-.887V3.964c0-.599-.42-.972-1.053-.835z" fill-rule="evenodd"></path></svg></span>举报</button></div></div></div></div></li><li class="NestComment--child"><div class="CommentItemV2"><div><div class="CommentItemV2-meta"><span class="UserLink CommentItemV2-avatar"><div class="Popover"><div id="Popover23-toggle" aria-haspopup="true" aria-expanded="false" aria-owns="Popover23-content"><a class="UserLink-link" data-za-detail-view-element_name="User" target="_blank" href="https://www.zhihu.com/people/du-shuai-27-14"><img class="Avatar UserLink-avatar" width="24" height="24" src="./浅析Typescript设计模式 - 知乎_files/v2-24beed3d4509902870594de071dc9139_s.jpg" srcset="https://pic3.zhimg.com/v2-24beed3d4509902870594de071dc9139_xs.jpg 2x" alt="江湖术士"></a></div></div></span><span class="UserLink"><a class="UserLink-link" data-za-detail-view-element_name="User" target="_blank" href="https://www.zhihu.com/people/du-shuai-27-14">江湖术士</a></span><span class="CommentItemV2-roleInfo"> (作者) </span><span class="CommentItemV2-reply">回复</span><span class="UserLink"><a class="UserLink-link" data-za-detail-view-element_name="User" target="_blank" href="https://www.zhihu.com/people/cao-jun-67">曹俊</a></span><span class="CommentItemV2-time">2018-09-04</span></div><div class="CommentItemV2-metaSibling"><div class="CommentRichText CommentItemV2-content"><div class="RichText ztext">是么？我再看看</div></div><div class="CommentItemV2-footer"><button type="button" class="Button CommentItemV2-likeBtn Button--plain"><span style="display: inline-flex; align-items: center;">​<svg class="Zi Zi--Like" fill="currentColor" viewBox="0 0 24 24" width="16" height="16" style="margin-right: 5px;"><path d="M14.445 9h5.387s2.997.154 1.95 3.669c-.168.51-2.346 6.911-2.346 6.911s-.763 1.416-2.86 1.416H8.989c-1.498 0-2.005-.896-1.989-2v-7.998c0-.987.336-2.032 1.114-2.639 4.45-3.773 3.436-4.597 4.45-5.83.985-1.13 3.2-.5 3.037 2.362C15.201 7.397 14.445 9 14.445 9zM3 9h2a1 1 0 0 1 1 1v10a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V10a1 1 0 0 1 1-1z" fill-rule="evenodd"></path></svg></span>赞</button><button type="button" class="Button CommentItemV2-hoverBtn Button--plain"><span style="display: inline-flex; align-items: center;">​<svg class="Zi Zi--Reply" fill="currentColor" viewBox="0 0 24 24" width="16" height="16" style="margin-right: 5px;"><path d="M22.959 17.22c-1.686-3.552-5.128-8.062-11.636-8.65-.539-.053-1.376-.436-1.376-1.561V4.678c0-.521-.635-.915-1.116-.521L1.469 10.67a1.506 1.506 0 0 0-.1 2.08s6.99 6.818 7.443 7.114c.453.295 1.136.124 1.135-.501V17a1.525 1.525 0 0 1 1.532-1.466c1.186-.139 7.597-.077 10.33 2.396 0 0 .396.257.536.257.892 0 .614-.967.614-.967z" fill-rule="evenodd"></path></svg></span>回复</button><button type="button" class="Button CommentItemV2-hoverBtn Button--plain"><span style="display: inline-flex; align-items: center;">​<svg class="Zi Zi--Like" fill="currentColor" viewBox="0 0 24 24" width="16" height="16" style="transform: rotate(180deg); margin-right: 5px;"><path d="M14.445 9h5.387s2.997.154 1.95 3.669c-.168.51-2.346 6.911-2.346 6.911s-.763 1.416-2.86 1.416H8.989c-1.498 0-2.005-.896-1.989-2v-7.998c0-.987.336-2.032 1.114-2.639 4.45-3.773 3.436-4.597 4.45-5.83.985-1.13 3.2-.5 3.037 2.362C15.201 7.397 14.445 9 14.445 9zM3 9h2a1 1 0 0 1 1 1v10a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V10a1 1 0 0 1 1-1z" fill-rule="evenodd"></path></svg></span>踩</button><button type="button" class="Button CommentItemV2-hoverBtn Button--plain"><span style="display: inline-flex; align-items: center;">​<svg class="Zi Zi--Report" fill="currentColor" viewBox="0 0 24 24" width="16" height="16" style="margin-right: 5px;"><path d="M19.947 3.129c-.633.136-3.927.639-5.697.385-3.133-.45-4.776-2.54-9.949-.888-.997.413-1.277 1.038-1.277 2.019L3 20.808c0 .3.101.54.304.718a.97.97 0 0 0 .73.304c.275 0 .519-.102.73-.304.202-.179.304-.418.304-.718v-6.58c4.533-1.235 8.047.668 8.562.864 2.343.893 5.542.008 6.774-.657.397-.178.596-.474.596-.887V3.964c0-.599-.42-.972-1.053-.835z" fill-rule="evenodd"></path></svg></span>举报</button></div></div></div></div></li></ul><ul class="NestComment"><li class="NestComment--rootCommentNoChild"><div class="CommentItemV2"><div><div class="CommentItemV2-meta"><span class="UserLink CommentItemV2-avatar"><div class="Popover"><div id="Popover24-toggle" aria-haspopup="true" aria-expanded="false" aria-owns="Popover24-content"><a class="UserLink-link" data-za-detail-view-element_name="User" target="_blank" href="https://www.zhihu.com/people/wang-hao-55-42-66"><img class="Avatar UserLink-avatar" width="24" height="24" src="./浅析Typescript设计模式 - 知乎_files/v2-522ca0d09b5735878fafda88cb3b33f5_s.jpg" srcset="https://pic1.zhimg.com/v2-522ca0d09b5735878fafda88cb3b33f5_xs.jpg 2x" alt="Beauty Coding"></a></div></div></span><span class="UserLink"><a class="UserLink-link" data-za-detail-view-element_name="User" target="_blank" href="https://www.zhihu.com/people/wang-hao-55-42-66">Beauty Coding</a></span><span class="CommentItemV2-time">2018-09-04</span></div><div class="CommentItemV2-metaSibling"><div class="CommentRichText CommentItemV2-content"><div class="RichText ztext">好</div></div><div class="CommentItemV2-footer"><button type="button" class="Button CommentItemV2-likeBtn Button--plain"><span style="display: inline-flex; align-items: center;">​<svg class="Zi Zi--Like" fill="currentColor" viewBox="0 0 24 24" width="16" height="16" style="margin-right: 5px;"><path d="M14.445 9h5.387s2.997.154 1.95 3.669c-.168.51-2.346 6.911-2.346 6.911s-.763 1.416-2.86 1.416H8.989c-1.498 0-2.005-.896-1.989-2v-7.998c0-.987.336-2.032 1.114-2.639 4.45-3.773 3.436-4.597 4.45-5.83.985-1.13 3.2-.5 3.037 2.362C15.201 7.397 14.445 9 14.445 9zM3 9h2a1 1 0 0 1 1 1v10a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V10a1 1 0 0 1 1-1z" fill-rule="evenodd"></path></svg></span>赞</button><button type="button" class="Button CommentItemV2-hoverBtn Button--plain"><span style="display: inline-flex; align-items: center;">​<svg class="Zi Zi--Reply" fill="currentColor" viewBox="0 0 24 24" width="16" height="16" style="margin-right: 5px;"><path d="M22.959 17.22c-1.686-3.552-5.128-8.062-11.636-8.65-.539-.053-1.376-.436-1.376-1.561V4.678c0-.521-.635-.915-1.116-.521L1.469 10.67a1.506 1.506 0 0 0-.1 2.08s6.99 6.818 7.443 7.114c.453.295 1.136.124 1.135-.501V17a1.525 1.525 0 0 1 1.532-1.466c1.186-.139 7.597-.077 10.33 2.396 0 0 .396.257.536.257.892 0 .614-.967.614-.967z" fill-rule="evenodd"></path></svg></span>回复</button><button type="button" class="Button CommentItemV2-hoverBtn Button--plain"><span style="display: inline-flex; align-items: center;">​<svg class="Zi Zi--Like" fill="currentColor" viewBox="0 0 24 24" width="16" height="16" style="transform: rotate(180deg); margin-right: 5px;"><path d="M14.445 9h5.387s2.997.154 1.95 3.669c-.168.51-2.346 6.911-2.346 6.911s-.763 1.416-2.86 1.416H8.989c-1.498 0-2.005-.896-1.989-2v-7.998c0-.987.336-2.032 1.114-2.639 4.45-3.773 3.436-4.597 4.45-5.83.985-1.13 3.2-.5 3.037 2.362C15.201 7.397 14.445 9 14.445 9zM3 9h2a1 1 0 0 1 1 1v10a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V10a1 1 0 0 1 1-1z" fill-rule="evenodd"></path></svg></span>踩</button><button type="button" class="Button CommentItemV2-hoverBtn Button--plain"><span style="display: inline-flex; align-items: center;">​<svg class="Zi Zi--Report" fill="currentColor" viewBox="0 0 24 24" width="16" height="16" style="margin-right: 5px;"><path d="M19.947 3.129c-.633.136-3.927.639-5.697.385-3.133-.45-4.776-2.54-9.949-.888-.997.413-1.277 1.038-1.277 2.019L3 20.808c0 .3.101.54.304.718a.97.97 0 0 0 .73.304c.275 0 .519-.102.73-.304.202-.179.304-.418.304-.718v-6.58c4.533-1.235 8.047.668 8.562.864 2.343.893 5.542.008 6.774-.657.397-.178.596-.474.596-.887V3.964c0-.599-.42-.972-1.053-.835z" fill-rule="evenodd"></path></svg></span>举报</button></div></div></div></div></li></ul><ul class="NestComment"><li class="NestComment--rootCommentNoChild"><div class="CommentItemV2"><div><div class="CommentItemV2-meta"><span class="UserLink CommentItemV2-avatar"><div class="Popover"><div id="Popover25-toggle" aria-haspopup="true" aria-expanded="false" aria-owns="Popover25-content"><a class="UserLink-link" data-za-detail-view-element_name="User" target="_blank" href="https://www.zhihu.com/people/zhulinxiaoxi"><img class="Avatar UserLink-avatar" width="24" height="24" src="./浅析Typescript设计模式 - 知乎_files/v2-382b1aa0336cf1f0c42f57fc667ffdce_s.jpg" srcset="https://pic3.zhimg.com/v2-382b1aa0336cf1f0c42f57fc667ffdce_xs.jpg 2x" alt="竹林小溪"></a></div></div></span><span class="UserLink"><a class="UserLink-link" data-za-detail-view-element_name="User" target="_blank" href="https://www.zhihu.com/people/zhulinxiaoxi">竹林小溪</a></span><span class="CommentItemV2-time">2018-10-22</span></div><div class="CommentItemV2-metaSibling"><div class="CommentRichText CommentItemV2-content"><div class="RichText ztext"><p>确实跟java的套路很像</p></div></div><div class="CommentItemV2-footer"><button type="button" class="Button CommentItemV2-likeBtn Button--plain"><span style="display: inline-flex; align-items: center;">​<svg class="Zi Zi--Like" fill="currentColor" viewBox="0 0 24 24" width="16" height="16" style="margin-right: 5px;"><path d="M14.445 9h5.387s2.997.154 1.95 3.669c-.168.51-2.346 6.911-2.346 6.911s-.763 1.416-2.86 1.416H8.989c-1.498 0-2.005-.896-1.989-2v-7.998c0-.987.336-2.032 1.114-2.639 4.45-3.773 3.436-4.597 4.45-5.83.985-1.13 3.2-.5 3.037 2.362C15.201 7.397 14.445 9 14.445 9zM3 9h2a1 1 0 0 1 1 1v10a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V10a1 1 0 0 1 1-1z" fill-rule="evenodd"></path></svg></span>赞</button><button type="button" class="Button CommentItemV2-hoverBtn Button--plain"><span style="display: inline-flex; align-items: center;">​<svg class="Zi Zi--Reply" fill="currentColor" viewBox="0 0 24 24" width="16" height="16" style="margin-right: 5px;"><path d="M22.959 17.22c-1.686-3.552-5.128-8.062-11.636-8.65-.539-.053-1.376-.436-1.376-1.561V4.678c0-.521-.635-.915-1.116-.521L1.469 10.67a1.506 1.506 0 0 0-.1 2.08s6.99 6.818 7.443 7.114c.453.295 1.136.124 1.135-.501V17a1.525 1.525 0 0 1 1.532-1.466c1.186-.139 7.597-.077 10.33 2.396 0 0 .396.257.536.257.892 0 .614-.967.614-.967z" fill-rule="evenodd"></path></svg></span>回复</button><button type="button" class="Button CommentItemV2-hoverBtn Button--plain"><span style="display: inline-flex; align-items: center;">​<svg class="Zi Zi--Like" fill="currentColor" viewBox="0 0 24 24" width="16" height="16" style="transform: rotate(180deg); margin-right: 5px;"><path d="M14.445 9h5.387s2.997.154 1.95 3.669c-.168.51-2.346 6.911-2.346 6.911s-.763 1.416-2.86 1.416H8.989c-1.498 0-2.005-.896-1.989-2v-7.998c0-.987.336-2.032 1.114-2.639 4.45-3.773 3.436-4.597 4.45-5.83.985-1.13 3.2-.5 3.037 2.362C15.201 7.397 14.445 9 14.445 9zM3 9h2a1 1 0 0 1 1 1v10a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V10a1 1 0 0 1 1-1z" fill-rule="evenodd"></path></svg></span>踩</button><button type="button" class="Button CommentItemV2-hoverBtn Button--plain"><span style="display: inline-flex; align-items: center;">​<svg class="Zi Zi--Report" fill="currentColor" viewBox="0 0 24 24" width="16" height="16" style="margin-right: 5px;"><path d="M19.947 3.129c-.633.136-3.927.639-5.697.385-3.133-.45-4.776-2.54-9.949-.888-.997.413-1.277 1.038-1.277 2.019L3 20.808c0 .3.101.54.304.718a.97.97 0 0 0 .73.304c.275 0 .519-.102.73-.304.202-.179.304-.418.304-.718v-6.58c4.533-1.235 8.047.668 8.562.864 2.343.893 5.542.008 6.774-.657.397-.178.596-.474.596-.887V3.964c0-.599-.42-.972-1.053-.835z" fill-rule="evenodd"></path></svg></span>举报</button></div></div></div></div></li></ul><ul class="NestComment"><li class="NestComment--rootCommentNoChild"><div class="CommentItemV2"><div><div class="CommentItemV2-meta"><span class="UserLink CommentItemV2-avatar"><div class="Popover"><div id="Popover26-toggle" aria-haspopup="true" aria-expanded="false" aria-owns="Popover26-content"><a class="UserLink-link" data-za-detail-view-element_name="User" target="_blank" href="https://www.zhihu.com/people/xiao-yang-86-25"><img class="Avatar UserLink-avatar" width="24" height="24" src="./浅析Typescript设计模式 - 知乎_files/da8e974dc_s.jpg" srcset="https://pic4.zhimg.com/da8e974dc_xs.jpg 2x" alt="小羊"></a></div></div></span><span class="UserLink"><a class="UserLink-link" data-za-detail-view-element_name="User" target="_blank" href="https://www.zhihu.com/people/xiao-yang-86-25">小羊</a></span><span class="CommentItemV2-time">2018-12-20</span></div><div class="CommentItemV2-metaSibling"><div class="CommentRichText CommentItemV2-content"><div class="RichText ztext">挺好的。某些例子不太恰当比如桥接。</div></div><div class="CommentItemV2-footer"><button type="button" class="Button CommentItemV2-likeBtn Button--plain"><span style="display: inline-flex; align-items: center;">​<svg class="Zi Zi--Like" fill="currentColor" viewBox="0 0 24 24" width="16" height="16" style="margin-right: 5px;"><path d="M14.445 9h5.387s2.997.154 1.95 3.669c-.168.51-2.346 6.911-2.346 6.911s-.763 1.416-2.86 1.416H8.989c-1.498 0-2.005-.896-1.989-2v-7.998c0-.987.336-2.032 1.114-2.639 4.45-3.773 3.436-4.597 4.45-5.83.985-1.13 3.2-.5 3.037 2.362C15.201 7.397 14.445 9 14.445 9zM3 9h2a1 1 0 0 1 1 1v10a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V10a1 1 0 0 1 1-1z" fill-rule="evenodd"></path></svg></span>赞</button><button type="button" class="Button CommentItemV2-hoverBtn Button--plain"><span style="display: inline-flex; align-items: center;">​<svg class="Zi Zi--Reply" fill="currentColor" viewBox="0 0 24 24" width="16" height="16" style="margin-right: 5px;"><path d="M22.959 17.22c-1.686-3.552-5.128-8.062-11.636-8.65-.539-.053-1.376-.436-1.376-1.561V4.678c0-.521-.635-.915-1.116-.521L1.469 10.67a1.506 1.506 0 0 0-.1 2.08s6.99 6.818 7.443 7.114c.453.295 1.136.124 1.135-.501V17a1.525 1.525 0 0 1 1.532-1.466c1.186-.139 7.597-.077 10.33 2.396 0 0 .396.257.536.257.892 0 .614-.967.614-.967z" fill-rule="evenodd"></path></svg></span>回复</button><button type="button" class="Button CommentItemV2-hoverBtn Button--plain"><span style="display: inline-flex; align-items: center;">​<svg class="Zi Zi--Like" fill="currentColor" viewBox="0 0 24 24" width="16" height="16" style="transform: rotate(180deg); margin-right: 5px;"><path d="M14.445 9h5.387s2.997.154 1.95 3.669c-.168.51-2.346 6.911-2.346 6.911s-.763 1.416-2.86 1.416H8.989c-1.498 0-2.005-.896-1.989-2v-7.998c0-.987.336-2.032 1.114-2.639 4.45-3.773 3.436-4.597 4.45-5.83.985-1.13 3.2-.5 3.037 2.362C15.201 7.397 14.445 9 14.445 9zM3 9h2a1 1 0 0 1 1 1v10a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V10a1 1 0 0 1 1-1z" fill-rule="evenodd"></path></svg></span>踩</button><button type="button" class="Button CommentItemV2-hoverBtn Button--plain"><span style="display: inline-flex; align-items: center;">​<svg class="Zi Zi--Report" fill="currentColor" viewBox="0 0 24 24" width="16" height="16" style="margin-right: 5px;"><path d="M19.947 3.129c-.633.136-3.927.639-5.697.385-3.133-.45-4.776-2.54-9.949-.888-.997.413-1.277 1.038-1.277 2.019L3 20.808c0 .3.101.54.304.718a.97.97 0 0 0 .73.304c.275 0 .519-.102.73-.304.202-.179.304-.418.304-.718v-6.58c4.533-1.235 8.047.668 8.562.864 2.343.893 5.542.008 6.774-.657.397-.178.596-.474.596-.887V3.964c0-.599-.42-.972-1.053-.835z" fill-rule="evenodd"></path></svg></span>举报</button></div></div></div></div></li></ul><ul class="NestComment"><li class="NestComment--rootCommentNoChild"><div class="CommentItemV2"><div><div class="CommentItemV2-meta"><span class="UserLink CommentItemV2-avatar"><div class="Popover"><div id="Popover27-toggle" aria-haspopup="true" aria-expanded="false" aria-owns="Popover27-content"><a class="UserLink-link" data-za-detail-view-element_name="User" target="_blank" href="https://www.zhihu.com/people/wpFlying"><img class="Avatar UserLink-avatar" width="24" height="24" src="./浅析Typescript设计模式 - 知乎_files/v2-fd148d063035113328ad33c79cc2333c_s.jpg" srcset="https://pic2.zhimg.com/v2-fd148d063035113328ad33c79cc2333c_xs.jpg 2x" alt="王鹏"></a></div></div></span><span class="UserLink"><a class="UserLink-link" data-za-detail-view-element_name="User" target="_blank" href="https://www.zhihu.com/people/wpFlying">王鹏</a></span><span class="CommentItemV2-time">03-31</span></div><div class="CommentItemV2-metaSibling"><div class="CommentRichText CommentItemV2-content"><div class="RichText ztext"><p>不错不错 哈哈哈哈 活到老学到老</p></div></div><div class="CommentItemV2-footer"><button type="button" class="Button CommentItemV2-likeBtn Button--plain"><span style="display: inline-flex; align-items: center;">​<svg class="Zi Zi--Like" fill="currentColor" viewBox="0 0 24 24" width="16" height="16" style="margin-right: 5px;"><path d="M14.445 9h5.387s2.997.154 1.95 3.669c-.168.51-2.346 6.911-2.346 6.911s-.763 1.416-2.86 1.416H8.989c-1.498 0-2.005-.896-1.989-2v-7.998c0-.987.336-2.032 1.114-2.639 4.45-3.773 3.436-4.597 4.45-5.83.985-1.13 3.2-.5 3.037 2.362C15.201 7.397 14.445 9 14.445 9zM3 9h2a1 1 0 0 1 1 1v10a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V10a1 1 0 0 1 1-1z" fill-rule="evenodd"></path></svg></span>赞</button><button type="button" class="Button CommentItemV2-hoverBtn Button--plain"><span style="display: inline-flex; align-items: center;">​<svg class="Zi Zi--Reply" fill="currentColor" viewBox="0 0 24 24" width="16" height="16" style="margin-right: 5px;"><path d="M22.959 17.22c-1.686-3.552-5.128-8.062-11.636-8.65-.539-.053-1.376-.436-1.376-1.561V4.678c0-.521-.635-.915-1.116-.521L1.469 10.67a1.506 1.506 0 0 0-.1 2.08s6.99 6.818 7.443 7.114c.453.295 1.136.124 1.135-.501V17a1.525 1.525 0 0 1 1.532-1.466c1.186-.139 7.597-.077 10.33 2.396 0 0 .396.257.536.257.892 0 .614-.967.614-.967z" fill-rule="evenodd"></path></svg></span>回复</button><button type="button" class="Button CommentItemV2-hoverBtn Button--plain"><span style="display: inline-flex; align-items: center;">​<svg class="Zi Zi--Like" fill="currentColor" viewBox="0 0 24 24" width="16" height="16" style="transform: rotate(180deg); margin-right: 5px;"><path d="M14.445 9h5.387s2.997.154 1.95 3.669c-.168.51-2.346 6.911-2.346 6.911s-.763 1.416-2.86 1.416H8.989c-1.498 0-2.005-.896-1.989-2v-7.998c0-.987.336-2.032 1.114-2.639 4.45-3.773 3.436-4.597 4.45-5.83.985-1.13 3.2-.5 3.037 2.362C15.201 7.397 14.445 9 14.445 9zM3 9h2a1 1 0 0 1 1 1v10a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V10a1 1 0 0 1 1-1z" fill-rule="evenodd"></path></svg></span>踩</button><button type="button" class="Button CommentItemV2-hoverBtn Button--plain"><span style="display: inline-flex; align-items: center;">​<svg class="Zi Zi--Report" fill="currentColor" viewBox="0 0 24 24" width="16" height="16" style="margin-right: 5px;"><path d="M19.947 3.129c-.633.136-3.927.639-5.697.385-3.133-.45-4.776-2.54-9.949-.888-.997.413-1.277 1.038-1.277 2.019L3 20.808c0 .3.101.54.304.718a.97.97 0 0 0 .73.304c.275 0 .519-.102.73-.304.202-.179.304-.418.304-.718v-6.58c4.533-1.235 8.047.668 8.562.864 2.343.893 5.542.008 6.774-.657.397-.178.596-.474.596-.887V3.964c0-.599-.42-.972-1.053-.835z" fill-rule="evenodd"></path></svg></span>举报</button></div></div></div></div></li></ul><ul class="NestComment"><li class="NestComment--rootCommentNoChild"><div class="CommentItemV2"><div><div class="CommentItemV2-meta"><span class="UserLink CommentItemV2-avatar"><div class="Popover"><div id="Popover28-toggle" aria-haspopup="true" aria-expanded="false" aria-owns="Popover28-content"><a class="UserLink-link" data-za-detail-view-element_name="User" target="_blank" href="https://www.zhihu.com/people/chen-wen-jie-36-14"><img class="Avatar UserLink-avatar" width="24" height="24" src="./浅析Typescript设计模式 - 知乎_files/v2-2584485e019c3b130cf791e9ccec44ce_s.jpg" srcset="https://pic3.zhimg.com/v2-2584485e019c3b130cf791e9ccec44ce_xs.jpg 2x" alt="Asuka109"></a></div></div></span><span class="UserLink"><a class="UserLink-link" data-za-detail-view-element_name="User" target="_blank" href="https://www.zhihu.com/people/chen-wen-jie-36-14">Asuka109</a></span><span class="CommentItemV2-time">05-05</span></div><div class="CommentItemV2-metaSibling"><div class="CommentRichText CommentItemV2-content"><div class="RichText ztext"><p>感谢分享！这个真的很受用</p></div></div><div class="CommentItemV2-footer"><button type="button" class="Button CommentItemV2-likeBtn Button--plain"><span style="display: inline-flex; align-items: center;">​<svg class="Zi Zi--Like" fill="currentColor" viewBox="0 0 24 24" width="16" height="16" style="margin-right: 5px;"><path d="M14.445 9h5.387s2.997.154 1.95 3.669c-.168.51-2.346 6.911-2.346 6.911s-.763 1.416-2.86 1.416H8.989c-1.498 0-2.005-.896-1.989-2v-7.998c0-.987.336-2.032 1.114-2.639 4.45-3.773 3.436-4.597 4.45-5.83.985-1.13 3.2-.5 3.037 2.362C15.201 7.397 14.445 9 14.445 9zM3 9h2a1 1 0 0 1 1 1v10a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V10a1 1 0 0 1 1-1z" fill-rule="evenodd"></path></svg></span>赞</button><button type="button" class="Button CommentItemV2-hoverBtn Button--plain"><span style="display: inline-flex; align-items: center;">​<svg class="Zi Zi--Reply" fill="currentColor" viewBox="0 0 24 24" width="16" height="16" style="margin-right: 5px;"><path d="M22.959 17.22c-1.686-3.552-5.128-8.062-11.636-8.65-.539-.053-1.376-.436-1.376-1.561V4.678c0-.521-.635-.915-1.116-.521L1.469 10.67a1.506 1.506 0 0 0-.1 2.08s6.99 6.818 7.443 7.114c.453.295 1.136.124 1.135-.501V17a1.525 1.525 0 0 1 1.532-1.466c1.186-.139 7.597-.077 10.33 2.396 0 0 .396.257.536.257.892 0 .614-.967.614-.967z" fill-rule="evenodd"></path></svg></span>回复</button><button type="button" class="Button CommentItemV2-hoverBtn Button--plain"><span style="display: inline-flex; align-items: center;">​<svg class="Zi Zi--Like" fill="currentColor" viewBox="0 0 24 24" width="16" height="16" style="transform: rotate(180deg); margin-right: 5px;"><path d="M14.445 9h5.387s2.997.154 1.95 3.669c-.168.51-2.346 6.911-2.346 6.911s-.763 1.416-2.86 1.416H8.989c-1.498 0-2.005-.896-1.989-2v-7.998c0-.987.336-2.032 1.114-2.639 4.45-3.773 3.436-4.597 4.45-5.83.985-1.13 3.2-.5 3.037 2.362C15.201 7.397 14.445 9 14.445 9zM3 9h2a1 1 0 0 1 1 1v10a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V10a1 1 0 0 1 1-1z" fill-rule="evenodd"></path></svg></span>踩</button><button type="button" class="Button CommentItemV2-hoverBtn Button--plain"><span style="display: inline-flex; align-items: center;">​<svg class="Zi Zi--Report" fill="currentColor" viewBox="0 0 24 24" width="16" height="16" style="margin-right: 5px;"><path d="M19.947 3.129c-.633.136-3.927.639-5.697.385-3.133-.45-4.776-2.54-9.949-.888-.997.413-1.277 1.038-1.277 2.019L3 20.808c0 .3.101.54.304.718a.97.97 0 0 0 .73.304c.275 0 .519-.102.73-.304.202-.179.304-.418.304-.718v-6.58c4.533-1.235 8.047.668 8.562.864 2.343.893 5.542.008 6.774-.657.397-.178.596-.474.596-.887V3.964c0-.599-.42-.972-1.053-.835z" fill-rule="evenodd"></path></svg></span>举报</button></div></div></div></div></li></ul></div><div class="CommentListV2-action"><div class="CommentListV2-expendCollapseButton"><span>15 条评论被折叠</span>（<a href="https://www.zhihu.com/question/52029856/answer/128623557" target="_blank" rel="noopener noreferrer">为什么？</a>）</div></div></div></div></div></div></div></main><div class="CornerButtons"><div class="CornerAnimayedFlex"><button data-tooltip="回到顶部" data-tooltip-position="left" data-tooltip-will-hide-on-click="true" aria-label="回到顶部" type="button" class="Button CornerButton Button--plain"><svg class="Zi Zi--BackToTop" aria-label="回到顶部" fill="currentColor" viewBox="0 0 24 24" width="24" height="24"><path d="M16.036 19.59a1 1 0 0 1-.997.995H9.032a.996.996 0 0 1-.997-.996v-7.005H5.03c-1.1 0-1.36-.633-.578-1.416L11.33 4.29a1.003 1.003 0 0 1 1.412 0l6.878 6.88c.782.78.523 1.415-.58 1.415h-3.004v7.005z"></path></svg></button></div></div></div></div><script nonce="" async="" src="./浅析Typescript设计模式 - 知乎_files/js"></script><script nonce="">function gtag(){dataLayer.push(arguments)}window.dataLayer=window.dataLayer||[],gtag("js",new Date),gtag("config","UA-149949619-1");</script><script id="js-clientConfig" type="text/json">{"host":"zhihu.com","protocol":"https:","wwwHost":"www.zhihu.com","fetchRoot":{"www":"https:\u002F\u002Fwww.zhihu.com","api":"https:\u002F\u002Fapi.zhihu.com","zhuanlan":"https:\u002F\u002Fzhuanlan.zhihu.com"}}</script><script id="js-initialData" type="text/json">{"initialState":{"common":{"ask":{}},"loading":{"global":{"count":0},"local":{"env\u002FgetIpinfo\u002F":false,"article\u002Fget\u002F":false,"brand\u002FgetUrl\u002F":false}},"club":{"tags":{},"admins":{"data":[]},"members":{"data":[]},"explore":{},"profile":{},"checkin":{},"comments":{"paging":{},"loading":{},"ids":{}},"postList":{"paging":{},"loading":{},"ids":{}},"recommend":{"data":[]}},"entities":{"users":{"du-shuai-27-14":{"isFollowed":false,"avatarUrlTemplate":"https:\u002F\u002Fpic3.zhimg.com\u002Fv2-24beed3d4509902870594de071dc9139_{size}.jpg","uid":"607477449035091968","userType":"people","isFollowing":false,"urlToken":"du-shuai-27-14","id":"0fa9314b51b2d02d69a85798999f6a67","description":"无","name":"江湖术士","isAdvertiser":false,"headline":"控制自己，少点发言，越学越觉得自己菜","gender":1,"url":"\u002Fpeople\u002F0fa9314b51b2d02d69a85798999f6a67","avatarUrl":"https:\u002F\u002Fpic3.zhimg.com\u002Fv2-24beed3d4509902870594de071dc9139_l.jpg","isOrg":false,"type":"people","vipInfo":{"isVip":true,"vipIcon":{"url":"https:\u002F\u002Fpic3.zhimg.com\u002Fv2-4812630bc27d642f7cafcd6cdeca3d7a_r.png","nightModeUrl":"https:\u002F\u002Fpic3.zhimg.com\u002Fv2-c9686ff064ea3579730756ac6c289978_r.png"}},"badge":[],"exposedMedal":{"medalId":"972462538273792000","medalName":"乐于交流","avatarUrl":"https:\u002F\u002Fpic4.zhimg.com\u002Fv2-edfd2ad9a3352b18d4514e4b4420b85d_r.png","miniAvatarUrl":"https:\u002F\u002Fpic3.zhimg.com\u002Fv2-b7b2a9e7993b67e7fb5a32192889f0dc_is.png","description":"评论 500 次"}}},"questions":{},"answers":{},"articles":{"43283016":{"trackUrl":["https:\u002F\u002Fsugar.zhihu.com\u002Fplutus_adreaper\u002Fpage_monitor_log?si=__SESSIONID__&ti=__ATOKEN__&at=view&pf=__OS__&ed=__MEMBERID__&idfa=__IDFA__&imei=__IMEI__&androidid=__ANDROIDID__&oaid=__OAID__&ci=__CREATIVEID__"],"id":43283016,"title":"浅析Typescript设计模式","type":"article","excerptTitle":"","url":"https:\u002F\u002Fzhuanlan.zhihu.com\u002Fp\u002F43283016","imageUrl":"https:\u002F\u002Fpic1.zhimg.com\u002Fv2-61440a19a5c778a2eccb2c7dee4064a6_b.jpg","titleImage":"https:\u002F\u002Fpic1.zhimg.com\u002Fv2-61440a19a5c778a2eccb2c7dee4064a6_b.jpg","excerpt":"设计模式就是软件开发过程中形成的\u003Cb\u003E套路\u003C\u002Fb\u003E，就如同你在玩lol中的“\u003Ci\u003E正方形打野\u003C\u002Fi\u003E”，“\u003Ci\u003E四一分推\u003C\u002Fi\u003E”，又或者篮球运动中的“\u003Ci\u003E二夹一\u003C\u002Fi\u003E”，“\u003Ci\u003E高位单打\u003C\u002Fi\u003E”一样，属于经验的总结。熟悉设计模式有什么好处呢？ 让你在编程过程中更有自信，使用经过无数前人印证过的最好的设计…","created":1535544297,"updated":1535614134,"author":{"isFollowed":false,"avatarUrlTemplate":"https:\u002F\u002Fpic3.zhimg.com\u002Fv2-24beed3d4509902870594de071dc9139_{size}.jpg","uid":"607477449035091968","userType":"people","isFollowing":false,"urlToken":"du-shuai-27-14","id":"0fa9314b51b2d02d69a85798999f6a67","description":"无","name":"江湖术士","isAdvertiser":false,"headline":"控制自己，少点发言，越学越觉得自己菜","gender":1,"url":"\u002Fpeople\u002F0fa9314b51b2d02d69a85798999f6a67","avatarUrl":"https:\u002F\u002Fpic3.zhimg.com\u002Fv2-24beed3d4509902870594de071dc9139_l.jpg","isOrg":false,"type":"people","vipInfo":{"isVip":true,"vipIcon":{"url":"https:\u002F\u002Fpic3.zhimg.com\u002Fv2-4812630bc27d642f7cafcd6cdeca3d7a_r.png","nightModeUrl":"https:\u002F\u002Fpic3.zhimg.com\u002Fv2-c9686ff064ea3579730756ac6c289978_r.png"}},"badge":[],"exposedMedal":{"medalId":"972462538273792000","medalName":"乐于交流","avatarUrl":"https:\u002F\u002Fpic4.zhimg.com\u002Fv2-edfd2ad9a3352b18d4514e4b4420b85d_r.png","miniAvatarUrl":"https:\u002F\u002Fpic3.zhimg.com\u002Fv2-b7b2a9e7993b67e7fb5a32192889f0dc_is.png","description":"评论 500 次"}},"commentPermission":"all","state":"published","imageWidth":500,"imageHeight":340,"content":"\u003Cp\u003E设计模式就是软件开发过程中形成的\u003Cb\u003E套路\u003C\u002Fb\u003E，就如同你在玩lol中的“\u003Ci\u003E正方形打野\u003C\u002Fi\u003E”，“\u003Ci\u003E四一分推\u003C\u002Fi\u003E”，又或者篮球运动中的“\u003Ci\u003E二夹一\u003C\u002Fi\u003E”，“\u003Ci\u003E高位单打\u003C\u002Fi\u003E”一样，属于经验的总结。\u003C\u002Fp\u003E\u003Cp\u003E熟悉设计模式有什么好处呢？\u003C\u002Fp\u003E\u003Col\u003E\u003Cli\u003E 让你在编程过程中更有自信，使用经过无数前人印证过的最好的设计，自然底气十足\u003Cbr\u002F\u003E \u003C\u002Fli\u003E\u003Cli\u003E 提升编程效率，避免开发过程中的犹豫\u003Cbr\u002F\u003E \u003C\u002Fli\u003E\u003Cli\u003E 更能掌控项目，方便预估开发时间，方便对团队成员进行管理\u003Cbr\u002F\u003E \u003C\u002Fli\u003E\u003C\u002Fol\u003E\u003Cp\u003E由于设计模式和软件开发的语言，平台都没有关系，因此，前端工程师对设计模式也是有需求的。\u003C\u002Fp\u003E\u003Cp\u003E\u003Cb\u003E设计模式是对人类工程历史总结，而不单单只是软件工程\u003C\u002Fb\u003E。\u003C\u002Fp\u003E\u003Cp\u003E现在大家谈的前端工程化，如果脱离设计模式，只能算徒有其表，\u003Cb\u003E设计模式才是工程化的灵魂\u003C\u002Fb\u003E。当然，既然是经验和历史总结，有时候并不需要系统地进行学习，口口相传也是可以的，但是单独系统地讲解设计模式，就是要将“\u003Ci\u003E公共知识\u003C\u002Fi\u003E”转变为“\u003Ci\u003E共有知识\u003C\u002Fi\u003E”，戳破皇帝的新衣，让大家真正能言之有物，交流通畅。\u003C\u002Fp\u003E\u003Ch2\u003E类型分类\u003C\u002Fh2\u003E\u003Cp\u003E可以将设计模式分为三种类型，分别为\u003Cb\u003E创建型\u003C\u002Fb\u003E，\u003Cb\u003E结构型\u003C\u002Fb\u003E，和\u003Cb\u003E行为型\u003C\u002Fb\u003E。\u003C\u002Fp\u003E\u003Cp\u003E创建型模式主要解决对象\u003Cb\u003E创建什么，由谁创建，何时创建\u003C\u002Fb\u003E的3w问题，对类的实例化进行了抽象，分离概念和实现，使得系统更加符合\u003Cb\u003E单一职责原则\u003C\u002Fb\u003E。\u003C\u002Fp\u003E\u003Cp\u003E结构型模式描述如何将类或者对象组合在一起，形成更大的数据结构，因此也可以分为类结构型和对象结构型。\u003C\u002Fp\u003E\u003Cp\u003E行为型模型对不同的对象划分责任和算法的抽象，关注类和对象之间的相互作用，同样也分为类和对象。\u003C\u002Fp\u003E\u003Cp\u003E可以看到三种类型的模式正好解决了编程中的数据结构从哪里来？如何组合？如何交流？的问题。\u003C\u002Fp\u003E\u003Chr\u002F\u003E\u003Ch2\u003E创建型模式\u003C\u002Fh2\u003E\u003Cp\u003E创建型模式一共有4个，分别为工厂（工厂，工厂方法，抽象工厂合并），建造者，原型，单例。\u003C\u002Fp\u003E\u003Ch2\u003E工厂模式\u003C\u002Fh2\u003E\u003Cblockquote\u003E 重要程度：⭐⭐⭐⭐⭐\u003Cbr\u002F\u003E 难度：⭐\u003Cbr\u002F\u003E 命名建议：xxxFactory，FactoryOfxxx\u003Cbr\u002F\u003E \u003C\u002Fblockquote\u003E\u003Cp\u003E工厂模式简而言之，就是要\u003Cb\u003E替代掉“new操作符”\u003C\u002Fb\u003E！\u003C\u002Fp\u003E\u003Cp\u003E为什么需要替代new操作符？\u003C\u002Fp\u003E\u003Cp\u003E因为有时候创建实例时需要大量的准备工作，而将这些准备工作全部放在构造函数中是非常危险的行为，有必要将创建实例的逻辑和使用实例的逻辑分开，方便以后扩展。\u003C\u002Fp\u003E\u003Cp\u003E举个例子：\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-js\"\u003E\u003Cspan class=\"k\"\u003Eclass\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EPeople\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n  \u003Cspan class=\"nx\"\u003Econstructor\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Edes\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"c1\"\u003E\u002F\u002F 出现异步不能使用async await\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E    \u003Cspan class=\"c1\"\u003E\u002F\u002F 函数调用时可能还未完成初始化\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E    \u003Cspan class=\"nx\"\u003Eget\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003E&#39;someUrl&#39;\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E).\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Ethen\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Edata\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E=&gt;\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n      \u003Cspan class=\"k\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Ename\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Edata\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Ename\u003C\u002Fspan\u003E\n      \u003Cspan class=\"nx\"\u003Eget\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003E&#39;someUrl?name=&#39;\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E+\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Ename\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E).\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Ethen\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Edata\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E=&gt;\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n        \u003Cspan class=\"k\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Eage\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Edata\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Eage\u003C\u002Fspan\u003E\n      \u003Cspan class=\"p\"\u003E})\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E})\u003C\u002Fspan\u003E\n    \u003Cspan class=\"c1\"\u003E\u002F\u002F 非成员函数耦合性变大\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E    \u003Cspan class=\"k\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Edes\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EhandleDes\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Edes\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n  \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp\u003E而使用Typescript，配合工厂模式，实现如下：\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-ts\"\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002F 还真别说，形式上好看的代码，质量一般都比较高\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"kr\"\u003Eclass\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EPeople\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n  \u003Cspan class=\"nx\"\u003Ename\u003C\u002Fspan\u003E: \u003Cspan class=\"kt\"\u003Estring\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"s1\"\u003E&#39;&#39;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"nx\"\u003Eage\u003C\u002Fspan\u003E: \u003Cspan class=\"kt\"\u003Enumber\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E0\u003C\u002Fspan\u003E\n  \u003Cspan class=\"nx\"\u003Edes\u003C\u002Fspan\u003E: \u003Cspan class=\"kt\"\u003Estring\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"s1\"\u003E&#39;&#39;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"kr\"\u003Econstructor\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Ename\u003C\u002Fspan\u003E: \u003Cspan class=\"kt\"\u003Estring\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Eage\u003C\u002Fspan\u003E: \u003Cspan class=\"kt\"\u003Enumber\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Edes\u003C\u002Fspan\u003E: \u003Cspan class=\"kt\"\u003Estring\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"k\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Ename\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Ename\u003C\u002Fspan\u003E\n    \u003Cspan class=\"k\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Eage\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Eage\u003C\u002Fspan\u003E\n    \u003Cspan class=\"k\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Edes\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Edes\u003C\u002Fspan\u003E\n  \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"nx\"\u003Easync\u003C\u002Fspan\u003E \u003Cspan class=\"kd\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EpeopleFactory\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Edescription\u003C\u002Fspan\u003E:\u003Cspan class=\"kt\"\u003Eany\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E){\u003C\u002Fspan\u003E\n  \u003Cspan class=\"kr\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Ename\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Eawait\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Eget\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003E&#39;someUrl&#39;\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n  \u003Cspan class=\"kr\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Eage\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Eawait\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Eget\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"s1\"\u003E&#39;someUrl?name=&#39;\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E+\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Ename\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n  \u003Cspan class=\"kr\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Edes\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003Ehandle\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Edescription\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n  \u003Cspan class=\"k\"\u003Ereturn\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Enew\u003C\u002Fspan\u003E \u003Cspan class=\"nx\"\u003EPeople\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Ename\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Eage\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"nx\"\u003Edes\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp\u003E这样的封装，能清楚地分离对象的创建和使用。同时，如果之后的类的定义发生了改变，可以直接修改People，创建类的准备数据发生了改变，则修改工厂函数。\u003C\u002Fp\u003E\u003Cp\u003E但是，选择工厂模式的原因是因为构造函数足够复杂或者对象的创建面临巨大的不确定性，只需要传入变量即可构造的情况下，用工厂函数实际上是得不偿失的。\u003C\u002Fp\u003E\u003Cp\u003E\u003Cb\u003E几乎所有的设计模式都会带来代码可读性下降的风险，因此需要找到代码可读性降低和可维护性，稳定性之间的平衡！\u003C\u002Fb\u003E\u003C\u002Fp\u003E\u003Cp\u003E你也可以用函数根据参数返回相应的工厂函数，又或者用一个类集中管理工厂函数来处理复杂度。\u003C\u002Fp\u003E\u003Ch2\u003E建造者模式\u003C\u002Fh2\u003E\u003Cblockquote\u003E 重要程度：⭐⭐⭐⭐\u003Cbr\u002F\u003E 难度：⭐⭐\u003Cbr\u002F\u003E 命名建议：xxxBuilder\u003Cbr\u002F\u003E \u003C\u002Fblockquote\u003E\u003Cp\u003E建造者模式用于直接构建复杂对象，比如上例中的构造函数参数，如果采用一个结构表示：\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-text\"\u003Econstructor(peopleConfig:any) {\n    this.name = peopleConfig.name\n    this.age = peopleConfig.age\n    this.des = peopleConfig.des\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp\u003E那么有必要将这个人对象的构建单独封装起来：\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-text\"\u003Eclass PeopleConfigBuilder{\n    name: string = &#39;&#39;\n    age: number = 0\n    des: string = &#39;&#39;\n    async buildName(){\n        this.name = await get(&#39;someUrl&#39;)\n    }\n    async buildAge(){\n        await get(&#39;someUrl?name=&#39;+this.name)\n    }\n    async buildDes(description: any){\n        this.des = handleDes(description)\n    }\n}\n\nclass People {\n  name: string = &#39;&#39;\n  age: number = 0\n  des: string = &#39;&#39;\n  constructor(peopleConfig: PeopleCofigBuilder) {\n    this.name = peopleConfig.name\n    this.age = peopleConfig.age\n    this.des = peopleConfig.des\n  }\n}\n\nasync function peopleFactory(description:any){\n  const builder = new PeopleConfigBuilder()\n  builder.buildName()\n  builder.buildAge()\n  builder.buildDes()\n  return new People(builder)\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp\u003E当然，仅仅三个属性的对象，远远没有达到复杂对象的程度，因此，只有在对象十分复杂的时候，才需要应用到建造者模式。\u003C\u002Fp\u003E\u003Ch2\u003E原型模式\u003C\u002Fh2\u003E\u003Cblockquote\u003E 重要程度：⭐⭐\u003Cbr\u002F\u003E 难度：⭐\u003Cbr\u002F\u003E 命名建议：xxxPrototype\u003Cbr\u002F\u003E \u003C\u002Fblockquote\u003E\u003Cp\u003E创建新对象时是基于一个对象的拷贝，而不是重新实例化一个类。\u003C\u002Fp\u003E\u003Cp\u003E举例说明，比如上例中的peopleConfig，其实peopleConfig应该是有固定模板的：\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-text\"\u003Efunction peopleConfigPrototype (){\n    return {\n        name: &#39;&#39;,\n        age: 0,\n        des: &#39;&#39;\n    }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp\u003E这样每次返回的都是新的对象，也可以相当于是对象的拷贝，但是如果直接拷贝对象，应该怎么写呢？\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-text\"\u003Econst peopleConfigPrototype = {\n    name: &#39;&#39;,\n    age: 0,\n    des: &#39;&#39;\n}\nconst peopleConfig = Object.create(peopleConfigPrototype)\n\u002F\u002F 采用Object.create方法，当前对象将被复制到peopleConfig的__proto__上\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp\u003E还有另一种方式进行对象拷贝，但是会丢掉对象中的函数：\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-text\"\u003Econst peopleConfig = JSON.parse(JSON.stringfy(peopleConfigProtytype))\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp\u003E注意JSON操作会阻塞线程，导致性能急剧下降，一般不考虑这种方式。\u003C\u002Fp\u003E\u003Ch2\u003E单例模式\u003C\u002Fh2\u003E\u003Cblockquote\u003E 重要程度：⭐⭐⭐⭐⭐\u003Cbr\u002F\u003E 难度：⭐⭐\u003Cbr\u002F\u003E 命名建议：xxxSingle，xxxSingleton，xxxUnum\u003Cbr\u002F\u003E \u003C\u002Fblockquote\u003E\u003Cp\u003E单例模式的目的是限制一个类只能被实例化一次，防止多次实例化。其中，根据类被实例化的时间，又被分为懒汉单例和饿汉单例。懒汉单例是指在第一次调用实例的时候实例化，饿汉单例是指在类加载的时候就实例化。\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-text\"\u003E\u002F* 懒汉单例 *\u002F\nclass PeopleSingle{\n    \u002F\u002F 静态成员instance\n    static instance = null\n    \u002F\u002F 私有构造函数\n    private constructor(){ }\n    public static getInstance(){\n        if(PeopleSingle.instance === null){\n            PeopleSingle.instance = new PeopleSingle()\n        }\n        return PeopleSingle.instance\n    }\n}\nPeopleSingle.getInstance()\n\n\u002F* 饿汉单例 *\u002F\nclass PeopleSingle{\n    static instance = new PeopleSingle()\n    private constructor(){ }\n}\nPeopleSingle.instance\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp\u003E四种创建模式都有其使用场景，需要针对使用场景进行组合，才能写出高质量的代码。\u003C\u002Fp\u003E\u003Chr\u002F\u003E\u003Ch2\u003E结构型模式\u003C\u002Fh2\u003E\u003Cp\u003E结构型模式一共有7种：适配器，桥接，组合，装饰，外观，享元，代理\u003C\u002Fp\u003E\u003Ch2\u003E适配器模式\u003C\u002Fh2\u003E\u003Cblockquote\u003E 重要程度：⭐⭐⭐⭐\u003Cbr\u002F\u003E 难度：⭐⭐⭐\u003Cbr\u002F\u003E 命名建议：xxxAdapter，xxxWraper\u003Cbr\u002F\u003E \u003C\u002Fblockquote\u003E\u003Cp\u003E想想你的转接头，实际上就是被适配对象（adaptee）上套上一层封装，将其接口与目标对象（target）相匹配，所以适配器又叫wraper（包皮）。\u003C\u002Fp\u003E\u003Cp\u003E比如，有一个目标类UsbC：\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-text\"\u003Eclass UsbC{\n    slowCharge(){\n        console.log(&#39;slow charging&#39;)\n    }\n    superCharge(){\n        console.log(&#39;super charging&#39;)\n    }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp\u003E有一个被适配目标MicroUsb：\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-text\"\u003Eclass MicroUsb{\n    slowCharge(){\n        console.log(&#39;slow charging&#39;)\n    }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp\u003E所以adapter是如此：\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-text\"\u003E\u002F\u002F 精髓在implements target上\nclass MicroToCAdapter implements UsbC{\n    microUsb: MicroUsb\n    constructor(microUsb: MicroUsb){\n        this.microUsb = microUsb\n    }\n    slowCharge(){\n        this.microUsb.slowCharge()\n    }\n    superCharge(){\n        console.log(&#39;cannot super charge, slow charging&#39;)\n    }\n}\n\n\n\u002F\u002F 这样就可以直接\nnew MicroTOCAdapter(new MicroUsb()).superCharge()\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp\u003E适配器模式对多个不同接口的匹配非常有效，实际情况中没有必要完全使用类来封装，一个函数也可以搞定。\u003C\u002Fp\u003E\u003Ch2\u003E桥接模式\u003C\u002Fh2\u003E\u003Cblockquote\u003E 重要程度：⭐⭐⭐⭐\u003Cbr\u002F\u003E 难度：⭐⭐⭐\u003Cbr\u002F\u003E 命名建议：xxxBridge，xxx（具体实现）\u003Cbr\u002F\u003E \u003C\u002Fblockquote\u003E\u003Cp\u003E桥接模式的主要目的，\u003Cb\u003E是将抽象与实现解耦\u003C\u002Fb\u003E，使得二者可以独立地进行变化，以应对不断更细的需求。\u003C\u002Fp\u003E\u003Cp\u003E其实通俗地来说，就是将所有概念想象成“灵魂——肉体”，凡是能用这个概念代入的，都可以用桥接模式重构。\u003C\u002Fp\u003E\u003Cp\u003E比如汽车这个概念和颜色这个概念，可以将颜色作为汽车的成员变量，但是当颜色变得更加复杂时，比如渐变，模糊，图案等属性加入，不得不将其解耦，桥接模式就很重要了。\u003C\u002Fp\u003E\u003Cp\u003E我们先定义抽象类Car和Color（Ts的抽象类功能对于实现之一模式非常重要）：\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-text\"\u003Eabstract class Color {\n  color: string\n  abstract draw(): void\n}\n\nabstract class Car {\n  color: Color\n  abstract setColor(color: Color): void\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp\u003E再定义其实例：\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-text\"\u003Eclass Red extends Color {\n  constructor() {\n    super()\n  }\n  draw() {\n    this.color = &#39;red&#39;\n  }\n}\n\nclass Van extends Car {\n  constructor() {\n    super()\n  }\n  setColor(color: Color) {\n    this.color = color\n  }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp\u003E抽象类和实现是解耦的，这时候我们如果要利用所有的类，就需要一个桥接类：\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-text\"\u003Eclass PaintingVanBridge {\n  van: Car\n  red: Color\n  constructor() {\n    this.red = new Red()\n    this.red.draw()\n    this.van = new Van()\n    this.van.setColor(this.red)\n  }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp\u003E桥接模式会增加大量代码，所以一定要在使用之前对功能模块有一个恰当的评估！\u003C\u002Fp\u003E\u003Ch2\u003E装饰模式\u003C\u002Fh2\u003E\u003Cblockquote\u003E 重要程度：⭐⭐⭐⭐⭐\u003Cbr\u002F\u003E 难度：⭐\u003Cbr\u002F\u003E 命名建议：xxxDecorator，xxx（具体实现）\u003Cbr\u002F\u003E \u003C\u002Fblockquote\u003E\u003Cp\u003E装饰模式是在现有类或对象的基础上，添加一些功能，使得类和对象具有新的表现。\u003C\u002Fp\u003E\u003Cp\u003E还是之前的Car和Color的问题，可以直接继承Car，添加颜色，这是一个装饰模式：\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-text\"\u003Eclass Car {\n  name: string\n  constructor(name: string) {\n    this.name = name\n  }\n}\n\nclass Benz extends Car {\n  color: string\n  constructor(name: string, color: string) {\n    super(name)\n    this.color = color\n  }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp\u003E但是采用继承的方式是静态的，而且会导致在继承复用的过程中耦合，比如Car2继承Car，在创建新的子类时错把Car2作为父类，结果就很容易出错了。\u003C\u002Fp\u003E\u003Cp\u003E为了解决这个问题，可以采用Ts的装饰器特性：\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-text\"\u003Efunction colorDecorator&lt;T extends { new(...args: any[]): {} }&gt;(color: string) {\n    return function (constructor: T) {\n        return class extends constructor {\n            name = &#39;shit&#39;\n            color = color\n        }\n    }\n}\n\n@colorDecorator&lt;Car&gt;(&#39;red&#39;)\nclass Car {\n    name: string\n    constructor(name: string) {\n        this.name = name\n    }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp\u003E装饰器会拦截Car的构造函数，生成一个继承自Car的新的类，这样更加灵活（但是注意这个过程只发生在构造函数阶段）。\u003C\u002Fp\u003E\u003Ch2\u003E外观模式\u003C\u002Fh2\u003E\u003Cblockquote\u003E 重要程度：⭐⭐⭐⭐⭐\u003Cbr\u002F\u003E 难度：⭐\u003Cbr\u002F\u003E 命名建议：xxx（具体实现）\u003Cbr\u002F\u003E \u003C\u002Fblockquote\u003E\u003Cp\u003E简单一句话总结：\u003Cb\u003E“封装复杂，接口简单”\u003C\u002Fb\u003E，为所有的子系统提供一致的接口，比如轮胎，方向盘和车。\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-text\"\u003Eclass Tyre{\n    name: string\n    constructor(name: string){\n        this.name = name\n    }\n}\n\nclass Steering{\n    turnRight(){}\n    turnLeft(){}\n}\n\ninterface CarConfig{\n    tyreName: string\n    ifTurnRight: boolean\n}\n\nclass Car{\n    tyre:Tyre\n    steering:Steering\n    constructor(carConfig: CarConfig){\n        this.tyre = new Tyre(carConfig.name)\n        this.steering = new Steering()\n        if(carConfig.ifTurnRight){\n            this.steering.turnRight\n        }\n    }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp\u003E可以活用Typescript的接口功能实现这一模式。\u003C\u002Fp\u003E\u003Ch2\u003E享元模式\u003C\u002Fh2\u003E\u003Cblockquote\u003E 重要程度：⭐\u003Cbr\u002F\u003E 难度：⭐⭐\u003Cbr\u002F\u003E 命名建议：xxx（具体实现）\u003Cbr\u002F\u003E \u003C\u002Fblockquote\u003E\u003Cp\u003E享元模式\u003Cb\u003E避免重新创建对象\u003C\u002Fb\u003E，其实只要有缓存对象的意思，并且共用一个对象实例，就是享元模式。\u003C\u002Fp\u003E\u003Cp\u003E比如需要对一个Car的实例进行展示（可以搭配工厂模式）：\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-text\"\u003Eclass Car{\n    name: string\n    color: string\n    changeColor(color: string){\n        this.color = color\n    }\n    changeName(name: string){\n        this.name = name\n    }\n}\n\nclass CarFactory{\n    static car: Car\n    static getCar():Car{\n        if(CarFactory.car === null){\n            CarFactory.car = new Car()\n        }\n        return CarFactory.car\n    }\n}\n\nCarFactory.getCar().changeColor(&#39;red&#39;)\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp\u003E注意，由于是使用的同一个引用，因此会存在修改的问题。\u003C\u002Fp\u003E\u003Ch2\u003E代理模式\u003C\u002Fh2\u003E\u003Cblockquote\u003E 重要程度：⭐⭐⭐⭐\u003Cbr\u002F\u003E 难度：⭐\u003Cbr\u002F\u003E 命名建议：xxxProxy\u003Cbr\u002F\u003E \u003C\u002Fblockquote\u003E\u003Cp\u003E对接口进行一定程度的隐藏，用于封装复杂类。\u003C\u002Fp\u003E\u003Cp\u003E比如Car有很多属性，我们只需要一个简单的版本：\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-text\"\u003Eclass Car{\n    a: number = 1\n    b: number = 2\n    c: number = 3\n    d: number = 4\n    name: string = &#39;name&#39;\n    test(){\n        console.log(&#39;this is test&#39;)\n    }\n}\n\nclass CarProxy{\n    private car: Car\n    name: number\n    constructor(){\n        if(this.car === null){\n            this.car = new Car\n        }\n        this.name = this.car.name\n    }\n    test(){\n        this.car.test()\n    }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Chr\u002F\u003E\u003Ch2\u003E\u003Cb\u003E行为型模式\u003C\u002Fb\u003E\u003C\u002Fh2\u003E\u003Cp\u003E行为型模式一共有5种：命令，中介者，观察者，状态，策略\u003C\u002Fp\u003E\u003Ch2\u003E\u003Cb\u003E命令模式\u003C\u002Fb\u003E\u003C\u002Fh2\u003E\u003Cblockquote\u003E重要程度：⭐⭐⭐⭐⭐\u003Cbr\u002F\u003E难度：⭐⭐\u003Cbr\u002F\u003E命名建议：xxxCommand\u003C\u002Fblockquote\u003E\u003Cp\u003E命令模式的主要目的是让\u003Cb\u003E请求者和响应者解耦\u003C\u002Fb\u003E，并集中管理。\u003C\u002Fp\u003E\u003Cp\u003E比如大家常用的请求，其实可以这样封装：\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-text\"\u003Efunction requestCommand(command: string){\n    let method = &#39;get&#39;\n    let queryString = &#39;&#39;\n    let data = null\n    let url = &#39;&#39;\n    const commandArr = command.split(&#39; &#39;)\n    url = commandArr.find(el=&gt;el.indexOf(&#39;http&#39;))\n    const methods = commandArr.filter(el=&gt;el[0]===&#39;-&#39;)\n    methods[0].replace(&#39;-&#39;,&#39;&#39;)\n    method = methods[0]\n    const query = commandArr.filter(el=&gt;el.indexOf(&#39;=&#39;))\n    if(query.length &gt; 0){\n        queryString = &#39;?&#39;\n        query.forEach(el=&gt;{\n            queryString += el + &#39;&amp;&#39;\n        })\n    }\n    const dataQuery = commandArr.filter(el=&gt;el[0]===&#39;{&#39;)\n    \u002F\u002F 对json的判断还不够细致\n    data = JSON.parse(dataQuery)\n    if(method === &#39;get&#39; || method === &#39;delete&#39;){\n        return axios[method](url+query)\n    }\n    return axios[method](url+query,data)\n}\n​\nrequestCommand(&#39;--get https:\u002F\u002Fwww.baidu.com name=1 test=2&#39;)\nrequestCommand(&#39;--post https:\u002F\u002Fwww.baidu.com {&#34;name&#34;=1,&#34;test&#34;:2}&#39;)\n​\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp\u003E注意命令模式需要提供详尽的文档，并且尽可能集中管理。\u003C\u002Fp\u003E\u003Ch2\u003E\u003Cb\u003E中介模式\u003C\u002Fb\u003E\u003C\u002Fh2\u003E\u003Cblockquote\u003E重要程度：⭐⭐⭐⭐⭐\u003Cbr\u002F\u003E难度：⭐⭐⭐⭐\u003Cbr\u002F\u003E命名建议：xxxCotroller，xxxMiddleWare，xxx(具体实现)\u003C\u002Fblockquote\u003E\u003Cp\u003E全权负责两个模块之间的通讯，比如\u003Cb\u003EMVC，MVVM\u003C\u002Fb\u003E就是非常典型的中介模式。\u003C\u002Fp\u003E\u003Cp\u003E中介模式，桥接模式，代理模式的区别是：\u003C\u002Fp\u003E\u003Cp\u003E\u003Cb\u003E代理模式一对一，只能代理特定类和对象，是对其的扩展或是约束。\u003C\u002Fb\u003E\u003C\u002Fp\u003E\u003Cp\u003E\u003Cb\u003E桥接模式一对多，是对类或对象成员或属性的扩展。\u003C\u002Fb\u003E\u003C\u002Fp\u003E\u003Cp\u003E\u003Cb\u003E中介模式多对多，全权承包所有两个概念间的关系。\u003C\u002Fb\u003E\u003C\u002Fp\u003E\u003Cp\u003E比如4s店，车，和买家之间的关系：\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-text\"\u003Eclass Car{\n    name: string = &#39;Benz&#39;\n}\n​\nclass Buyer{\n    name: string = &#39;Sam&#39;    \n    buy(car: Car){\n        console.log(`${this.name}购买了${car.name}`)\n    }  \n}\n​\nclass FourSShop{\n    constructor(){\n        const benz = new Car()\n        const sam = new Buyer()\n        sam.buy(benz)\n    }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp\u003E可以想象中介模式是一个立体的概念，可以理解成是两个概念发生关系的地点。\u003C\u002Fp\u003E\u003Ch2\u003E\u003Cb\u003E观察者模式\u003C\u002Fb\u003E\u003C\u002Fh2\u003E\u003Cblockquote\u003E重要程度：⭐⭐⭐⭐⭐\u003Cbr\u002F\u003E难度：⭐⭐⭐\u003Cbr\u002F\u003E命名建议：xxxObserver，xxxEventHandler\u003C\u002Fblockquote\u003E\u003Cp\u003E观察者模式的目的是为了\u003Cb\u003E“检测变更”\u003C\u002Fb\u003E，既然要检测变更，自然需要记录之前的信息：\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-text\"\u003Eclass Observer{\n    states: string[] = []\n    update(state: string){\n        this.states.push(state)\n    }\n}\n​\nclass People{\n    state: string = &#39;&#39;\n    observer: Observer\n    \u002F\u002F 可以用getter setter优化\n    setState(newState: string){\n        if(this.state !== newState){\n            this.state = newState\n            this.notify(this.state)\n        }\n    }\n    notify(state: string){\n        if(this.observer !== null){\n            this.observer.update(state)\n        }\n    }\n    setObserver(observer: Observer){\n        this.observer = observer\n    }\n}\n​\nconst observer = new Observer()\nconst people = new People().serObserver(observer)\n​\npeople.setState(&#39;shit&#39;)\nconsole.log(observer.state)\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp\u003E可以把观察者模式看成是\u003Cb\u003E“记录事件”\u003C\u002Fb\u003E，这对于理解观察者模式和状态模式区别很有帮助。\u003C\u002Fp\u003E\u003Cp\u003E实际上前端很多事件处理，就是基于观察者模式的，在上例中的update中的state，就是事件名称，js的事件循环会轮流处理states的状态变化。\u003C\u002Fp\u003E\u003Ch2\u003E\u003Cb\u003E状态模式\u003C\u002Fb\u003E\u003C\u002Fh2\u003E\u003Cblockquote\u003E重要程度：⭐⭐⭐⭐⭐\u003Cbr\u002F\u003E难度：⭐⭐⭐\u003Cbr\u002F\u003E命名建议：xxxState\u003C\u002Fblockquote\u003E\u003Cp\u003E与观察者模式相对，表示的是\u003Cb\u003E“记录状态”\u003C\u002Fb\u003E，只要状态变更，表现即不同，这是设计数据驱动的基础。\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-text\"\u003Eclass State{\n    tmp: string\n    set store(state: string){\n        if(this.tmp !== state){\n            \u002F\u002F do something\n            this.tmp = state\n        }\n    }\n    get store(): string{\n        return this.tmp\n    }\n}\n​\nclass People{\n    state: State\n    constructor(state: State){\n        this.state = state\n    }\n}\n​\nconst state = new State()\nconst people = new People(state)\n​\nstate.store = 1\nconsole.log(people.state.store)\n​\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp\u003E当然，如果一个数据接口既能记录事件，又能记录状态，可以么？\u003C\u002Fp\u003E\u003Cp\u003E\u003Cb\u003E这就是传说中的响应式数据流\u003C\u002Fb\u003E，也就是大家平时使用的ReactiveX。\u003C\u002Fp\u003E\u003Ch2\u003E\u003Cb\u003E策略模式\u003C\u002Fb\u003E\u003C\u002Fh2\u003E\u003Cblockquote\u003E重要程度：⭐⭐⭐\u003Cbr\u002F\u003E难度：⭐⭐⭐⭐\u003Cbr\u002F\u003E命名建议：xxxStratege\u003C\u002Fblockquote\u003E\u003Cp\u003E策略模式表示动态地修改行为，而行为有时候是一系列方法和对象的组合，与命令模式的区别也在这里。\u003C\u002Fp\u003E\u003Cp\u003E比如从中国到罗马，可以如此封装：\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-text\"\u003Eclass Location{\n    position: string\n    constructor(poosition: string){\n        this.position = position\n    }\n}\n​\nclass Stratege{\n    locations: Location [] = []\n    constructor(...locations){\n        this.locations = locations\n        console.log(&#39;路线经过了&#39;)\n        this.locations.forEach(el=&gt;{\n            console.log(el.position+&#39;,&#39;)\n        })\n    }\n}\n​\nclass Move{\n    start: Location\n    end: Location\n    stratege: Stratege\n    \n    constructor(){\n        this.start = new Location(&#39;1 1&#39;)\n        this.end = new Location(&#39;0 0&#39;)\n        const sea = new Location(&#39;0 1&#39;)\n        const land = new Location(&#39;1 0&#39;)\n        this.stratege = new Stratege(this.start,sea,this.end)\n    }\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp class=\"ztext-empty-paragraph\"\u003E\u003Cbr\u002F\u003E\u003C\u002Fp\u003E\u003Chr\u002F\u003E\u003Cp class=\"ztext-empty-paragraph\"\u003E\u003Cbr\u002F\u003E\u003C\u002Fp\u003E\u003Cp\u003E设计模式根植于面向对象思想，也就是任何实现都要区分概念（类）和实例（对象），也就是要分清楚白马和马，这样才能竟可能减轻扩展和团队协作的负担。\u003C\u002Fp\u003E\u003Cp\u003E但是任何东西有利就有弊，扬长避短才是我们应该在意的方向。\u003C\u002Fp\u003E","adminClosedComment":false,"topics":[{"url":"https:\u002F\u002Fwww.zhihu.com\u002Fapi\u002Fv4\u002Ftopics\u002F19552521","type":"topic","id":"19552521","name":"JavaScript"},{"url":"https:\u002F\u002Fwww.zhihu.com\u002Fapi\u002Fv4\u002Ftopics\u002F19766226","type":"topic","id":"19766226","name":"TypeScript"},{"url":"https:\u002F\u002Fwww.zhihu.com\u002Fapi\u002Fv4\u002Ftopics\u002F20015467","type":"topic","id":"20015467","name":"Angular​"}],"voteupCount":401,"voting":0,"column":{"description":"世间洞明皆学问，打破固有的工作模式，追求更高的效率和更优雅的设计！","canManage":false,"intro":"前端编程过程中的随笔","isFollowing":false,"urlToken":"plightfield","id":"plightfield","articlesCount":17,"acceptSubmission":true,"title":"前端备忘录","url":"https:\u002F\u002Fzhuanlan.zhihu.com\u002Fplightfield","commentPermission":"all","created":1505728949,"updated":1591388815,"imageUrl":"https:\u002F\u002Fpic2.zhimg.com\u002Fv2-21072a9b372fae04658a4224cc498707_b.jpg","author":{"isFollowed":false,"avatarUrlTemplate":"https:\u002F\u002Fpic3.zhimg.com\u002Fv2-24beed3d4509902870594de071dc9139_{size}.jpg","uid":"607477449035091968","userType":"people","isFollowing":false,"urlToken":"du-shuai-27-14","id":"0fa9314b51b2d02d69a85798999f6a67","description":"无","name":"江湖术士","isAdvertiser":false,"headline":"控制自己，少点发言，越学越觉得自己菜","gender":1,"url":"\u002Fpeople\u002F0fa9314b51b2d02d69a85798999f6a67","avatarUrl":"https:\u002F\u002Fpic3.zhimg.com\u002Fv2-24beed3d4509902870594de071dc9139_l.jpg","isOrg":false,"type":"people"},"followers":301,"type":"column"},"commentCount":39,"contributions":[{"id":1986177,"state":"accepted","type":"first_publish","column":{"description":"世间洞明皆学问，打破固有的工作模式，追求更高的效率和更优雅的设计！","canManage":false,"intro":"前端编程过程中的随笔","isFollowing":false,"urlToken":"plightfield","id":"plightfield","articlesCount":17,"acceptSubmission":true,"title":"前端备忘录","url":"https:\u002F\u002Fzhuanlan.zhihu.com\u002Fplightfield","commentPermission":"all","created":1505728949,"updated":1591388815,"imageUrl":"https:\u002F\u002Fpic2.zhimg.com\u002Fv2-21072a9b372fae04658a4224cc498707_b.jpg","author":{"isFollowed":false,"avatarUrlTemplate":"https:\u002F\u002Fpic3.zhimg.com\u002Fv2-24beed3d4509902870594de071dc9139_{size}.jpg","uid":"607477449035091968","userType":"people","isFollowing":false,"urlToken":"du-shuai-27-14","id":"0fa9314b51b2d02d69a85798999f6a67","description":"无","name":"江湖术士","isAdvertiser":false,"headline":"控制自己，少点发言，越学越觉得自己菜","gender":1,"url":"\u002Fpeople\u002F0fa9314b51b2d02d69a85798999f6a67","avatarUrl":"https:\u002F\u002Fpic3.zhimg.com\u002Fv2-24beed3d4509902870594de071dc9139_l.jpg","isOrg":false,"type":"people"},"followers":301,"type":"column"}}],"isTitleImageFullScreen":false,"upvotedFollowees":[],"commercialInfo":{"isCommercial":false,"plugin":{}},"suggestEdit":{"status":false,"reason":"","tip":"","url":"","title":""},"reason":"","annotationAction":[],"canTip":true,"tipjarorsCount":2,"isLabeled":false,"hasPublishingDraft":false,"isFavorited":false,"isNormal":true,"status":0,"shareText":"浅析Typescript设计模式 - 来自知乎专栏「前端备忘录」，作者: 江湖术士 https:\u002F\u002Fzhuanlan.zhihu.com\u002Fp\u002F43283016 （想看更多？下载 @知乎 App：http:\u002F\u002Fweibo.com\u002Fp\u002F100404711598 ）","canComment":{"status":true,"reason":""},"mcnFpShow":-1,"isVisible":true,"isLiked":false,"likedCount":3,"visibleOnlyToAuthor":false,"hasColumn":true}},"columns":{"plightfield":{"description":"世间洞明皆学问，打破固有的工作模式，追求更高的效率和更优雅的设计！","canManage":false,"intro":"前端编程过程中的随笔","isFollowing":false,"urlToken":"plightfield","id":"plightfield","articlesCount":17,"acceptSubmission":true,"title":"前端备忘录","url":"https:\u002F\u002Fzhuanlan.zhihu.com\u002Fplightfield","commentPermission":"all","created":1505728949,"updated":1591388815,"imageUrl":"https:\u002F\u002Fpic2.zhimg.com\u002Fv2-21072a9b372fae04658a4224cc498707_b.jpg","author":{"isFollowed":false,"avatarUrlTemplate":"https:\u002F\u002Fpic3.zhimg.com\u002Fv2-24beed3d4509902870594de071dc9139_{size}.jpg","uid":"607477449035091968","userType":"people","isFollowing":false,"urlToken":"du-shuai-27-14","id":"0fa9314b51b2d02d69a85798999f6a67","description":"无","name":"江湖术士","isAdvertiser":false,"headline":"控制自己，少点发言，越学越觉得自己菜","gender":1,"url":"\u002Fpeople\u002F0fa9314b51b2d02d69a85798999f6a67","avatarUrl":"https:\u002F\u002Fpic3.zhimg.com\u002Fv2-24beed3d4509902870594de071dc9139_l.jpg","isOrg":false,"type":"people"},"followers":301,"type":"column"}},"topics":{},"roundtables":{},"favlists":{},"comments":{},"notifications":{},"ebooks":{},"activities":{},"feeds":{},"pins":{},"promotions":{},"drafts":{},"chats":{},"posts":{},"clubs":{},"clubTags":{}},"currentUser":"","account":{"lockLevel":{},"unlockTicketStatus":false,"unlockTicket":null,"challenge":[],"errorStatus":false,"message":"","isFetching":false,"accountInfo":{},"urlToken":{"loading":false}},"settings":{"socialBind":null,"inboxMsg":null,"notification":{},"email":{},"privacyFlag":null,"blockedUsers":{"isFetching":false,"paging":{"pageNo":1,"pageSize":6},"data":[]},"blockedFollowees":{"isFetching":false,"paging":{"pageNo":1,"pageSize":6},"data":[]},"ignoredTopics":{"isFetching":false,"paging":{"pageNo":1,"pageSize":6},"data":[]},"restrictedTopics":null,"laboratory":{}},"notification":{},"people":{"profileStatus":{},"activitiesByUser":{},"answersByUser":{},"answersSortByVotesByUser":{},"answersIncludedByUser":{},"votedAnswersByUser":{},"thankedAnswersByUser":{},"voteAnswersByUser":{},"thankAnswersByUser":{},"topicAnswersByUser":{},"zvideosByUser":{},"articlesByUser":{},"articlesSortByVotesByUser":{},"articlesIncludedByUser":{},"pinsByUser":{},"questionsByUser":{},"commercialQuestionsByUser":{},"favlistsByUser":{},"followingByUser":{},"followersByUser":{},"mutualsByUser":{},"followingColumnsByUser":{},"followingQuestionsByUser":{},"followingFavlistsByUser":{},"followingTopicsByUser":{},"publicationsByUser":{},"columnsByUser":{},"allFavlistsByUser":{},"brands":null,"creationsByUser":{},"creationsSortByVotesByUser":{},"creationsFeed":{}},"env":{"ab":{"config":{"experiments":[{"expId":"launch-qa_cl_guest-2","expPrefix":"qa_cl_guest","isDynamicallyUpdated":true,"isRuntime":false,"includeTriggerInfo":false},{"expId":"launch-us_foltopic_user-10","expPrefix":"us_foltopic_user","isDynamicallyUpdated":true,"isRuntime":false,"includeTriggerInfo":false},{"expId":"launch-vd_bullet_second-2","expPrefix":"vd_bullet_second","isDynamicallyUpdated":true,"isRuntime":false,"includeTriggerInfo":false},{"expId":"launch-vd_profile_video-11","expPrefix":"vd_profile_video","isDynamicallyUpdated":true,"isRuntime":false,"includeTriggerInfo":false},{"expId":"launch-vd_video_replay-3","expPrefix":"vd_video_replay","isDynamicallyUpdated":true,"isRuntime":false,"includeTriggerInfo":false},{"expId":"launch-vd_zvideo_link-10","expPrefix":"vd_zvideo_link","isDynamicallyUpdated":true,"isRuntime":false,"includeTriggerInfo":false},{"expId":"se_topicfeed-4","expPrefix":"se_topicfeed","isDynamicallyUpdated":true,"isRuntime":false,"includeTriggerInfo":false}],"params":[{"id":"zr_rec_answer_cp","type":"String","value":"open","chainId":"_all_"},{"id":"se_page_quality","type":"String","value":"1","chainId":"_all_"},{"id":"top_v_album","type":"String","value":"1","chainId":"_all_"},{"id":"web_mweb_rec_length","type":"String","value":"1"},{"id":"li_vip_verti_search","type":"String","value":"0","chainId":"_all_"},{"id":"zw_sameq_sorce","type":"String","value":"999","chainId":"_all_"},{"id":"se_merger_v2","type":"String","value":"1","chainId":"_all_"},{"id":"tp_discover","type":"String","value":"0","chainId":"_all_"},{"id":"pf_newguide_vertical","type":"String","value":"0","chainId":"_all_"},{"id":"gue_bullet_second","type":"String","value":"1"},{"id":"web_enforce_qr","type":"String","value":"0"},{"id":"li_training_chapter","type":"String","value":"0","chainId":"_all_"},{"id":"web_answer_list_ad","type":"String","value":"1"},{"id":"se_oneboxtopic","type":"String","value":"1","chainId":"_all_"},{"id":"soc_adweeklynew","type":"String","value":"2","chainId":"_all_"},{"id":"gue_video_autoplay","type":"String","value":"0"},{"id":"gue_video_guide","type":"String","value":"0"},{"id":"li_answer_card","type":"String","value":"0","chainId":"_all_"},{"id":"gue_goods_card","type":"String","value":"0"},{"id":"web_answerlist_ad","type":"String","value":"0"},{"id":"pf_noti_entry_num","type":"String","value":"0","chainId":"_all_"},{"id":"web_unfriendly_comm","type":"String","value":"0"},{"id":"se_dnn_mt_v2","type":"String","value":"0","chainId":"_all_"},{"id":"tp_club_entrance","type":"String","value":"1","chainId":"_all_"},{"id":"se_searchvideo","type":"String","value":"3","chainId":"_all_"},{"id":"tp_club__entrance2","type":"String","value":"0","chainId":"_all_"},{"id":"soc_feed_intelligent","type":"String","value":"0","chainId":"_all_"},{"id":"gue_video_replay","type":"String","value":"2"},{"id":"gue_zvideo_title","type":"String","value":"0"},{"id":"gue_visit_n_artcard","type":"String","value":"0"},{"id":"web_column_auto_invite","type":"String","value":"0"},{"id":"zr_art_rec","type":"String","value":"base","chainId":"_all_"},{"id":"se_adsrank","type":"String","value":"4","chainId":"_all_"},{"id":"se_specialbutton","type":"String","value":"0","chainId":"_all_"},{"id":"zr_zr_search_sims","type":"String","value":"0","chainId":"_all_"},{"id":"zr_training_first","type":"String","value":"false","chainId":"_all_"},{"id":"web_audit_01","type":"String","value":"case1"},{"id":"se_v039","type":"String","value":"0","chainId":"_all_"},{"id":"se_sug_term","type":"String","value":"0","chainId":"_all_"},{"id":"tp_dingyue_video","type":"String","value":"0","chainId":"_all_"},{"id":"li_catalog_card","type":"String","value":"1","chainId":"_all_"},{"id":"se_col_boost","type":"String","value":"0","chainId":"_all_"},{"id":"se_colorfultab","type":"String","value":"1","chainId":"_all_"},{"id":"tp_club_feed","type":"String","value":"0","chainId":"_all_"},{"id":"ug_goodcomment_0","type":"String","value":"1","chainId":"_all_"},{"id":"li_topics_search","type":"String","value":"0","chainId":"_all_"},{"id":"li_answer_test","type":"String","value":"3","chainId":"_all_"},{"id":"gue_art2qa","type":"String","value":"0"},{"id":"tp_club_reactionv2","type":"String","value":"0","chainId":"_all_"},{"id":"top_test_4_liguangyi","type":"String","value":"1","chainId":"_all_"},{"id":"web_mweb_launch","type":"String","value":"1"},{"id":"web_collection_guest","type":"String","value":"1"},{"id":"se_v038","type":"String","value":"0","chainId":"_all_"},{"id":"zr_rel_search","type":"String","value":"base","chainId":"_all_"},{"id":"se_hotsearch","type":"String","value":"0","chainId":"_all_"},{"id":"se_whitelist","type":"String","value":"0","chainId":"_all_"},{"id":"se_clubrank","type":"String","value":"1","chainId":"_all_"},{"id":"se_video_dnn","type":"String","value":"1","chainId":"_all_"},{"id":"li_ebook_gen_search","type":"String","value":"0","chainId":"_all_"},{"id":"gue_self_censoring","type":"String","value":"1"},{"id":"zr_training_boost","type":"String","value":"false","chainId":"_all_"},{"id":"se_mobilecard","type":"String","value":"0","chainId":"_all_"},{"id":"ug_newtag","type":"String","value":"1","chainId":"_all_"},{"id":"zr_test_aa1","type":"String","value":"0","chainId":"_all_"},{"id":"se_bsi","type":"String","value":"0","chainId":"_all_"},{"id":"gue_zvideo_link","type":"String","value":"1"},{"id":"web_ad_banner","type":"String","value":"0"},{"id":"li_svip_tab_search","type":"String","value":"1","chainId":"_all_"},{"id":"zr_expslotpaid","type":"String","value":"1","chainId":"_all_"},{"id":"se_cardrank_4","type":"String","value":"1","chainId":"_all_"},{"id":"tp_move_scorecard","type":"String","value":"0","chainId":"_all_"},{"id":"tp_club_feedv3","type":"String","value":"0","chainId":"_all_"},{"id":"top_universalebook","type":"String","value":"1","chainId":"_all_"},{"id":"pf_profile2_tab","type":"String","value":"0","chainId":"_all_"},{"id":"web_heifetz_grow_ad","type":"String","value":"1"},{"id":"se_new_cbert","type":"String","value":"0","chainId":"_all_"},{"id":"se_hotmore","type":"String","value":"2","chainId":"_all_"},{"id":"ls_fmp4","type":"String","value":"0","chainId":"_all_"},{"id":"li_literature","type":"String","value":"0","chainId":"_all_"},{"id":"zr_search_sims","type":"String","value":"0","chainId":"_all_"},{"id":"se_entity22","type":"String","value":"0","chainId":"_all_"},{"id":"se_searchwiki","type":"String","value":"0","chainId":"_all_"},{"id":"se_clarify","type":"String","value":"0","chainId":"_all_"},{"id":"li_answer_test_2","type":"String","value":"0","chainId":"_all_"},{"id":"li_svip_cardshow","type":"String","value":"1","chainId":"_all_"},{"id":"li_paid_answer_exp","type":"String","value":"0","chainId":"_all_"},{"id":"soc_iosweeklynew","type":"String","value":"2","chainId":"_all_"},{"id":"gue_profile_video","type":"String","value":"1"},{"id":"ls_recommend_test","type":"String","value":"0","chainId":"_all_"},{"id":"tp_score_1","type":"String","value":"a","chainId":"_all_"},{"id":"tp_header_style","type":"String","value":"1","chainId":"_all_"},{"id":"se_new_bert","type":"String","value":"0","chainId":"_all_"},{"id":"tp_topic_entry","type":"String","value":"0","chainId":"_all_"},{"id":"ls_vessay_trans","type":"String","value":"0","chainId":"_all_"},{"id":"ls_video_commercial","type":"String","value":"0","chainId":"_all_"},{"id":"web_sem_ab","type":"String","value":"1"},{"id":"li_panswer_topic","type":"String","value":"0","chainId":"_all_"},{"id":"gue_card_test","type":"String","value":"1"},{"id":"tp_topic_tab_new","type":"String","value":"0-0-0","chainId":"_all_"},{"id":"se_expired_ob","type":"String","value":"0","chainId":"_all_"},{"id":"se_cardrank_2","type":"String","value":"1","chainId":"_all_"},{"id":"se_videobox","type":"String","value":"0","chainId":"_all_"},{"id":"qap_labeltype","type":"String","value":"1","chainId":"_all_"},{"id":"top_quality","type":"String","value":"0","chainId":"_all_"},{"id":"zr_search_sim2","type":"String","value":"0","chainId":"_all_"},{"id":"se_video_dnn_2","type":"String","value":"0","chainId":"_all_"},{"id":"se_v043","type":"String","value":"0","chainId":"_all_"},{"id":"top_hotcommerce","type":"String","value":"1","chainId":"_all_"},{"id":"pf_creator_card","type":"String","value":"1","chainId":"_all_"},{"id":"li_viptab_name","type":"String","value":"0","chainId":"_all_"},{"id":"li_video_section","type":"String","value":"0","chainId":"_all_"},{"id":"qap_question_visitor","type":"String","value":" 0","chainId":"_all_"},{"id":"gue_zvideo_55s","type":"String","value":"0"},{"id":"tp_movie_ux","type":"String","value":"0","chainId":"_all_"},{"id":"tsp_ad_cardredesign","type":"String","value":"0","chainId":"_all_"},{"id":"pf_fuceng","type":"String","value":"1","chainId":"_all_"},{"id":"top_ydyq","type":"String","value":"X","chainId":"_all_"},{"id":"se_college","type":"String","value":"default","chainId":"_all_"},{"id":"se_ffzx_jushen1","type":"String","value":"0","chainId":"_all_"},{"id":"se_club_boost","type":"String","value":"1","chainId":"_all_"},{"id":"se_web0answer","type":"String","value":"0","chainId":"_all_"},{"id":"gue_q_intercept","type":"String","value":"0"},{"id":"zr_search_paid","type":"String","value":"1","chainId":"_all_"},{"id":"zr_slotpaidexp","type":"String","value":"1","chainId":"_all_"},{"id":"li_se_section","type":"String","value":"1","chainId":"_all_"},{"id":"se_content0","type":"String","value":"1","chainId":"_all_"},{"id":"tsp_ios_cardredesign","type":"String","value":"0","chainId":"_all_"},{"id":"se_cbert_index","type":"String","value":"1","chainId":"_all_"},{"id":"tsp_hotlist_ui","type":"String","value":"1","chainId":"_all_"},{"id":"web_creator_route","type":"String","value":"1"},{"id":"gue_push2follow","type":"String","value":"0"},{"id":"zr_slot_training","type":"String","value":"1","chainId":"_all_"},{"id":"se_multianswer","type":"String","value":"2","chainId":"_all_"},{"id":"se_v040","type":"String","value":"0","chainId":"_all_"},{"id":"li_yxzl_new_style_a","type":"String","value":"1","chainId":"_all_"},{"id":"se_relation_1","type":"String","value":"2","chainId":"_all_"},{"id":"se_v2_highlight","type":"String","value":"1","chainId":"_all_"},{"id":"gue_bullet_guide","type":"String","value":"发个弹幕聊聊…"},{"id":"zr_km_answer","type":"String","value":"open_cvr","chainId":"_all_"},{"id":"tp_sft","type":"String","value":"a","chainId":"_all_"},{"id":"soc_notification","type":"String","value":"1","chainId":"_all_"},{"id":"se_multi_images","type":"String","value":"0","chainId":"_all_"},{"id":"se_billboardsearch","type":"String","value":"0","chainId":"_all_"},{"id":"qap_question_author","type":"String","value":"0","chainId":"_all_"},{"id":"zr_ans_rec","type":"String","value":"gbrank","chainId":"_all_"},{"id":"se_topicfeed","type":"String","value":"1","chainId":"_all_"},{"id":"ug_follow_topic_1","type":"String","value":"2","chainId":"_all_"},{"id":"tp_meta_card","type":"String","value":"0","chainId":"_all_"},{"id":"tp_topic_style","type":"String","value":"0","chainId":"_all_"},{"id":"pf_foltopic_usernum","type":"String","value":"50","chainId":"_all_"},{"id":"zr_search_topic","type":"String","value":"0","chainId":"_all_"},{"id":"se_aa_base","type":"String","value":"0","chainId":"_all_"},{"id":"se_v040_2","type":"String","value":"0","chainId":"_all_"},{"id":"se_cardrank_3","type":"String","value":"0","chainId":"_all_"},{"id":"tp_club_qa_entrance","type":"String","value":"0","chainId":"_all_"},{"id":"tp_topic_tab","type":"String","value":"0","chainId":"_all_"},{"id":"tp_m_intro_re_topic","type":"String","value":"1","chainId":"_all_"},{"id":"li_salt_hot","type":"String","value":"1","chainId":"_all_"},{"id":"qap_thanks","type":"String","value":"1","chainId":"_all_"},{"id":"se_backsearch","type":"String","value":"0","chainId":"_all_"},{"id":"gue_v_serial","type":"String","value":"1"},{"id":"ls_videoad","type":"String","value":"2","chainId":"_all_"},{"id":"tp_club_flow_ai","type":"String","value":"0","chainId":"_all_"},{"id":"top_root","type":"String","value":"0","chainId":"_all_"},{"id":"se_hotsearch_2","type":"String","value":"1","chainId":"_all_"},{"id":"se_zvideo_bert","type":"String","value":"1","chainId":"_all_"},{"id":"tp_club_feedv2","type":"String","value":"1","chainId":"_all_"},{"id":"top_ebook","type":"String","value":"0","chainId":"_all_"},{"id":"pf_adjust","type":"String","value":"0","chainId":"_all_"},{"id":"zr_intervene","type":"String","value":"0","chainId":"_all_"},{"id":"se_relationship","type":"String","value":"1","chainId":"_all_"},{"id":"tp_club_top","type":"String","value":"0","chainId":"_all_"}],"chains":[{"chainId":"_all_"}]},"triggers":{}},"userAgent":{"Edge":false,"Wechat":false,"Weibo":false,"QQ":false,"MQQBrowser":false,"Qzone":false,"Mobile":false,"Android":false,"iOS":false,"isAppleDevice":true,"Zhihu":false,"ZhihuHybrid":false,"isBot":false,"Tablet":false,"UC":false,"Sogou":false,"Qihoo":false,"Baidu":false,"BaiduApp":false,"Safari":false,"GoogleBot":false,"AndroidDaily":false,"iOSDaily":false,"isWebView":false,"origin":"Mozilla\u002F5.0 (Macintosh; Intel Mac OS X 10_15_4) AppleWebKit\u002F537.36 (KHTML, like Gecko) Chrome\u002F79.0.3945.130 Safari\u002F537.36"},"appViewConfig":{},"ctx":{"path":"\u002Fp\u002F43283016","query":{},"href":"http:\u002F\u002Fzhuanlan.zhihu.com\u002Fp\u002F43283016","host":"zhuanlan.zhihu.com"},"trafficSource":"production","edition":{"beijing":false,"baidu":false,"sogou":false,"baiduBeijing":false,"sogouBeijing":false,"sogouInput":false,"miniProgram":false},"theme":"light","enableShortcut":true,"referer":"","conf":{},"ipInfo":{"cityName":"成都","countryName":"中国","regionName":"四川","countryCode":"CN"},"logged":false},"me":{"columnContributions":[]},"label":{"recognizerLists":{}},"ecommerce":{},"comments":{"pagination":{},"collapsed":{},"reverse":{},"reviewing":{},"conversation":{},"parent":{}},"commentsV2":{"stickers":[],"commentWithPicPermission":{},"notificationsComments":{},"pagination":{},"collapsed":{},"reverse":{},"reviewing":{},"conversation":{},"conversationMore":{},"parent":{}},"pushNotifications":{"default":{"isFetching":false,"isDrained":false,"ids":[]},"follow":{"isFetching":false,"isDrained":false,"ids":[]},"vote_thank":{"isFetching":false,"isDrained":false,"ids":[]},"currentTab":"default","notificationsCount":{"default":0,"follow":0,"vote_thank":0}},"messages":{"data":{},"currentTab":"common","messageCount":0},"register":{"registerValidateSucceeded":null,"registerValidateErrors":{},"registerConfirmError":null,"sendDigitsError":null,"registerConfirmSucceeded":null},"login":{"loginUnregisteredError":false,"loginBindWechatError":false,"loginConfirmError":null,"sendDigitsError":null,"needSMSIdentify":false,"validateDigitsError":false,"loginConfirmSucceeded":null,"qrcodeLoginToken":"","qrcodeLoginScanStatus":0,"qrcodeLoginError":null,"qrcodeLoginReturnNewToken":false},"active":{"sendDigitsError":null,"activeConfirmSucceeded":null,"activeConfirmError":null},"switches":{},"captcha":{"captchaNeeded":false,"captchaValidated":false,"captchaBase64String":null,"captchaValidationMessage":null,"loginCaptchaExpires":false},"sms":{"supportedCountries":[]},"chat":{"chats":{},"inbox":{"recents":{"isFetching":false,"isDrained":false,"isPrevDrained":false,"result":[],"next":null,"key":null},"strangers":{"isFetching":false,"isDrained":false,"isPrevDrained":false,"result":[],"next":null,"key":null},"friends":{"isFetching":false,"isDrained":false,"isPrevDrained":false,"result":[],"next":null,"key":null},"search":{"isFetching":false,"isDrained":false,"isPrevDrained":false,"result":[],"next":null,"key":null},"config":{"newCount":0,"strangerMessageSwitch":false,"strangerMessageUnread":false,"friendCount":0}},"global":{"isChatMqttExisted":false}},"emoticons":{"emoticonGroupList":[],"emoticonGroupDetail":{}},"creator":{"currentCreatorUrlToken":null,"homeData":{"recommendQuestions":[]},"tools":{"question":{"invitationCount":{"questionFolloweeCount":0,"questionTotalCount":0},"goodatTopics":[]},"customPromotion":{"itemLists":{}},"recommend":{"recommendTimes":{}}},"explore":{"academy":{"tabs":[],"article":{}}},"rights":[],"rightsStatus":{},"levelUpperLimit":10,"account":{"growthLevel":{}},"mcn":{},"applyStatus":{}},"recommendation":{"homeRecommendations":[]},"shareTexts":{},"articles":{"voters":{}},"previewPost":{},"favlists":{"relations":{}},"columns":{"voters":{}},"reward":{"answer":{},"article":{},"question":{}},"video":{"data":{},"shareVideoDetail":{},"last":{}},"topstory":{"recommend":{"isFetching":false,"isDrained":false,"afterId":0,"items":[],"next":null},"follow":{"isFetching":false,"isDrained":false,"afterId":0,"items":[],"next":null},"followWonderful":{"isFetching":false,"isDrained":false,"afterId":0,"items":[],"next":null},"sidebar":null,"announcement":{},"hotListCategories":[],"hotList":[],"guestFeeds":{"isFetching":false,"isDrained":false,"afterId":0,"items":[],"next":null},"followExtra":{"isNewUser":null,"isFetched":false,"followCount":0,"followers":[]}},"readStatus":{},"column":{},"requestColumn":{"categories":[],"error":null},"articleContribution":{"contributeRequests":[],"deleteContributeIdList":[],"handledContributeIdList":[],"recommendedColumns":[],"pinnedColumns":[],"sentContributeRequestsIdList":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"plightfield"]},"columnContribution":{"contributeRequests":[],"autoInviteEnabled":false,"recommendedContributors":[],"contributionInvitation":null},"draftHistory":{"history":{},"drafts":{}},"upload":{},"articleDraft":{"titleImage":"","titleImageSize":{},"isTitleImageFullScreen":false,"canTitleImageFullScreen":false,"title":"","titleImageUploading":false,"error":"","content":"","draftLoading":false,"updating":false,"globalLoading":false,"pendingVideo":{"resource":null,"error":null},"deleteFail":{"fail":false},"recommendTopics":[],"selectedColumn":0,"articleDisclaimers":[]},"articleDrafts":{"isDrained":false,"isLoading":false,"items":[]},"columnAutocomplete":{"users":[],"friends":[]},"columnCollection":{},"mcn":{"bindInfo":{},"memberCategoryList":[],"producerList":[],"categoryList":[],"lists":{}}},"fetchHost":"www.zhihu.com","subAppName":"column"}</script><script src="./浅析Typescript设计模式 - 知乎_files/vendor.90b6c2c841b0448cdc35.js"></script><script src="./浅析Typescript设计模式 - 知乎_files/column.app.54108a813507c1df7eb2.js"></script><script src="./浅析Typescript设计模式 - 知乎_files/hm.js" async=""></script><script src="./浅析Typescript设计模式 - 知乎_files/push.js" async=""></script><script src="./浅析Typescript设计模式 - 知乎_files/zap.js"></script><div><div style="display: none;">想来知乎工作？请发送邮件到 jobs@zhihu.com</div></div><div><div><div class="css-8pdeid"></div></div></div><div><div><div class="Editable-languageSuggestions" style="left: -1179px; top: -999px;"><div><div class="Popover"><label class="Editable-languageSuggestionsInput Input-wrapper"><input autocomplete="off" role="combobox" aria-expanded="false" aria-autocomplete="list" aria-activedescendant="AutoComplete12-0" id="Popover11-toggle" aria-haspopup="true" aria-owns="Popover11-content" class="Input" placeholder="选择语言" value=""><svg class="Zi Zi--Select" fill="#afbdcf" viewBox="0 0 24 24" width="24" height="24"><path d="M12 16.183l2.716-2.966a.757.757 0 0 1 1.064.001.738.738 0 0 1 0 1.052l-3.247 3.512a.758.758 0 0 1-1.064 0L8.22 14.27a.738.738 0 0 1 0-1.052.758.758 0 0 1 1.063 0L12 16.183zm0-9.365L9.284 9.782a.758.758 0 0 1-1.064 0 .738.738 0 0 1 0-1.052l3.248-3.512a.758.758 0 0 1 1.065 0L15.78 8.73a.738.738 0 0 1 0 1.052.757.757 0 0 1-1.063.001L12 6.818z" fill-rule="evenodd"></path></svg></label></div></div></div></div></div></body></html>