<!DOCTYPE html>
<!-- saved from url=(0047)https://juejin.im/post/5ea40427518825736f6434ef -->
<html lang="zh-Hans"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8"><meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1"><meta name="viewport" content="width=device-width,initial-scale=1,user-scalable=no,viewport-fit=cover"><meta name="google-site-verification" content="cCHsgG9ktuCTgWgYfqCJql8AeR4gAne4DTZqztPoirE"><meta name="google-site-verification" content="nPvn9R5NJLsZKTv5VKIbn0OmkRcJ4PC6KdDoTX3n5Mw"><meta name="apple-itunes-app" content="app-id=987739104"><meta name="baidu-site-verification" content="qiK2a1kcFc"><meta name="360-site-verification" content="4c3c7d57d59f0e1a308462fbc7fd7e51"><meta name="sogou_site_verification" content="c49WUDZczQ"><style>body {
        font-size: 16px;
        line-height: 2;
      }
      a, button, input {
        margin: 1rem 1.5rem;
      }
      img {
        width: 0;
        height: 0;
      }
      #juejin {
        overflow-x: hidden;
      }</style><title data-vue-meta="true">【万字长文】深入理解 Typescript 高级用法 - 掘金</title><link rel="apple-touch-icon" sizes="180x180" href="https://b-gold-cdn.xitu.io/favicons/v2/apple-touch-icon.png"><link rel="icon" type="image/png" sizes="32x32" href="https://b-gold-cdn.xitu.io/favicons/v2/favicon-32x32.png"><link rel="icon" type="image/png" sizes="16x16" href="https://b-gold-cdn.xitu.io/favicons/v2/favicon-16x16.png"><link rel="manifest" href="https://b-gold-cdn.xitu.io/favicons/v2/manifest.json"><link rel="mask-icon" href="https://b-gold-cdn.xitu.io/favicons/v2/safari-pinned-tab.svg" color="#5bbad5"><link rel="shortcut icon" href="https://b-gold-cdn.xitu.io/favicons/v2/favicon.ico"><meta name="msapplication-config" content="https://b-gold-cdn.xitu.io/favicons/v2/browserconfig.xml"><meta name="theme-color" content="#ffffff"><link rel="search" title="掘金" href="https://b-gold-cdn.xitu.io/conf/search.xml" type="application/opensearchdescription+xml"><link rel="stylesheet" href="./【万字长文】深入理解 Typescript 高级用法 - 掘金_files/ionicons.min.css"><link rel="stylesheet" href="./【万字长文】深入理解 Typescript 高级用法 - 掘金_files/iconfont.css"><link href="./【万字长文】深入理解 Typescript 高级用法 - 掘金_files/0.f1fc61eda29199ce1f45.css" rel="stylesheet"><script async="" src="./【万字长文】深入理解 Typescript 高级用法 - 掘金_files/hm.js"></script><script async="" src="./【万字长文】深入理解 Typescript 高级用法 - 掘金_files/analytics.js"></script><script type="text/javascript" async="" src="./【万字长文】深入理解 Typescript 高级用法 - 掘金_files/vds.js"></script><script type="text/javascript" async="" src="./【万字长文】深入理解 Typescript 高级用法 - 掘金_files/collect-v.3.2.14.js"></script><script charset="utf-8" src="./【万字长文】深入理解 Typescript 高级用法 - 掘金_files/4.281438b56343cf12fa0b.js"></script><meta data-vmid="keywords" name="keywords" content="TypeScript" data-vue-meta="true"><meta data-vmid="description" name="description" content="作者: 韩念琪 欢迎转载或分享，转载请注明作者及出处！ 相关链接 如果对你有帮助的话不妨加个 star，后面会持续更新：github地址 【正在完善中...】原文地址 【正在完善中...】ppt演示文稿（使用pc端打开） 【提供pdf版文档】示例工程及文" data-vue-meta="true"></head><body><div id="juejin" data-v-2a21baac=""><div class="global-component-box" data-v-2a21baac=""><!----><div data-v-5ef5fb43="" data-v-2a21baac="" class="alert-list alert-list"></div><div data-v-15608c17="" data-v-2a21baac="" class="suspension-panel suspension-panel"><button data-v-15608c17="" title="回到顶部" class="btn to-top-btn" style=""><i data-v-15608c17="" class="ion-android-arrow-dropup"></i></button><button data-v-15608c17="" title="建议反馈" class="btn meiqia-btn" style=""><i data-v-15608c17="" class="ion-chatbubble-working"></i></button></div><!----><!----><div class="emoji-barrage" data-v-94fd086c="" data-v-2a21baac=""><!----></div><div class="book-new-user-award-popup" style="display:none;" data-v-22fa60e5="" data-v-2a21baac=""><div class="content-box" style="display:;" data-v-22fa60e5=""><div class="close ion-close-round" data-v-22fa60e5=""></div><div class="header" data-v-22fa60e5=""><div class="icon" data-v-22fa60e5=""><img src="./【万字长文】深入理解 Typescript 高级用法 - 掘金_files/icon.a87e5ae.svg" data-v-22fa60e5=""></div><div class="txt" data-v-22fa60e5="">新人专享好礼</div></div><div class="desc" data-v-22fa60e5="">凡未购买过小册的用户，均可领取三张 5 折新人专享券，购买小册时自动使用专享券，最高可节省 45 元。</div><div class="tickets" data-v-22fa60e5=""><div class="ticket" data-v-22fa60e5=""><div class="ticket__inner" data-v-22fa60e5=""><div class="enjoy" data-v-22fa60e5=""><span class="new-title" data-v-22fa60e5="">小册新人 5 折券</span></div><div class="sale" data-v-22fa60e5="">最高可省 15 元</div></div></div><div class="ticket" data-v-22fa60e5=""><div class="ticket__inner" data-v-22fa60e5=""><div class="enjoy" data-v-22fa60e5=""><span class="new-title" data-v-22fa60e5="">小册新人 5 折券</span></div><div class="sale" data-v-22fa60e5="">最高可省 15 元</div></div></div><div class="ticket" data-v-22fa60e5=""><div class="ticket__inner" data-v-22fa60e5=""><div class="enjoy" data-v-22fa60e5=""><span class="new-title" data-v-22fa60e5="">小册新人 5 折券</span></div><div class="sale" data-v-22fa60e5="">最高可省 15 元</div></div></div></div><div class="remark" data-v-22fa60e5="">注：专享券的使用期限在领券的七天内。</div><div class="submit-btn" data-v-22fa60e5="">一键领取</div></div><div class="model success" style="display:none;" data-v-22fa60e5=""><div class="heading" data-v-22fa60e5="">领取成功</div><div class="content-text" data-v-22fa60e5="">购买小册时自动使用专享券</div><div class="btn-success-footer" data-v-22fa60e5=""><div class="btn-ok" data-v-22fa60e5="">知道了</div><div class="btn-ok btn-link" data-v-22fa60e5="">前往小册首页</div></div></div><div class="model fail" style="display:none;" data-v-22fa60e5=""><div class="heading" data-v-22fa60e5="">领取失败</div><div class="content-text" data-v-22fa60e5="">本活动仅适用于小册新用户</div><div class="btn-ok" data-v-22fa60e5="">知道了</div></div></div><!----><!----><div class="bind-phone-number-modal-box" data-v-269c0ad0="" data-v-2a21baac=""><div st:block="bindPhoneNumberModal" class="modal-mask" style="display:none;" data-v-269c0ad0=""></div><form class="bind-phone-number-form" style="display:none;" data-v-269c0ad0=""><i title="关闭" class="close-btn ion-close-round" data-v-269c0ad0=""></i><h1 class="title" data-v-269c0ad0="">提示</h1><h2 class="hint" data-v-269c0ad0="">根据我国<a href="http://www.cac.gov.cn/2017-08/25/c_1121541842.htm" target="_blank" style="color:#007fff">《互联网跟帖评论服务管理规定》</a>，您需要绑定手机号后才可在掘金社区内发布内容。</h2><div class="input-group" data-v-269c0ad0=""><div class="input-box" data-v-269c0ad0=""><input maxlength="64" placeholder="请输入要绑定的手机号码" value="" class="input" data-v-269c0ad0=""></div><!----><!----></div><button st:name="bindBtn" class="btn" data-v-269c0ad0="">绑定手机</button></form></div></div><!----><div data-v-6fdc8784="" data-v-fa2339b8="" data-v-2a21baac="" class="view-container"><div data-v-6fdc8784="" class="main-header-box"><header data-v-0c56945c="" data-v-6fdc8784="" class="main-header main-header"><div data-v-0c56945c="" class="container"><a data-v-0c56945c="" href="https://juejin.im/" class="logo"><img data-v-0c56945c="" src="./【万字长文】深入理解 Typescript 高级用法 - 掘金_files/logo.a7995ad.svg" alt="掘金" class="logo-img"><img data-v-0c56945c="" src="./【万字长文】深入理解 Typescript 高级用法 - 掘金_files/simplify-logo.3e3c253.svg" alt="掘金" class="mobile"></a><nav data-v-0c56945c="" role="navigation" class="main-nav"><ul data-v-0c56945c="" class="nav-list"><li data-v-0c56945c="" class="main-nav-list"><div data-v-0c56945c="" class="phone-show-menu"><span data-v-0c56945c="">首页</span><div data-v-0c56945c="" class="icon ion-arrow-down-b"></div></div><ul data-v-0c56945c="" class="phone-hide"><li data-v-0c56945c="" class="nav-item link-item route-active"><a data-v-0c56945c="" href="https://juejin.im/">首页</a></li><li data-v-0c56945c="" class="nav-item link-item activities"><a data-v-0c56945c="" href="https://juejin.im/pins">沸点</a></li><li data-v-0c56945c="" class="nav-item link-item"><a data-v-0c56945c="" href="https://juejin.im/topics">话题</a></li><li data-v-0c56945c="" class="nav-item link-item book"><a data-v-0c56945c="" href="https://juejin.im/books">小册</a></li><li data-v-0c56945c="" class="nav-item link-item"><a data-v-0c56945c="" href="https://juejin.im/events/all">活动</a></li></ul></li><li data-v-0c56945c="" class="nav-item search"><form data-v-0c56945c="" role="search" class="search-form"><input data-v-0c56945c="" type="search" maxlength="32" placeholder="搜索掘金" class="search-input"><img data-v-0c56945c="" src="./【万字长文】深入理解 Typescript 高级用法 - 掘金_files/juejin-search-icon.6f8ba1b.svg" alt="搜索" class="search-icon"></form></li><li data-v-0c56945c="" class="nav-item add"><div data-v-0c56945c="" class="add-group"><button data-v-0c56945c="" class="add-btn">写文章</button><div data-v-0c56945c="" class="more"><i data-v-0c56945c="" class="more-icon ion-android-arrow-dropdown"></i></div><ul data-v-0c56945c="" class="more-list"><li data-v-0c56945c="" class="item">发布沸点</li><li data-v-0c56945c="" class="item">分享链接</li><!----></ul></div><!----></li><li data-v-0c56945c="" class="nav-item notification"><a data-v-0c56945c="" class="app-link" href="https://juejin.im/notification" target="_blank"><i data-v-0c56945c="" class="icon ion-android-notifications"></i><!----></a></li><li data-v-0c56945c="" class="nav-item menu"><div data-v-95ddf8f6="" data-v-39db9419="" data-v-0c56945c="" data-src="https://mirror-gold-cdn.xitu.io/168e08d6d9e8b3febec?imageView2/1/w/100/h/100/q/85/format/webp/interlace/1" class="lazy avatar avatar loaded immediate" style="background-image: url(&quot;https://mirror-gold-cdn.xitu.io/168e08d6d9e8b3febec?imageView2/1/w/100/h/100/q/85/format/webp/interlace/1&quot;);"></div><!----><ul data-v-0c56945c="" class="nav-menu user-dropdown-list" style="display: none;"><div data-v-0c56945c="" class="nav-menu-item-group"><li data-v-0c56945c="" class="nav-menu-item"><a data-v-0c56945c=""><i data-v-0c56945c="" class="fengwei fw-write"></i><span data-v-0c56945c="">写文章</span></a></li><!----><li data-v-0c56945c="" class="nav-menu-item"><a data-v-0c56945c=""><i data-v-0c56945c="" class="fengwei fw-draft"></i><span data-v-0c56945c="">草稿</span></a></li></div><div data-v-0c56945c="" class="nav-menu-item-group"><li data-v-0c56945c="" class="nav-menu-item"><a data-v-0c56945c="" href="https://juejin.im/user/5a5f6102f265da3e3a6dd3b0" class="link-icon"><i data-v-0c56945c="" class="fengwei fw-person"></i><span data-v-0c56945c="">我的主页</span><!----></a></li><li data-v-0c56945c="" class="nav-menu-item"><a data-v-0c56945c="" href="https://juejin.im/user/5a5f6102f265da3e3a6dd3b0/likes"><img data-v-0c56945c="" src="./【万字长文】深入理解 Typescript 高级用法 - 掘金_files/zan.e9d7698.svg" class="zan"><span data-v-0c56945c="">我赞过的</span></a></li><!----><li data-v-0c56945c="" class="nav-menu-item"><a data-v-0c56945c="" href="https://juejin.im/user/5a5f6102f265da3e3a6dd3b0/collections"><img data-v-0c56945c="" src="./【万字长文】深入理解 Typescript 高级用法 - 掘金_files/collect.02e2979.svg" class="collect"><span data-v-0c56945c="">我的收藏集</span></a></li><li data-v-0c56945c="" class="nav-menu-item"><a data-v-0c56945c="" href="https://juejin.im/user/5a5f6102f265da3e3a6dd3b0/books?type=bought"><i data-v-0c56945c="" class="fengwei fw-bought"></i><span data-v-0c56945c="">已购</span></a></li><li data-v-0c56945c="" class="nav-menu-item"><a data-v-0c56945c="" href="https://juejin.im/subscribe"><i data-v-0c56945c="" class="fengwei fw-tag"></i><span data-v-0c56945c="">标签管理</span></a></li></div><div data-v-0c56945c="" class="nav-menu-item-group"><li data-v-0c56945c="" class="nav-menu-item"><a data-v-0c56945c="" href="https://juejin.im/user/settings"><i data-v-0c56945c="" class="fengwei fw-setting"></i><span data-v-0c56945c="">设置</span></a></li><li data-v-0c56945c="" class="nav-menu-item more"><a data-v-0c56945c=""><i data-v-0c56945c="" class="fengwei fw-info"></i><span data-v-0c56945c="">关于</span><i data-v-0c56945c="" class="ion-chevron-right more-icon"></i></a><ul data-v-0c56945c="" class="nav-menu more-dropdown-list"><div data-v-0c56945c="" class="nav-menu-item-group"><li data-v-0c56945c="" class="nav-menu-item"><a data-v-0c56945c="" href="https://juejin.im/app" target="_blank">下载应用</a></li><li data-v-0c56945c="" class="nav-menu-item"><a data-v-0c56945c="" href="https://juejin.im/about" target="_blank">关于</a></li><li data-v-0c56945c="" class="nav-menu-item"><a data-v-0c56945c="" href="https://xitu.io/jobs" target="_blank">加入我们</a></li><li data-v-0c56945c="" class="nav-menu-item"><a data-v-0c56945c="" href="https://github.com/xitu/gold-miner" rel="nofollow noopener noreferrer" target="_blank">翻译计划</a></li><li data-v-0c56945c="" class="nav-menu-item"><a data-v-0c56945c="" href="https://bd.juejin.im/?utm_campaign=bd&amp;utm_source=web&amp;utm_medium=nav" target="_blank">合作伙伴</a></li></div></ul></li></div><div data-v-0c56945c="" class="nav-menu-item-group"><li data-v-0c56945c="" class="nav-menu-item"><a data-v-0c56945c=""><i data-v-0c56945c="" class="fengwei fw-logout"></i><span data-v-0c56945c="">登出</span></a></li></div></ul></li><!----><!----></ul></nav></div></header></div><main data-v-6fdc8784="" class="container main-container"><div data-v-fa2339b8="" data-v-6fdc8784="" class="view column-view"><div data-v-fa2339b8="" data-v-6fdc8784="" class="main-area article-area shadow"><article data-v-fa2339b8="" itemscope="itemscope" itemtype="http://schema.org/Article" class="article" data-v-6fdc8784=""><meta itemprop="url" content="https://juejin.im/post/5ea40427518825736f6434ef"><meta itemprop="headline" content="【万字长文】深入理解 Typescript 高级用法"><meta itemprop="keywords" content="TypeScript"><meta itemprop="datePublished" content="2020-04-25T10:06:52.543Z"><meta itemprop="image" content="https://user-gold-cdn.xitu.io/2020/4/25/171b0fe42ec18e6a?w=617&amp;h=328&amp;f=png&amp;s=88812"><div itemprop="author" itemscope="itemscope" itemtype="http://schema.org/Person"><meta itemprop="name" content="黑头发的小强"><meta itemprop="url" content="https://juejin.im/user/5800462ed20309006801eabf"></div><div itemprop="publisher" itemscope="itemscope" itemtype="http://schema.org/Organization"><meta itemprop="name" content="掘金"><div itemprop="logo" itemscope="itemscope" itemtype="https://schema.org/ImageObject"><meta itemprop="url" content="https://b-gold-cdn.xitu.io/icon/icon-white-180.png"><meta itemprop="width" content="180"><meta itemprop="height" content="180"></div></div><div data-v-fa2339b8="" class="author-info-block"><a data-v-fa2339b8="" href="https://juejin.im/user/5800462ed20309006801eabf" target="_blank" rel="" class="avatar-link"><div data-v-95ddf8f6="" data-v-39db9419="" data-v-fa2339b8="" data-src="https://user-gold-cdn.xitu.io/2020/4/27/171b92c865a2a09e?imageView2/1/w/100/h/100/q/85/format/webp/interlace/1" class="lazy avatar avatar loaded" style="background-image: url(&quot;https://user-gold-cdn.xitu.io/2020/4/27/171b92c865a2a09e?imageView2/1/w/100/h/100/q/85/format/webp/interlace/1&quot;);"></div></a><div data-v-fa2339b8="" class="author-info-box"><a data-v-263f3a32="" data-v-fa2339b8="" href="https://juejin.im/user/5800462ed20309006801eabf" target="_blank" rel="" class="username username ellipsis">黑头发的小强<a data-v-6d94a6ea="" data-v-263f3a32="" href="https://juejin.im/book/5c90640c5188252d7941f5bb/section/5c9065385188252da6320022" target="_blank" rel="" class="rank"><img data-v-6d94a6ea="" src="./【万字长文】深入理解 Typescript 高级用法 - 掘金_files/lv-2.f597b88.svg" alt="lv-2"></a></a><div data-v-fa2339b8="" class="meta-box"><time data-v-fa2339b8="" datetime="2020-04-25T10:06:52.543Z" title="Sat Apr 25 2020 18:06:52 GMT+0800 (中国标准时间)" class="time">2020年04月25日</time><span data-v-fa2339b8="" class="views-count">阅读 5118</span><!----></div></div><button data-v-5789daef="" data-v-fa2339b8="" class="follow-button follow">关注</button></div><div data-v-95ddf8f6="" data-v-4802f2b2="" data-v-fa2339b8="" data-src="https://user-gold-cdn.xitu.io/2020/4/25/171b0fe42ec18e6a?imageView2/1/w/1304/h/734/q/85/format/webp/interlace/1" class="lazy thumb article-hero loaded" style="background-image: url(&quot;https://user-gold-cdn.xitu.io/2020/4/25/171b0fe42ec18e6a?imageView2/1/w/1304/h/734/q/85/format/webp/interlace/1&quot;); background-size: cover;"></div><h1 data-v-fa2339b8="" class="article-title">【万字长文】深入理解 Typescript 高级用法</h1><div data-v-fa2339b8="" data-id="5ea40bbce51d4546fd48318f" itemprop="articleBody" class="article-content"><h6 align="right" data-id="heading-0">作者: 韩念琪</h6>
<blockquote>
<p>欢迎转载或分享，转载请注明作者及出处！</p>
</blockquote>
<h2 class="heading" data-id="heading-1">相关链接</h2>
<ul>
<li>如果对你有帮助的话不妨加个 <code>star</code>，后面会持续更新：<a target="_blank" href="https://github.com/hannq/ppt-share" rel="nofollow noopener noreferrer">github地址</a></li>
<li>【正在完善中...】<a target="_blank" href="https://github.com/hannq/ppt-share/blob/master/courseware/ts-advance-usage/README.md" rel="nofollow noopener noreferrer">原文地址</a></li>
<li>【正在完善中...】<a target="_blank" href="https://hannq.github.io/ppt-share/index.html" rel="nofollow noopener noreferrer">ppt演示文稿（使用pc端打开）</a></li>
<li>【提供pdf版文档】<a target="_blank" href="https://github.com/hannq/ppt-share/releases" rel="nofollow noopener noreferrer">示例工程及文档下载</a></li>
</ul>
<h2 class="heading" data-id="heading-2">写作初衷</h2>
<p>最近刚入职新公司，正好部门每个新人都需要做技术分享，这里借这个机会把自己的知识体系梳理一遍。</p>
<h3 class="heading" data-id="heading-3">关于标题</h3>
<p>原本题目设定为是 <strong><code>Typescript</code> 高级用法介绍</strong>，但是考虑掘金有很多关于 <strong><code>Typescript</code> 高级用法</strong> 相关的分享，写的都非常好，这里就不做重复性工作了。所以把题目改成了 <strong>深入理解 <code>Typescript</code> 高级用法</strong>，注重 <strong>理解</strong> 而非 <strong>使用</strong>。</p>
<h2 class="heading" data-id="heading-4">正文</h2>
<blockquote>
<p><strong>前言</strong>：这里的标题看起来是 "高级用法"，不少同学可能就表示被劝退了。其实 <code>Typescript</code> 作为一门 <code>强类型</code> 编程语言，最具特色的就是他的类型表达能力，这是很多完备的后端语言都难以媲美的 <s>说的很对，但PHP是最好的语言</s>，所以如果你搞懂了他的类型系统，对将来的日常开发一定是大有裨益的，但过于灵活的类型系统也注定了 <code>Typescript</code> 无法成为一门纯粹的静态语言，不过每一行代码都有代码提示他不香嘛？</p>
</blockquote>
<p>为了更好的阅读体验，建议在宽屏浏览器端阅读。</p>
<h2 class="heading" data-id="heading-5">大纲</h2>
<ul>
<li><a href="https://juejin.im/post/5ea40427518825736f6434ef#heading-6">基础准备</a></li>
<li><a href="https://juejin.im/post/5ea40427518825736f6434ef#heading-11">Typescript 类型系统简述</a>
<ul>
<li><a href="https://juejin.im/post/5ea40427518825736f6434ef#heading-12">Typescript 的类型是支持定义 "函数定义" 的</a></li>
<li><a href="https://juejin.im/post/5ea40427518825736f6434ef#heading-14">Typescript 的类型是支持 "条件判断" 的</a></li>
<li><a href="https://juejin.im/post/5ea40427518825736f6434ef#heading-16">Typescript 的类型是支持 "数据结构" 的</a></li>
<li><a href="https://juejin.im/post/5ea40427518825736f6434ef#heading-25">Typescript 的类型是支持 "作用域" 的</a></li>
<li><a href="https://juejin.im/post/5ea40427518825736f6434ef#heading-29">Typescript 的类型是支持 "递归" 的</a></li>
<li><a href="https://juejin.im/post/5ea40427518825736f6434ef#heading-31">小结</a></li>
</ul>
</li>
<li><a href="https://juejin.im/post/5ea40427518825736f6434ef#heading-32">"高级用法" 的使用场景与价值</a>
<ul>
<li><a href="https://juejin.im/post/5ea40427518825736f6434ef#heading-33">哪些用法可以被称为 "高级用法"</a></li>
<li><a href="https://juejin.im/post/5ea40427518825736f6434ef#heading-34">举例说明 "高级用法" 的使用场景</a></li>
<li><a href="https://juejin.im/post/5ea40427518825736f6434ef#heading-35">小结</a></li>
</ul>
</li>
<li><a href="https://juejin.im/post/5ea40427518825736f6434ef#heading-36">类型推导与泛型操作符</a>
<ul>
<li><a href="https://juejin.im/post/5ea40427518825736f6434ef#heading-37">流动的类型（类型编写思路）</a></li>
<li><a href="https://juejin.im/post/5ea40427518825736f6434ef#heading-38">Typescript 代码哲学</a></li>
</ul>
</li>
<li><a href="https://juejin.im/post/5ea40427518825736f6434ef#heading-39">常见类型推导实现逻辑梳理</a>
<ul>
<li><a href="https://juejin.im/post/5ea40427518825736f6434ef#heading-40">类型的传递（流动）</a></li>
<li><a href="https://juejin.im/post/5ea40427518825736f6434ef#heading-41">类型的过滤与分流</a></li>
<li><a href="https://juejin.im/post/5ea40427518825736f6434ef#heading-42">小结</a></li>
</ul>
</li>
<li><a href="https://juejin.im/post/5ea40427518825736f6434ef#heading-43">【未完待续...】常见泛型操作符实现逻辑梳理与实践入门</a></li>
<li><a href="https://juejin.im/post/5ea40427518825736f6434ef#heading-44">定制化扩展你的 Typescript</a>
<ul>
<li><a href="https://juejin.im/post/5ea40427518825736f6434ef#heading-45">Typescript Service Plugins 的产生背景、功能定位、基础使用</a></li>
<li><a href="https://juejin.im/post/5ea40427518825736f6434ef#heading-54">市面上已有的 Typescript Service Plugins 举例介绍</a></li>
<li><a href="https://juejin.im/post/5ea40427518825736f6434ef#heading-54">【未完待续...】如何自己写一个 Typescript Service Plugins</a></li>
<li><a href="https://juejin.im/post/5ea40427518825736f6434ef#heading-70">参考资料链接</a></li>
</ul>
</li>
<li><a href="https://juejin.im/post/5ea40427518825736f6434ef#heading-73">Q&amp;A（欢迎评论区补充）</a>
<ul>
<li><a href="https://juejin.im/post/5ea40427518825736f6434ef#heading-74">可以利用 Typescript Service Plugin（例如配置 eslint 规则）阻塞编译或者在编译时告警吗？</a></li>
</ul>
</li>
</ul>
<h2 class="heading" data-id="heading-6">基础准备</h2>
<p>阅读本文需要具备的基础知识。</p>
<h3 class="heading" data-id="heading-7">预备知识</h3>
<p>本文的定位为理解高级用法，故不会涉及过多基础知识相关的讲解，需要读者自己去完善这方面的知识储备。</p>
<h6 data-id="heading-8"> 此文档的内容默认要求读者已经具备以下知识：</h6>
<ol>
<li>有 <code>Javascript</code> 或其他语言编程经验。</li>
<li>有 <code>Typescript</code> 实际使用经验，最好在正经项目中完整地使用过。</li>
<li>了解 <code>Typescript</code> 基础语法以及常见关键字地作用。</li>
<li>对 <code>Typescript</code> 的 <code>类型系统</code> 架构有一个最基本的了解。</li>
</ol>
<h3 class="heading" data-id="heading-9">相关资源推荐</h3>
<ol>
<li><a target="_blank" href="https://www.typescriptlang.org/" rel="nofollow noopener noreferrer">Typescript 官网</a></li>
<li><a target="_blank" href="https://basarat.gitbook.io/typescript/" rel="nofollow noopener noreferrer">TypeScript Deep Dive</a></li>
<li><a target="_blank" href="https://github.com/microsoft/TypeScript" rel="nofollow noopener noreferrer">TypeScript GitHub地址</a></li>
</ol>
<h2 class="heading" data-id="heading-10">背景</h2>
<p>初用 <code>Typescript</code> 开发的同学一定有这样的困扰：</p>
<ol>
<li>代码代码提示并不智能，似乎只能显式的定义类型，才能有代码提示，无法理解这样的编程语言居然有这么多人趋之若鹜。</li>
<li>各种各样的类型报错苦不堪言，本以为听信网上说 <code>Typescript</code> 可以提高代码可维护性，结果却发现徒增了不少开发负担。</li>
<li>显式地定义所有的类型似乎能应付大部分常见，但遇到有些复杂的情况却发现无能为力，只能含恨写下若干的 <code>as any</code> 默默等待代码 <code>review</code> 时的公开处刑。</li>
<li>项目急时间紧却发现 <code>Typescript</code> 成了首要难题，思索片刻决定投靠的 <code>Anyscript</code>，快速开发业务逻辑，待到春暖花开时再回来补充类型。双倍的工作量，双倍的快乐只有自己才懂。</li>
</ol>
<p>为了避免以上悲剧的发生或者重演，我们只有在对它有更加深刻的理解之后，才能在开发时游刃有余、在撸码时纵横捭阖。</p>
<h2 class="heading" data-id="heading-11">Typescript 类型系统简述</h2>
<blockquote>
<p><strong>思考题</strong>：有人说 <code>Typescript</code> = <code>Type</code>  + <code>Javascript</code>，那么抛开 <code>Javascript</code> 不谈，这里的 <code>Type</code> 是一门完备的编程语言吗？</p>
</blockquote>
<h3 class="heading" data-id="heading-12">Typescript 的类型是支持定义 "函数定义" 的</h3>
<p>有过编程经验的同学都知道，函数是一门编程语言中最基础的功能之一，函数是过程化、面向对象、函数式编程中程序封装的基本单元，其重要程度不言而喻。</p>
<p>函数可以帮助我们做很多事，比如 ：</p>
<ul>
<li>函数可以把程序封装成一个个功能，并形成函数内部的变量作用域，通过静态变量保存函数状态，通过返回值返回结果。</li>
<li>函数可以帮助我们实现过程的复用，如果一段逻辑可以被使用多次，就封装成函数，被其它过程多次调用。</li>
<li>函数也可以帮我们更好地组织代码结构，帮助我们更好地维护代码。</li>
</ul>
<h5 data-id="heading-13">那么言归正传，如何在 Typescript 类型系统中定义函数呢？</h5>
<p><code>Typescript</code> 中类型系统中的的函数被称作  <code>泛型操作符</code>，其定义的简单的方式就是使用 <code>type</code> 关键字：</p>
<pre><code class="hljs typescript copyable" lang="typescript"><span class="hljs-comment">// 这里我们就定义了一个最简单的泛型操作符</span>
<span class="hljs-keyword">type</span> foo&lt;T&gt; = T;
<span class="copy-code-btn">复制代码</span></code></pre><p>这里的代码如何理解呢，其实这里我把代码转换成大家最熟悉的 <code>Javascript</code> 代码其实就不难理解了：</p>
<pre><code class="hljs javascript copyable" lang="javascript"><span class="hljs-comment">// 把上面的类型代码转换成 `JavaScript` 代码</span>
<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">foo</span>(<span class="hljs-params">T</span>) </span>{
	<span class="hljs-keyword">return</span> T
}
<span class="copy-code-btn">复制代码</span></code></pre><p>那么看到这里有同学心里要<a target="_blank" href="https://zhidao.baidu.com/question/2051880054084169907.html" rel="nofollow noopener noreferrer">犯嘀咕</a>了，心想你这不是忽悠我嘛？这不就是  <code>Typescript</code> 中定义类型的方式嘛？这玩意儿我可太熟了，这玩意儿不就和 <code>interface</code> 一样的嘛，我还知道 <code>Type</code> 关键字和 <code>interface</code> 关键字有啥细微的区别呢！</p>
<p>嗯，同学你说的太对了，不过你不要着急，接着听我说，其实类型系统中的函数还支持对入参的约束。</p>
<pre><code class="hljs typescript copyable" lang="typescript"><span class="hljs-comment">// 这里我们就对入参 T 进行了类型约束</span>
<span class="hljs-keyword">type</span> foo&lt;T <span class="hljs-keyword">extends</span> <span class="hljs-built_in">string</span>&gt; = T;
<span class="copy-code-btn">复制代码</span></code></pre><p>那么把这里的代码转换成我们常见的 <code>Typescript</code>  是什么样子的呢？</p>
<pre><code class="hljs typescript copyable" lang="typescript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">foo</span>(<span class="hljs-params">T: <span class="hljs-built_in">string</span></span>) </span>{
	<span class="hljs-keyword">return</span> T
}
<span class="copy-code-btn">复制代码</span></code></pre><p>当然啦我们也可以给它设置默认值：</p>
<pre><code class="hljs typescript copyable" lang="typescript"><span class="hljs-comment">// 这里我们就对入参 T 增加了默认值</span>
<span class="hljs-keyword">type</span> foo&lt;T <span class="hljs-keyword">extends</span> <span class="hljs-built_in">string</span> = <span class="hljs-string">'hello world'</span>&gt; = T;
<span class="copy-code-btn">复制代码</span></code></pre><p>那么这里的代码转换成我们常见的 <code>Typescript</code>  就是这样的：</p>
<pre><code class="hljs typescript copyable" lang="typescript">function foo(T: string = 'hello world') {
	return T
}
<span class="copy-code-btn">复制代码</span></code></pre><p>看到这里肯定有同学迫不及待地想要提问了：<strong>那能不能像 JS 里的函数一样支持剩余参数呢？</strong></p>
<p>很遗憾，目前暂时是不支持的，但是在我们日常开发中一定是有这样的需求存在的。那就真的没有办法了嘛？其实也不一定，我们可以通过一些骚操作来模拟这种场景，当然这个是后话了，这里就不作拓展了。</p>
<h3 class="heading" data-id="heading-14">Typescript 的类型是支持 "条件判断" 的</h3>
<blockquote>
<p>人生总会面临很多选择，编程也是一样。</p>
<p align="right">——我瞎编的</p><p>
</p></blockquote>
<p>条件判断也是编程语言中最基础的功能之一，也是我们日常撸码过程成最常用的功能，无论是 <code>if else</code> 还是 <code>三元运算符</code>，相信大家都有使用过。</p>
<h5 data-id="heading-15">那么在 Typescript 类型系统中的类型判断要怎么实现呢？</h5>
<p>其实这在 <code>Typescript</code> 官方文档被称为 <code>条件类型(Conditional Types)</code>，定义的方法也非常简单，就是使用 <code>extends</code> 关键字。</p>
<pre><code class="hljs typescript copyable" lang="typescript">T <span class="hljs-keyword">extends</span> U ? X : Y;
<span class="copy-code-btn">复制代码</span></code></pre><p>这里相信聪明的你一眼就看出来了，这不就是 <code>三元运算符</code> 嘛！是的，而且这和三元运算符的也发也非常像，如果 <code>T extends U</code> 为 <code>true</code> 那么 返回 <code>X</code> ，否则返回 <code>Y</code>。</p>
<p>结合之前刚刚讲过的 "函数"，我们就可以简单的拓展一下：</p>
<pre><code class="hljs typescript copyable" lang="typescript"><span class="hljs-keyword">type</span> num = <span class="hljs-number">1</span>;
<span class="hljs-keyword">type</span> str = <span class="hljs-string">'hello world'</span>;

<span class="hljs-keyword">type</span> IsNumber&lt;N&gt; = N <span class="hljs-keyword">extends</span> <span class="hljs-built_in">number</span> ? <span class="hljs-string">'yes, is a number'</span> : <span class="hljs-string">'no, not a number'</span>;

<span class="hljs-keyword">type</span> result1 = IsNumber&lt;num&gt;; <span class="hljs-comment">// "yes, is a number"</span>
<span class="hljs-keyword">type</span> result2 = IsNumber&lt;str&gt;; <span class="hljs-comment">// "no, not a number"</span>
<span class="copy-code-btn">复制代码</span></code></pre><p>这里我们就实现了一个简单的带判断逻辑的函数。</p>
<h3 class="heading" data-id="heading-16">Typescript 的类型是支持 "数据结构" 的</h3>
<h4 class="heading" data-id="heading-17">模拟真实数组</h4>
<p>看到这里肯定有同学就笑了，这还不简单，就举例来说，<code>Typescript</code> 中最常见数据类型就是 <code>数组（Array）</code> 或者 <code>元组（tuple）</code>。</p>
<p>同学你说的很对，<strong>那你知道如何对 <code>元组类型</code> 作 <code>push</code>、<code>pop</code>、<code>shift</code>、<code>unshift</code> 这些行为操作吗？</strong></p>
<p>其实这些操作都是可以被实现的：</p>
<pre><code class="hljs typescript copyable" lang="typescript"><span class="hljs-comment">// 这里定义一个工具类型，简化代码</span>
<span class="hljs-keyword">type</span> ReplaceValByOwnKey&lt;T, S <span class="hljs-keyword">extends</span> <span class="hljs-built_in">any</span>&gt; = { [P <span class="hljs-keyword">in</span> keyof T]: S[P] };

<span class="hljs-comment">// shift action</span>
<span class="hljs-keyword">type</span> ShiftAction&lt;T <span class="hljs-keyword">extends</span> <span class="hljs-built_in">any</span>[]&gt; = <span class="hljs-function">(<span class="hljs-params">(<span class="hljs-params">...args: T</span>) =&gt; <span class="hljs-built_in">any</span></span>) <span class="hljs-params">extends</span> (<span class="hljs-params">(<span class="hljs-params">arg1: <span class="hljs-built_in">any</span>, ...rest: infer R</span>) =&gt; <span class="hljs-built_in">any</span></span>) ? <span class="hljs-params">R</span> : <span class="hljs-params">never</span>;

// <span class="hljs-params">unshift</span> <span class="hljs-params">action</span>
<span class="hljs-params">type</span> <span class="hljs-params">UnshiftAction</span>&lt;<span class="hljs-params">T</span> <span class="hljs-params">extends</span> <span class="hljs-params">any</span>[], <span class="hljs-params">A</span>&gt; = (<span class="hljs-params">(<span class="hljs-params">args1: A, ...rest: T</span>) =&gt; <span class="hljs-built_in">any</span></span>) <span class="hljs-params">extends</span> (<span class="hljs-params">(<span class="hljs-params">...args: infer R</span>) =&gt; <span class="hljs-built_in">any</span></span>) ? <span class="hljs-params">R</span> : <span class="hljs-params">never</span>;

// <span class="hljs-params">pop</span> <span class="hljs-params">action</span>
<span class="hljs-params">type</span> <span class="hljs-params">PopAction</span>&lt;<span class="hljs-params">T</span> <span class="hljs-params">extends</span> <span class="hljs-params">any</span>[]&gt; = <span class="hljs-params">ReplaceValByOwnKey</span>&lt;<span class="hljs-params">ShiftAction</span>&lt;<span class="hljs-params">T</span>&gt;, <span class="hljs-params">T</span>&gt;;

// <span class="hljs-params">push</span> <span class="hljs-params">action</span>
<span class="hljs-params">type</span> <span class="hljs-params">PushAction</span>&lt;<span class="hljs-params">T</span> <span class="hljs-params">extends</span> <span class="hljs-params">any</span>[], <span class="hljs-params">E</span>&gt; = <span class="hljs-params">ReplaceValByOwnKey</span>&lt;<span class="hljs-params">UnshiftAction</span>&lt;<span class="hljs-params">T</span>, <span class="hljs-params">any</span>&gt;, <span class="hljs-params">T</span> &amp; { [<span class="hljs-params">k</span>: <span class="hljs-params">string</span>]: <span class="hljs-params">E</span> }&gt;;

// <span class="hljs-params">test</span> ...
<span class="hljs-params">type</span> <span class="hljs-params">tuple</span> = ['<span class="hljs-params">vue</span>', '<span class="hljs-params">react</span>', '<span class="hljs-params">angular</span>'];

<span class="hljs-params">type</span> <span class="hljs-params">resultWithShiftAction</span> = <span class="hljs-params">ShiftAction</span>&lt;<span class="hljs-params">tuple</span>&gt;; // ["<span class="hljs-params">react</span>", "<span class="hljs-params">angular</span>"]
<span class="hljs-params">type</span> <span class="hljs-params">resultWithUnshiftAction</span> = <span class="hljs-params">UnshiftAction</span>&lt;<span class="hljs-params">tuple</span>, '<span class="hljs-params">jquery</span>'&gt;; // ["<span class="hljs-params">jquery</span>", "<span class="hljs-params">vue</span>", "<span class="hljs-params">react</span>", "<span class="hljs-params">angular</span>"]
<span class="hljs-params">type</span> <span class="hljs-params">resultWithPopAction</span> = <span class="hljs-params">PopAction</span>&lt;<span class="hljs-params">tuple</span>&gt;; // ["<span class="hljs-params">vue</span>", "<span class="hljs-params">react</span>"]
<span class="hljs-params">type</span> <span class="hljs-params">resultWithPushAction</span> = <span class="hljs-params">PushAction</span>&lt;<span class="hljs-params">tuple</span>, '<span class="hljs-params">jquery</span>'&gt;; // ["<span class="hljs-params">vue</span>", "<span class="hljs-params">react</span>", "<span class="hljs-params">angular</span>", "<span class="hljs-params">jquery</span>"]
</span><span class="copy-code-btn">复制代码</span></code></pre><blockquote>
<p><strong>注意</strong>：这里的代码仅用于测试，操作某些复杂类型可能会报错，需要做进一步兼容处理，这里简化了相关代码，请勿用于生产环境！</p>
</blockquote>
<p>相信读到这里，大部分同学应该可以已经可以感受到 <code>Typescript</code> 类型系统的强大之处了，其实这里还是继续完善，为元组增加 <code>concat</code> 、<code>map</code> 等数组的常用的功能，这里不作详细探讨，留给同学们自己课后尝试吧。</p>
<p>但是其实上面提到的 "数据类型" 并不是我这里想讲解的 "数据类型"，上述的数据类型本质上还是服务于代码逻辑的数据类型，其实并不是服务于 <code>类型系统</code> 本身的数据类型。</p>
<p>上面这句话的怎么理解呢？</p>
<p>不管是 <code>数组</code> 还是 <code>元组</code>，在广义的理解中，其实都是用来对 <strong>数据</strong> 作 <strong>批量操作</strong>，同理，服务于 <code>类型系统</code> 本身的数据结构，应该也可以对 <strong>类型</strong> 作 <strong>批量操作</strong>。</p>
<p>那么如何对 <strong>类型</strong> 作 <strong>批量操作</strong> 呢？或者说服务于 <code>类型系统</code> 中的 <strong>数组</strong> 是什么呢？</p>
<p>下面就引出了本小节真正的 "数组"：<code>联合类型(Union Types)</code></p>
<p>说起 <code>联合类型(Union Types)</code> ，相信使用过 <code>Typescript</code> 同学的一定对它又爱又恨：</p>
<ol>
<li>定义函数入参的时候，当同一个位置的参数允许传入多种参数类型，使用 <code>联合类型(Union Types)</code> 会非常的方便，但想智能地推导出返回值的类型地时候却又犯了难。</li>
<li>当函数入参个数不确定地时候，又不愿意写出 <code>(...args: any[]) =&gt; void</code> 这种毫无卵用的参数类型定义。</li>
<li>使用 <code>联合类型(Union Types)</code> 时，虽然有 <code>类型守卫（Type guard）</code>，但是某些场景下依然不够好用。</li>
</ol>
<p>其实当你对它有足够的了解时，你就会发现 <code>联合类型(Union Types)</code> 比 <code>交叉类型(Intersection Types)</code> 不知道高到哪里去了，<s>我和它谈笑风生</s>。</p>
<h4 class="heading" data-id="heading-18">类型系统中的 "数组"</h4>
<h5 data-id="heading-19">下面就让我们更加深入地了解一下 联合类型(Union Types)：</h5>
<h6 data-id="heading-20">如何遍历 联合类型(Union Types) 呢？</h6>
<p>既然目标是 <strong>批量操作类型</strong>，自然少不了类型的 <strong>遍历</strong>，和大多数编程语言方法一样，在 <code>Typescript</code> 类型系统中也是 <code>in</code> 关键字来遍历。</p>
<pre><code class="hljs typescript copyable" lang="typescript"><span class="hljs-keyword">type</span> key = <span class="hljs-string">'vue'</span> | <span class="hljs-string">'react'</span>;

<span class="hljs-keyword">type</span> MappedType = { [k <span class="hljs-keyword">in</span> key]: <span class="hljs-built_in">string</span> } <span class="hljs-comment">// { vue: string; react: string; }</span>
<span class="copy-code-btn">复制代码</span></code></pre><p>你看，通过  <code>in</code> 关键字，我们可以很容易地遍历 <code>联合类型(Union Types)</code>，并对类型作一些变换操作。</p>
<p>但有时候并不是所有所有 <code>联合类型(Union Types)</code> 都是我们显式地定义出来的。</p>
<h6 data-id="heading-21">我们想动态地推导出 联合类型(Union Types) 类型有哪些方法呢？</h6>
<p>可以使用 <code>keyof</code> 关键字动态地取出某个键值对类型的 <code>key</code></p>
<pre><code class="hljs typescript copyable" lang="typescript"><span class="hljs-keyword">interface</span> Student {
  name: <span class="hljs-built_in">string</span>;
  age: <span class="hljs-built_in">number</span>;
}

<span class="hljs-keyword">type</span> studentKey = keyof Student; <span class="hljs-comment">// "name" | "age"</span>
<span class="copy-code-btn">复制代码</span></code></pre><p>同样的我们也可以通过一些方法取出 <code>元组类型</code> 子类型</p>
<pre><code class="hljs typescript copyable" lang="typescript"><span class="hljs-keyword">type</span> framework = [<span class="hljs-string">'vue'</span>, <span class="hljs-string">'react'</span>, <span class="hljs-string">'angular'</span>];

<span class="hljs-keyword">type</span> frameworkVal1 = framework[<span class="hljs-built_in">number</span>]; <span class="hljs-comment">// "vue" | "react" | "angular"</span>
<span class="hljs-keyword">type</span> frameworkVal2 = framework[<span class="hljs-built_in">any</span>]; <span class="hljs-comment">// "vue" | "react" | "angular"</span>
<span class="copy-code-btn">复制代码</span></code></pre><h4 class="heading" data-id="heading-22">实战应用</h4>
<p>看到这里，有的同学可能要问了，你既然说 <code>联合类型(Union Types)</code> 可以批量操作类型，<strong>那我想把某一组类型批量映射成另一种类型，该怎么操作呢</strong>？</p>
<p>方法其实有很多，这里提供一种思路，抛砖引玉一下，别的方法就留给同学们自行研究吧。</p>
<p>其实分析一下上面那个需求，不难看出，这个需求其实和数组的 <code>map</code> 方法有点相似</p>
<h6 data-id="heading-23">那么如何实现一个操作 联合类型(Union Types) 的 map 函数呢？</h6>
<pre><code class="hljs typescript copyable" lang="typescript"><span class="hljs-comment">// 这里的 placeholder 可以键入任何你所希望映射成为的类型</span>
<span class="hljs-keyword">type</span> UnionTypesMap&lt;T&gt; = T <span class="hljs-keyword">extends</span> <span class="hljs-built_in">any</span> ? <span class="hljs-string">'placeholder'</span> : never;
<span class="copy-code-btn">复制代码</span></code></pre><p>其实这里聪明的同学已经看出来，我们只是利用了 <code>条件类型(Conditional Types)</code>，使其的判断条件总是为 <code>true</code>，那么它就总是会返回左边的类型，我们就可以拿到 <code>泛型操作符</code> 的入参并自定义我们的操作。</p>
<p>让我们趁热打铁，再举个具体的栗子：把 <strong>联合类型(Union Types)</strong> 的每一项映射成某个函数的 <strong>返回值</strong>。</p>
<pre><code class="hljs typescript copyable" lang="typescript"><span class="hljs-keyword">type</span> UnionTypesMap2Func&lt;T&gt; = T <span class="hljs-keyword">extends</span> <span class="hljs-built_in">any</span> ? <span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> T : never;

<span class="hljs-keyword">type</span> myUnionTypes = <span class="hljs-string">"vue"</span> | <span class="hljs-string">"react"</span> | <span class="hljs-string">"angular"</span>;

<span class="hljs-keyword">type</span> myUnionTypes2FuncResult = UnionTypesMap2Func&lt;myUnionTypes&gt;;
<span class="hljs-comment">// (() =&gt; "vue") | (() =&gt; "react") | (() =&gt; "angular")</span>
<span class="copy-code-btn">复制代码</span></code></pre><p>相信有了上述内容的学习，我们已经对 <code>联合类型(Union Types)</code> 有了一个相对全面的了解，后续在此基础之上在作一些高级的拓展，也如砍瓜切菜一般简单了。</p>
<h4 class="heading" data-id="heading-24">其他数据类型</h4>
<p>当然除了数组，还存在其他的数据类型，例如可以用 <code>type</code> 或 <code>interface</code> 模拟 <code>Javascript</code> 中的 <strong>字面量对象</strong>，其特征之一就是可以使用 <code>myType['propKey']</code> 这样的方式取出子类型。这里抛砖引玉一下，有兴趣的同学可以自行研究。</p>
<h3 class="heading" data-id="heading-25">Typescript 的类型是支持  "作用域" 的</h3>
<h4 class="heading" data-id="heading-26">全局作用域</h4>
<p>就像常见的编程语言一样，在 <code>Typescript</code> 的类型系统中，也是支持 <strong>全局作用域</strong> 的。换句话说，你可以在没有 <strong>导入</strong> 的前提下，在 <strong>任意文件任意位置</strong> 直接获取到并且使用它。</p>
<p>通常使用 <code>declare</code> 关键字来修饰，例如我们常见的 <code>图片资源</code> 的类型定义：</p>
<pre><code class="hljs typescript copyable" lang="typescript"><span class="hljs-keyword">declare</span> <span class="hljs-keyword">module</span> '*.png';
declare <span class="hljs-keyword">module</span> '*.svg';
declare <span class="hljs-keyword">module</span> '*.jpg';
<span class="copy-code-btn">复制代码</span></code></pre><p>当然我们也可以在 <strong>全局作用域</strong> 内声明一个类型：</p>
<pre><code class="hljs typescript copyable" lang="typescript"><span class="hljs-keyword">declare</span> <span class="hljs-keyword">type</span> str = <span class="hljs-built_in">string</span>;
<span class="hljs-keyword">declare</span> <span class="hljs-keyword">interface</span> Foo {
  propA: <span class="hljs-built_in">string</span>;
  propB: <span class="hljs-built_in">number</span>;
}
<span class="copy-code-btn">复制代码</span></code></pre><p>需要注意的是，如何你的模块使用了 <code>export</code> 关键字导出了内容，上述的声明方式可能会失效，如果你依然想要将类型声明到全局，那么你就需要显式地声明到全局：</p>
<pre><code class="hljs typescript copyable" lang="typescript"><span class="hljs-keyword">declare</span> global {
  <span class="hljs-keyword">const</span> ModuleGlobalFoo: <span class="hljs-built_in">string</span>;
}
<span class="copy-code-btn">复制代码</span></code></pre><h4 class="heading" data-id="heading-27">模块作用域</h4>
<p>就像 <code>nodejs</code> 中的模块一样，每个文件都是一个模块，每个模块都是独立的模块作用域。这里模块作用域触发的条件之一就是使用 <code>export</code> 关键字导出内容。</p>
<p>每一个模块中定义的内容是无法直接在其他模块中直接获取到的，如果有需要的话，可以使用 <code>import</code> 关键字按需导入。</p>
<h4 class="heading" data-id="heading-28">泛型操作符作用域&amp;函数作用域</h4>
<p>泛型操作符是存在作用域的，还记得这一章的第一节为了方便大家理解，我把泛型操作符类比为函数吗？既然可以类比为函数，那么函数所具备的性质，泛型操作符自然也可以具备，所以存在泛型操作符作用域自然也就很好理解了。</p>
<p>这里定义的两个同名的 <code>T</code> 并不会相互影响：</p>
<pre><code class="hljs typescript copyable" lang="typescript"><span class="hljs-keyword">type</span> TypeOperator&lt;T&gt; = T;
<span class="hljs-keyword">type</span> TypeOperator2&lt;T&gt; = T;
<span class="copy-code-btn">复制代码</span></code></pre><p>上述是关于泛型操作符作用域的描述，下面我们聊一聊真正的函数作用域：</p>
<p><strong>类型也可以支持闭包</strong>：</p>
<pre><code class="hljs typescript copyable" lang="typescript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">Foo</span>&lt;<span class="hljs-title">T</span>&gt; (<span class="hljs-params"></span>) </span>{
  <span class="hljs-keyword">return</span> <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">param: T</span>) </span>{
    <span class="hljs-keyword">return</span> param;
  }
}

<span class="hljs-keyword">const</span> myFooStr = Foo&lt;<span class="hljs-built_in">string</span>&gt;();
<span class="hljs-comment">// const myFooStr: (param: string) =&gt; string</span>
<span class="hljs-comment">// 这里触发了闭包，类型依然可以被保留</span>
<span class="hljs-keyword">const</span> myFooNum = Foo&lt;<span class="hljs-built_in">number</span>&gt;();
<span class="hljs-comment">// const myFooNum: (param: number) =&gt; number</span>
<span class="hljs-comment">// 这里触发了闭包，类型也会保持相互独立，互不干涉</span>
<span class="copy-code-btn">复制代码</span></code></pre><h3 class="heading" data-id="heading-29">Typescript 的类型是支持 "递归" 的</h3>
<p><code>Typescript</code> 中的类型也是可以支持递归的，递归相关的问题比较抽象，这里还是举例来讲解，同时为了方便大家的理解，我也会像第一节一样，把类型递归的逻辑用 <code>Javascript</code> 语法描述一遍。</p>
<p>首先来让我们举个栗子：</p>
<h6 data-id="heading-30">假如现在需要把一个任意长度的元组类型中的子类型依次取出，并用 `&amp;` 拼接并返回。</h6>
<p>这里解决的方法其实非常非常多，解决的思路也非常非常多，由于这一小节讲的是 <strong>递归</strong>，所以我们使用递归的方式来解决。废话不罗嗦，先上代码：</p>
<pre><code class="hljs typescript copyable" lang="typescript"><span class="hljs-comment">// shift action</span>
<span class="hljs-keyword">type</span> ShiftAction&lt;T <span class="hljs-keyword">extends</span> <span class="hljs-built_in">any</span>[]&gt; = <span class="hljs-function">(<span class="hljs-params">(<span class="hljs-params">...args: T</span>) =&gt; <span class="hljs-built_in">any</span></span>) <span class="hljs-params">extends</span> (<span class="hljs-params">(<span class="hljs-params">arg1: <span class="hljs-built_in">any</span>, ...rest: infer R</span>) =&gt; <span class="hljs-built_in">any</span></span>) ? <span class="hljs-params">R</span> : <span class="hljs-params">never</span>;

<span class="hljs-params">type</span> <span class="hljs-params">combineTupleTypeWithTecursion</span>&lt;<span class="hljs-params">T</span> <span class="hljs-params">extends</span> <span class="hljs-params">any</span>[], <span class="hljs-params">E</span> = {}&gt; = {
  1: <span class="hljs-params">E</span>,
  0: <span class="hljs-params">combineTupleTypeWithTecursion</span>&lt;<span class="hljs-params">ShiftAction</span>&lt;<span class="hljs-params">T</span>&gt;, <span class="hljs-params">E</span> &amp; <span class="hljs-params">T</span>[0]&gt;
}[<span class="hljs-params">T</span> <span class="hljs-params">extends</span> [] ? 1 : 0]

<span class="hljs-params">type</span> <span class="hljs-params">test</span> = [{ <span class="hljs-params">a</span>: <span class="hljs-params">string</span> }, { <span class="hljs-params">b</span>: <span class="hljs-params">number</span> }];
<span class="hljs-params">type</span> <span class="hljs-params">testResult</span> = <span class="hljs-params">combineTupleTypeWithTecursion</span>&lt;<span class="hljs-params">test</span>&gt;; // { <span class="hljs-params">a</span>: <span class="hljs-params">string</span>; } &amp; { <span class="hljs-params">b</span>: <span class="hljs-params">number</span>; }
</span><span class="copy-code-btn">复制代码</span></code></pre><p>看到上面的代码是不是一脸懵逼？没关系，接下来我们用普通的 <code>Typescript</code> 代码来 "翻译" 一下上述的代码。</p>
<pre><code class="hljs typescript copyable" lang="typescript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">combineTupleTypeWithTecursion</span>(<span class="hljs-params">T: object[], E: object = {}</span>): <span class="hljs-title">object</span> </span>{
  <span class="hljs-keyword">return</span> T.length ? combineTupleTypeWithTecursion(T.slice(<span class="hljs-number">1</span>), { ...E, ...T[<span class="hljs-number">0</span>] }) : E
}

<span class="hljs-keyword">const</span> testData = [{ a: <span class="hljs-string">'hello world'</span> }, { b: <span class="hljs-number">100</span> }];
<span class="hljs-comment">// 此时函数的返回值为 { a: 'hello world', b: 100 }</span>
combineTupleTypeWithTecursion(testData);
<span class="copy-code-btn">复制代码</span></code></pre><p>看到这儿，相信聪明的同学一下子就懂了，原来类型的递归与普通函数的递归本质上是一样的。如果触发结束条件，就直接返回，否则就一直地递归调用下去，所传递的第二个参数用来保存上一次递归的计算结果。</p>
<p>当然熟悉递归的同学都知道，常见的编程语言中，递归行为非常消耗计算机资源的，一旦超出了最大限制那么程序就会崩溃。同理类型中的递归也是一样的，如果递归地过深，类型系统一样会崩溃，所以这里的代码大家理解就好，尽量不要在生产环境使用哈。</p>
<h3 class="heading" data-id="heading-31">小结</h3>
<p>还记得一开始提出的思考题吗？其实通过上述的学习，我们完全可以自信地说出，<code>Typescript</code> 的 <code>Type</code> 本身也是一套完备的编程语言，甚至可以说是完备的图灵语言。因此类型本身也是可以用来编程的，你完全可以用它来编写一些有趣的东西，更别说是搞定日常开发中遇到的简单的业务场景了。</p>
<h2 class="heading" data-id="heading-32">"高级用法" 的使用场景与价值</h2>
<h3 class="heading" data-id="heading-33">哪些用法可以被称为 "高级用法"</h3>
<p>其实所谓 "高级用法"，不过是用来解决某些特定的场景而产生的特定的约定俗称的写法或者语法糖。那高级用法重要吗？重要，也不重要。怎理解呢，根据编程中的 "二八原则"，20%的知识储备已经可以解决80%的需求问题，但是这剩余的20%，就是入门与熟练的分水岭。</p>
<p>其实只要当我们仔细翻阅一遍官方提供的 <a target="_blank" href="https://www.typescriptlang.org/docs/handbook/basic-types.html" rel="nofollow noopener noreferrer">handbook</a>，就已经可以应付日常开发了。但是就像本文一开头说的那样，你是否觉得：</p>
<ol>
<li><code>Typescript</code> 在某些场景下用起来很费劲，远不及 <code>Javascript</code> 灵活度的十分之一。</li>
<li>你是否为自己使用 <code>Javascript</code> 中了某些 <strong>骚操作</strong> 用极简短的代码解决了某个复杂的代码而沾沾自喜，但却为不正确的 <strong>返回类型</strong> 挠秃了头。</li>
<li>你是否明知用了若干 <code>as xxx</code> 会让你的代码看起来很挫，但却无能为力，含恨而终。</li>
</ol>
<p>同学，当你使用某种办法解决了上述的这些问题，那么这种用法就可以被称作 "高级用法"。</p>
<h3 class="heading" data-id="heading-34">举例说明 "高级用法" 的使用场景</h3>
<p>举个栗子：在 <code>Redux</code> 中有一个叫作 <code>combineReducers</code> 的函数，因为某些场景，我们需要增加一个 <code>combineReducersParamFactory</code> 的函数，该函数支持传入多个函数，传入函数的返回值为作为<code>combineReducers</code> 的入参，我们需要整合多个入参数函数的返回值，并生成最终的对象供 <code>combineReducers</code> 函数使用。</p>
<p>思考一下逻辑，发现其实并不复杂，用 <code>Javascript</code> 可以很容易地实现出来：</p>
<pre><code class="hljs javascript copyable" lang="javascript"><span class="hljs-comment">/**
 * 合并多个参数的返回数值并返回
 * @param { Function[] } reducerCreators
 * @returns { Object }
 */</span>
<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">combineReducersParamFactory</span>(<span class="hljs-params">...reducerCreators</span>) </span>{
  <span class="hljs-keyword">return</span> reducerCreators.reduce(<span class="hljs-function">(<span class="hljs-params">acc, creator</span>) =&gt;</span> ({ ...acc, ...creator() }), {})
}

<span class="hljs-comment">// test ...</span>

<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">todosReducer</span>(<span class="hljs-params">state = [], action</span>) </span>{
  <span class="hljs-keyword">switch</span> (action.type) {
    <span class="hljs-keyword">case</span> <span class="hljs-string">'ADD_TODO'</span>:
      <span class="hljs-keyword">return</span> state.concat([action.text])
    <span class="hljs-keyword">default</span>:
      <span class="hljs-keyword">return</span> state
  }
}

<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">counterReducer</span>(<span class="hljs-params">state = <span class="hljs-number">0</span>, action</span>) </span>{
  <span class="hljs-keyword">switch</span> (action.type) {
    <span class="hljs-keyword">case</span> <span class="hljs-string">'INCREMENT'</span>:
      <span class="hljs-keyword">return</span> state + <span class="hljs-number">1</span>
    <span class="hljs-keyword">case</span> <span class="hljs-string">'DECREMENT'</span>:
      <span class="hljs-keyword">return</span> state - <span class="hljs-number">1</span>
    <span class="hljs-keyword">default</span>:
      <span class="hljs-keyword">return</span> state
  }
}

<span class="hljs-keyword">const</span> ret = combineReducersParamFactory(
  <span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> ({ todosReducer }),
  () =&gt; ({ counterReducer })
);
<span class="hljs-comment">// { todosReducer: [Function: todosReducer], counterReducer: [Function: counterReducer] }</span>
<span class="copy-code-btn">复制代码</span></code></pre><p>但如果用需要配备对应的类型，应该如何编写呢？</p>
<pre><code class="hljs typescript copyable" lang="typescript">type Combine&lt;T&gt; = (T extends any ? (args: T) =&gt; any : never) extends (args: infer A) =&gt; any ? A : never;

/**
 * 合并多个参数的返回数值并返回
 * @param { Function[] } reducerCreators
 * @returns { Object }
 */
function combineReducersParamFactory&lt;T extends ((...args) =&gt; object)[]&gt;(...reducerCreators: T): Combine&lt;ReturnType&lt;T[number]&gt;&gt; {
  return reducerCreators.reduce&lt;any&gt;((acc, creator) =&gt; ({ ...acc, ...creator() }), {});
}

// test ...

function todosReducer(state: object[], action: { [x: string]: string}) {
  switch (action.type) {
    case 'ADD_TODO':
      return state.concat([action.text])
    default:
      return state
  }
}

function counterReducer(state: number, action: { [x: string]: string}) {
  switch (action.type) {
    case 'INCREMENT':
      return state + 1
    case 'DECREMENT':
      return state - 1
    default:
      return state
  }
}

// 这里不需要显示传入类型，这里就可以得到正确的代码提示
const ret = combineReducersParamFactory(
  () =&gt; ({ todosReducer }),
  () =&gt; ({ counterReducer })
);
// { todosReducer: [Function: todosReducer], counterReducer: [Function: counterReducer] }
<span class="copy-code-btn">复制代码</span></code></pre><p>你看，类型经过精心编排之后，就是可以让调用者不增加任何负担的前提下，享受到代码提示的快乐。</p>
<h3 class="heading" data-id="heading-35">小结</h3>
<p>经过这一章节的学习，我们可以明确了解到，经过我们精心编排的类型，可以变得非常的智能，可以让调用者几乎零成本地享受到代码提示的快乐。或许在编排类型时所耗费的时间成本比较大，但是一旦我们编排完成，就可以极大地减少调用者的脑力负担，让调用者享受到编程的快乐。</p>
<h2 class="heading" data-id="heading-36">类型推导与泛型操作符</h2>
<h3 class="heading" data-id="heading-37">流动的类型（类型编写思路）</h3>
<p>熟悉 <strong>函数式编程</strong> 的同学一定对 <strong>数据流动</strong> 的概念有较为深刻的理解。当你在 "上游" 改变了一个值之后，"下游" 相关的会跟着自动更新。有 <strong>响应式编程</strong> 经验的同学这是时候应该迫不及待地想举手了，同学把手放下，这里我们并不想深入地讨论 <strong>流式编程思想</strong>，之所以引出这些概念，是想类比出本小节的重点: <strong>流动的类型</strong>。</p>
<p>是的，编写类型系统的思路是可以借鉴 <strong>函数式编程</strong> 的思想的。因此某一个类型发生变化时，其他相关的类型也会自动更新，并且当代码的臃肿到不可维护的时候，你会得到一个友好的提示，整个类型系统就好像一个被精心设计过的约束系统。</p>
<h3 class="heading" data-id="heading-38">Typescript 代码哲学</h3>
<p>聊完了类型系统的编写思路，咱们再来聊一聊代码哲学。其实之所以现在 <code>Typescript</code> 越来越火，撇开哪些聊烂了的优势不谈，其实最大的优势在于强大的类型表现能力，以及编辑器（VSCode）完备的代码提示能力。</p>
<p>那么在这些优势的基础上，我个人拓展了一些编码哲学（习惯），这里见仁见智，大佬轻喷~：</p>
<ol>
<li>减少不必要的显式类型定义，尽可能多地使用类型推导，让类型的流动像呼吸一样自然。</li>
<li>尽可能少地使用 <code>any</code> 或 <code>as any</code>，注意这里并不是说不能用，而是你判断出目前情况下使用 <code>any</code> 是最优解。</li>
<li>如果确定要使用 <code>any</code> 作为类型，优先考虑一下是否可以使用 <code>unknown</code> 类型替代，毕竟 <code>any</code> 会破坏类型的流动。</li>
<li>尽可能少地使用 <code>as xxx</code>，如果大量使用这种方式纠正类型，那么大概率你对 <strong>类型流动</strong> 理解的还不够透彻。</li>
</ol>
<h2 class="heading" data-id="heading-39">常见类型推导实现逻辑梳理与实践入门</h2>
<h3 class="heading" data-id="heading-40">类型的传递（流动）</h3>
<p>前面我们说到，类型是具备流动性的，结合 <strong>响应式编程</strong> 的概念其实很容易理解。这一小节我们将列举几个常见的例子，来和大家具体讲解一下。</p>
<p>有编程经验的同学都知道，数据是可以被传递的，同理，类型也可以。</p>
<p>你可用 <code>type</code> 创建一个类型指针，指向对应的类型，那么就可以实现类型的传递，当然你也可以理解为指定起一个别名，或者说是拷贝，这里见仁见智，但是通过上述方法可以实现类型的传递，这是显而易见的。</p>
<pre><code class="hljs typescript copyable" lang="typescript"><span class="hljs-keyword">type</span> RawType = { a: <span class="hljs-built_in">string</span>, b: <span class="hljs-built_in">number</span> };

<span class="hljs-comment">// 这里就拿到了上述类型的引用</span>
<span class="hljs-keyword">type</span> InferType = RawType; <span class="hljs-comment">// { a: string, b: number };</span>
<span class="copy-code-btn">复制代码</span></code></pre><p>同样，类型也可以随着数据的传递而传递：</p>
<pre><code class="hljs typescript copyable" lang="typescript"><span class="hljs-keyword">var</span> num: <span class="hljs-built_in">number</span> = <span class="hljs-number">100</span>;
<span class="hljs-keyword">var</span> num2  = num;

<span class="hljs-keyword">type</span> Num2Type = <span class="hljs-keyword">typeof</span> num2; <span class="hljs-comment">// number</span>
<span class="copy-code-btn">复制代码</span></code></pre><p>也正是依赖这一点，<code>Typescript</code> 才得以实现 <strong>类型检查</strong>、<strong>定义跳转</strong> 等功能。</p>
<p>到这里熟悉 <strong>流式编程</strong> 的同学就要举手了：你光说了类型的 <strong>传递</strong>，<strong>输入</strong>  与  <strong>输出</strong>，那我如果希望在类型 <strong>传递</strong> 的过程中对它进行操作，该怎么做呢？同学你不要急，这正是我下面所想要讲的内容。</p>
<h3 class="heading" data-id="heading-41">类型的过滤与分流</h3>
<p>在上一小节中，我们反复地扯到了 <strong>函数式编程</strong>、<strong>响应式编程</strong>、<strong>流式编程</strong> 这些抽象的概念，其实并不是跑题，而是者两者的思想（理念）实在太相似了，在本小节后续的讲解中，我还会一直延用这些概念帮助大家理解。翻看一下常用 <strong>函数式编程</strong> 的库，不管是 <code>Ramda</code> 、<code>RXJS</code> 还是我们耳熟能详的 <code>lodash</code> 、<code>underscore</code>，里面一定有一个操作符叫作 <code>filter</code>，也就是对数据流的过滤。</p>
<p>这个操作符的使用频率一定远超其他操作符，那么这么重要的功能，我们在类型系统中该如何实现呢？</p>
<p>要解决这个问题，这里我们先要了解一个在各大 技术社区/平台 搜索频率非常高的一个问题:</p>
<p><strong>TypeScript中 的  never 类型具体有什么用？</strong></p>
<p>既然这个问题搜索频率非常之高，这里我也就不重复作答，有兴趣的同学可以看一下尤大大的回答： <a target="_blank" href="https://www.zhihu.com/question/354601204/answer/888551021" rel="nofollow noopener noreferrer">TypeScript中的never类型具体有什么用？ - 尤雨溪的回答 - 知乎</a>。</p>
<p>这里我们简单总结一下：</p>
<ol>
<li><code>never</code> 代表空集。</li>
<li>常用于用于校验 "类型收窄" 是否符合预期，就是写出类型绝对安全的代码。</li>
<li><code>never</code> 常被用来作 "类型兜底"。</li>
</ol>
<p>当然上面的总结并不完整，但已经足够帮助理解本小节内容，感兴趣的同学可以自行查阅相关资料。</p>
<p>上面提到了 "类型收窄"，这与我们的目标已经十分接近了，当然我们还需要了解 <code>never</code> 参与类型运算的相关表现：</p>
<pre><code class="hljs typescript copyable" lang="typescript"><span class="hljs-keyword">type</span> NeverTest = <span class="hljs-built_in">string</span> | never <span class="hljs-comment">// stirng</span>
<span class="hljs-keyword">type</span> NeverTest2 = <span class="hljs-built_in">string</span> &amp; never <span class="hljs-comment">// never</span>
<span class="copy-code-btn">复制代码</span></code></pre><p>重要的知识出现了：<code>T | never</code>，结果为 <code>T</code>。</p>
<p>看到这里，相信聪明的同学们已经有思路了，我们可以用 <code>never</code> 来过滤掉 <code>联合类型(Union Types)</code> 中不和期望的类型，其实这个 <strong>泛型操作符</strong> 早在 <a target="_blank" href="https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-8.html#predefined-conditional-types" rel="nofollow noopener noreferrer">Typescript 2.8</a> 就已经被加入到了官方文档中了。</p>
<pre><code class="hljs typescript copyable" lang="typescript"><span class="hljs-comment">/**
 * Exclude from T those types that are assignable to U
 */</span>
<span class="hljs-keyword">type</span> Exclude&lt;T, U&gt; = T <span class="hljs-keyword">extends</span> U ? never : T;
<span class="copy-code-btn">复制代码</span></code></pre><p>相信经过这么长时间的学习，看到这里你一定很容易就能这种写法的思路。</p>
<p>好了，讲完了 <strong>过滤</strong>，我们再来讲讲 <strong>分流</strong>。类型 <strong>分流</strong> 的概念其实也不难理解，这个概念常常与逻辑判断一同出现，毕竟从逻辑层面来讲，<code>联合类型(Union Types)</code> 本质上还是用来描述 <strong>或</strong> 的关系。同样的概念如果引入到 <strong>流式编程</strong> 中，就自然而然地会引出  <strong>分流</strong>。换成打白话来讲，就是不同数据应被分该发到不同的 <strong>管道</strong> 中，同理，类型也需要。</p>
<p>那么这么常用的功能，在 <code>Typescript</code> 中如何处理呢？其实这种常见的问题，官方也非常贴心地为我们考虑到了，那就是：<code>类型守卫（Type guard）</code>。网上对 <code>类型守卫（Type guard）</code> 有讲解的文章非常的多，这里也不作赘述，有兴趣的同学可以自行搜索学习。我们这里用一个简单的栗子简单地演示一下用法：</p>
<pre><code class="hljs typescript copyable" lang="typescript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">foo</span>(<span class="hljs-params">x: A | B</span>) </span>{
  <span class="hljs-keyword">if</span> (x <span class="hljs-keyword">instanceof</span> A) {
    <span class="hljs-comment">// x is A</span>
  } <span class="hljs-keyword">else</span> {
		<span class="hljs-comment">// x is B</span>
  }
}
<span class="copy-code-btn">复制代码</span></code></pre><p><strong>可以触发类型守卫的常见方式有</strong>：<code>typeof</code>、<code>instanceof</code>、<code>in</code>、<code>==</code>、 <code>===</code>、 <code>!=</code>、 <code>!==</code> 等等。</p>
<p>当然在有些场景中，单单通过以上的方式不能满足我们的需求，该怎么办呢？其实这种问题，官方也早已经帮我考虑到了：使用 <code>is</code> 关键字自定义 <code>类型守卫（Type guard）</code>。</p>
<pre><code class="hljs typescript copyable" lang="typescript"><span class="hljs-comment">// 注意这里需要返回 boolean 类型</span>
<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">isA</span>(<span class="hljs-params">x</span>): <span class="hljs-title">x</span> <span class="hljs-title">is</span> <span class="hljs-title">A</span> </span>{
  <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;
}

<span class="hljs-comment">// 注意这里需要返回 boolean 类型</span>
<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">isB</span>(<span class="hljs-params">x</span>): <span class="hljs-title">x</span> <span class="hljs-title">is</span> <span class="hljs-title">B</span> </span>{
  <span class="hljs-keyword">return</span> x <span class="hljs-keyword">instanceof</span> B;
}

<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">foo2</span>(<span class="hljs-params">x: unknown</span>) </span>{
  <span class="hljs-keyword">if</span> (isA(x)) {
    <span class="hljs-comment">// x is A</span>
  } <span class="hljs-keyword">else</span> {
    <span class="hljs-comment">// x is B</span>
  }
}
<span class="copy-code-btn">复制代码</span></code></pre><h3 class="heading" data-id="heading-42">小结</h3>
<p>这一章节中，我们通过类比 <code>响应式编程</code>、<code>流式编程</code> 的概念方式，帮助大家更好地理解了 <strong>类型推导</strong> 的实现逻辑与思路，相信经过了这一章节的学习，我们对 <code>Typescript</code> 中的类型推导又有了更加深入的理解。不过这一章引入的抽象的概念比较多，也比较杂，基础不是太好的同学需要多花点时间翻看一下相关资料。</p>
<h2 class="heading" data-id="heading-43">【未完待续...】常见泛型操作符实现逻辑梳理与实践入门</h2>
<h2 class="heading" data-id="heading-44">定制化扩展你的 Typescript</h2>
<h3 class="heading" data-id="heading-45">Typescript Service Plugins 的产生背景、功能定位、基础使用</h3>
<h4 class="heading" data-id="heading-46">产生背景</h4>
<p>说起 <code>Typescript</code> 的编译手段大部分同学应该都不会陌生，无论是在 <code>webpack</code> 中使用 <code>ts-loader</code> 或 <code>babel-loader</code>，还是在 <code>gulp</code> 中使用 <code>gulp-typescript</code>，亦或是直接使用 <code>Typescript</code> 自带的命令行工具，相信大部分同学也都已经驾轻就熟了，这里不做赘述。</p>
<p>这里我们把目光聚焦到撸码体验上，相信有使用过 <code>Typescritp</code> 开发前端项目的同学一定有过各种各样的困扰，这里列举几个常见的问题：</p>
<ol>
<li>在处理 CSS Module 的样式资源的类型定义时，不满足于使用 <code>declare module '*.module.css'</code> 这种毫无卵用的类型定义。</li>
<li>不想给编辑器安装各种各样的插件，下次启动编辑器的时间明显变长，小破电脑不堪重负，而且每次重装系统都是一次噩梦降临。</li>
<li>不想妥协于同事的使用习惯，想使用自己熟悉的编辑器。</li>
<li>并不满足于官方已有的代码提示，想让自己的编辑器更加地贴心与智能。</li>
</ol>
<h6 data-id="heading-47"><font color="#000">为了提供更加贴心的开发体验，Typescript 官方提供一种解决思路——Typescript Service Plugins</font></h6>
<h4 class="heading" data-id="heading-48">功能定位</h4>
<h6 data-id="heading-49">以下内容摘自官方 WIKI：</h6>
<blockquote>
<p>In TypeScript 2.2 and later, developers can enable <em>language service plugins</em> to <strong>augment the TypeScript code editing experience</strong>.</p>
</blockquote>
<p>其实官方文档已经写的很清楚了，这玩意儿旨在优化 <code>Typescript</code> 代码的 <strong>编写体验</strong>。所以想利用这玩意儿改变编译结果或是想自创新语法的还是省省吧<font color="#999"> <s>嗯，我在说我自己呢</s></font>！</p>
<p>那么 <code>Typescript Service Plugins</code> 的可以用来做哪些事呢？</p>
<p>官方也有明确的回答：</p>
<blockquote>
<p>plugins are for augmenting the editing experience. Some examples of things plugins might do:</p>
<ul>
<li>Provide errors from a linter inline in the editor</li>
<li>Filter the completion list to remove certain properties from <code>window</code></li>
<li>Redirect "Go to definition" to go to a different location for certain identifiers</li>
<li>Enable new errors or completions in string literals for a custom templating language</li>
</ul>
</blockquote>
<p>同样官方也给出了不推荐使用 <code>Typescript Service Plugins</code> 的场景：</p>
<blockquote>
<p>Examples of things language plugins cannot do:</p>
<ul>
<li>Add new custom syntax to TypeScript</li>
<li>Change how the compiler emits JavaScript</li>
<li>Customize the type system to change what is or isn't an error when running <code>tsc</code></li>
</ul>
</blockquote>
<p>好了，相信读到这里大家一定对 <code>Typescript Service Plugins</code> 有了一个大致的了解，下面我会介绍一下    <code>Typescript Service Plugins</code> 的安装与使用。</p>
<h4 class="heading" data-id="heading-50">如何安装以及如何配置 Typescript Service Plugins</h4>
<h5 data-id="heading-51">Typescript Service Plugins 的安装方法</h5>
<pre><code class="hljs bash copyable" lang="bash"><span class="hljs-comment"># 就像安装普通的 `npm` 包一样</span>
npm install --save-dev your_plugin_name
<span class="copy-code-btn">复制代码</span></code></pre><h5 data-id="heading-52">如何在 tsconfig.json 中配置 Typescript Service Plugins</h5>
<pre><code class="hljs json copyable" lang="json">{
  "compilerOptions": {
    /** compilerOptions Configuration ... */
    "noImplicitAny": true,
    "plugins": [
      {
        /** 配置插件名称，也可以填写本地路径 */
        "name": "sample-ts-plugin"
        /** 这里可以给插件传参 ... */
      }
      /** 支持同时引入多个插件 ... */
    ]
  }
}
<span class="copy-code-btn">复制代码</span></code></pre><h5 data-id="heading-53">几个需要注意的地方:</h5>
<ol>
<li>如果使用 <code>VSCode</code> 开发，记得务必 <a target="_blank" href="https://code.visualstudio.com/docs/typescript/typescript-compiling#_using-the-workspace-version-of-typescript" rel="nofollow noopener noreferrer">using the workspace version of typescript</a>，否则可能导致插件不生效。</li>
<li><code>Typescript Service Plugins</code> 产生的告警或者报错不会影响编译结果。</li>
<li>如果配置完了不生效可以先尝试重启你的编辑器。</li>
</ol>
<h3 class="heading" data-id="heading-54">市面上已有的 Typescript Service Plugins 举例介绍</h3>
<blockquote>
<p>具体使用细节请用编辑器打开我提供的 demo，自行体验。</p>
</blockquote>
<h4 class="heading" data-id="heading-55">示例插件：<a target="_blank" href="https://www.npmjs.com/package/typescript-plugin-css-modules" rel="nofollow noopener noreferrer">typescript-plugin-css-modules</a></h4>
<h5 data-id="heading-56">插件安装</h5>
<pre><code class="hljs bash copyable" lang="bash">npm install --save-dev typescript-styled-plugin typescript
<span class="copy-code-btn">复制代码</span></code></pre><h5 data-id="heading-57">配置方法</h5>
<h6 data-id="heading-58">在 tsconfig.json 中增加配置</h6>
<pre><code class="hljs json copyable" lang="json">{
  <span class="hljs-attr">"compilerOptions"</span>: {
    <span class="hljs-attr">"plugins"</span>: [
      {
        <span class="hljs-attr">"name"</span>: <span class="hljs-string">"typescript-styled-plugin"</span>
        /** 具体配置参数请查看官方文档 */
      }
    ]
  }
}
<span class="copy-code-btn">复制代码</span></code></pre><h5 data-id="heading-59">插件基本介绍与使用场景</h5>
<p>此插件可以用来缓解在使用 <code>CSS Module</code> 时没有代码提示的困境，主要思路就是通过读取对应的 CSS Module 文件并解析成对应的  <code>AST</code>，并生成对应的类型文件从而支持对应的代码提示。但是根据反馈来看，似乎某些场景下表现并不尽人意，是否值得大规模使用有待商榷。</p>
<p>类似实现思路的还有 <a target="_blank" href="https://www.npmjs.com/package/@teamsupercell/typings-for-css-modules-loader" rel="nofollow noopener noreferrer">typings-for-css-modules-loader</a>，功能来说肯定是 <code>webpack loader</code> 更加强大，但是 <code>Typescript Plugin</code> 更加轻量、入侵度也越低，取舍与否，见仁见智吧</p>
<h4 class="heading" data-id="heading-60">示例插件：<a target="_blank" href="https://www.npmjs.com/package/typescript-eslint-language-service" rel="nofollow noopener noreferrer">typescript-eslint-language-service</a></h4>
<h5 data-id="heading-61">插件安装</h5>
<pre><code class="hljs bash copyable" lang="bash">npm install --save-dev eslint typescript-eslint-language-service
<span class="copy-code-btn">复制代码</span></code></pre><h5 data-id="heading-62">配置方法</h5>
<p>在 <code>.eslintrc.*</code> 文件中，添加对应的 <code>eslint</code> 配置</p>
<h6 data-id="heading-63">在 tsconfig.json 中增加配置</h6>
<pre><code class="hljs json copyable" lang="json">{
  <span class="hljs-attr">"compilerOptions"</span>: {
    <span class="hljs-attr">"plugins"</span>: [
      {
        <span class="hljs-attr">"name"</span>: <span class="hljs-string">"typescript-eslint-language-service"</span>
        /** 默认会读取 `.eslintrc.*` 文件 */
        /** 具体配置参数请查看官方文档 */
      }
    ]
  }
}
<span class="copy-code-btn">复制代码</span></code></pre><h5 data-id="heading-64">插件基本介绍与使用场景</h5>
<p>此插件可以让 <code>Typescript</code> 原生支持 <code>eslint</code> 检查及告警，编辑器不需要安装任何插件即可自持，但是报错并不影响编译结果。</p>
<h4 class="heading" data-id="heading-65">示例插件：<a target="_blank" href="https://www.npmjs.com/package/typescript-styled-plugin" rel="nofollow noopener noreferrer">typescript-styled-plugin</a></h4>
<h5 data-id="heading-66">插件安装</h5>
<pre><code class="hljs bash copyable" lang="bash">npm install --save-dev typescript-styled-plugin typescript
<span class="copy-code-btn">复制代码</span></code></pre><h5 data-id="heading-67">配置方法</h5>
<h6 data-id="heading-68">在 tsconfig.json 中增加配置</h6>
<pre><code class="hljs json copyable" lang="json">{
  <span class="hljs-attr">"compilerOptions"</span>: {
    <span class="hljs-attr">"plugins"</span>: [
      {
        <span class="hljs-attr">"name"</span>: <span class="hljs-string">"typescript-styled-plugin"</span>
        /** 具体配置参数请查看官方文档 */
      }
    ]
  }
}
<span class="copy-code-btn">复制代码</span></code></pre><h5 data-id="heading-69">插件基本介绍与使用场景</h5>
<p>此插件可以为 <a target="_blank" href="https://www.npmjs.com/package/styled-components" rel="nofollow noopener noreferrer">styled-components</a> 的样式字符串模板提供 <code>属性/属性值</code> 做语法检查。
同时也推荐安装 <code>VSCode</code> 插件 <a target="_blank" href="https://github.com/styled-components/vscode-styled-components" rel="nofollow noopener noreferrer">vscode-styled-components</a>，为你的样式字符串模板提供代码提示以及语法高亮。</p>
<h3 class="heading" data-id="heading-70">如何自己写一个 Typescript Service Plugins</h3>
<p>未完待续...</p>
<h3 class="heading" data-id="heading-71">参考资料链接</h3>
<ol>
<li><a target="_blank" href="https://github.com/microsoft/TypeScript/wiki/Using-the-Compiler-API" rel="nofollow noopener noreferrer">Using the Compiler API</a></li>
<li><a target="_blank" href="https://github.com/microsoft/TypeScript/wiki/Using-the-Language-Service-API" rel="nofollow noopener noreferrer">Using the Language Service API</a></li>
<li><a target="_blank" href="https://github.com/microsoft/TypeScript/wiki/Writing-a-Language-Service-Plugin" rel="nofollow noopener noreferrer">Writing a Language Service Plugin</a></li>
<li><a target="_blank" href="https://github.com/microsoft/TypeScript/wiki/Useful-Links-for-TypeScript-Issue-Management" rel="nofollow noopener noreferrer">Useful Links for TypeScript Issue Management</a></li>
</ol>
<h3 class="heading" data-id="heading-72">总结</h3>
<p>未完待续...</p>
<h2 class="heading" data-id="heading-73">Q&amp;A（欢迎评论区补充）</h2>
<h3 class="heading" data-id="heading-74">可以利用 Typescript Service Plugin（例如配置 eslint 规则）阻塞编译或者在编译时告警吗？</h3>
<p><strong>答</strong>：不可以，所有可以使用 <code>Typescript Plugin</code> 的场景一定都是编码阶段的，而且官方对 plugins 的定位局限在了 <code>只改善编写体验</code> 这方面，你并不能自定义语法或者自定义规则来改变编译结果，不过你可以考虑使用自定义 <code>compiler</code>，当然这是另一个话题了。</p>
<p>以下引用自官方文档：</p>
<blockquote>
<p>TypeScript Language Service Plugins ("plugins") are for changing the <strong>editing experience only</strong>. The core TypeScript language remains the same. Plugins can't add new language features such as new syntax or different typechecking behavior, and <strong>plugins aren't loaded during normal commandline typechecking or emitting</strong>.</p>
</blockquote>
</div></article><div data-v-fa2339b8="" data-v-6fdc8784="" class="tag-list-box"><div data-v-fa2339b8="" data-v-6fdc8784="" class="tag-list-title">关注下面的标签，发现更多相似文章</div><div data-v-fa2339b8="" data-v-6fdc8784="" st:block="tagList" class="tag-list"><a data-v-fa2339b8="" href="https://juejin.im/tag/TypeScript" target="_blank" rel="" st:name="tag" class="item" data-v-6fdc8784=""><div data-v-95ddf8f6="" data-v-4802f2b2="" data-v-fa2339b8="" data-src="https://lc-gold-cdn.xitu.io/d788a559489fa6e30b25.png?imageView2/2/w/42/h/42/q/85/format/webp/interlace/1" class="lazy thumb tag-icon" style="background-image: none; background-size: contain;"></div><div data-v-fa2339b8="" class="tag-title">TypeScript</div></a></div></div><a data-v-fa2339b8="" href="https://juejin.im/user/5800462ed20309006801eabf" target="_blank" rel="" data-v-6fdc8784=""><div data-v-fa2339b8="" class="footer-author-block"><div data-v-081ef9db="" data-v-fa2339b8="" itemscope="itemscope" itemtype="http://schema.org/Person" class="author"><meta itemprop="url" content="https://juejin.im/user/5800462ed20309006801eabf"><meta itemprop="image" content="https://user-gold-cdn.xitu.io/2020/4/27/171b92c865a2a09e?w=542&amp;h=543&amp;f=png&amp;s=296190"><meta itemprop="name" content="黑头发的小强"><meta itemprop="jobTitle" content="前端开发"><div itemprop="memberOf" itemscope="itemscope" itemtype="http://schema.org/Organization"><meta itemprop="name" content="SHEIN-ABC"></div><div data-v-081ef9db="" class="author-info-block"><a data-v-081ef9db="" href="https://juejin.im/user/5800462ed20309006801eabf" target="_blank" rel="" class="avatar-link"><div data-v-95ddf8f6="" data-v-39db9419="" data-v-081ef9db="" data-src="https://user-gold-cdn.xitu.io/2020/4/27/171b92c865a2a09e?imageView2/1/w/100/h/100/q/85/format/webp/interlace/1" class="lazy avatar avatar" style="background-image: none;"></div></a><div data-v-081ef9db="" class="author-info-box"><div data-v-081ef9db="" class="profile-box"><a data-v-263f3a32="" data-v-081ef9db="" href="https://juejin.im/user/5800462ed20309006801eabf" target="_blank" rel="" class="username username ellipsis">黑头发的小强<a data-v-6d94a6ea="" data-v-263f3a32="" href="https://juejin.im/book/5c90640c5188252d7941f5bb/section/5c9065385188252da6320022" target="_blank" rel="" class="rank"><img data-v-6d94a6ea="" src="./【万字长文】深入理解 Typescript 高级用法 - 掘金_files/lv-2.f597b88.svg" alt="lv-2"></a></a><span data-v-081ef9db="" class="position ellipsis">前端开发 @ SHEIN-ABC</span></div><div data-v-081ef9db="" class="meta-box"><a data-v-081ef9db="" href="https://juejin.im/user/5800462ed20309006801eabf/posts" target="_blank" rel="" class="posts"><span data-v-081ef9db="" class="count post-count">发布了 1 篇专栏 · </span></a><span data-v-081ef9db="" class="count">获得点赞 164 · </span><span data-v-081ef9db="" class="count">获得阅读 5,118</span></div></div><button data-v-5789daef="" data-v-081ef9db="" class="follow-button follow">关注</button></div></div></div></a><div data-v-fa2339b8="" data-v-6fdc8784="" st:block="banner" class="article-banner"><a data-v-fa2339b8="" data-v-6fdc8784="" st:name="link" st:state="https://juejin.im/extension/?utm_source=juejin.im&amp;utm_medium=post&amp;utm_campaign=extension_promotion" class="banner-title" href="https://juejin.im/extension/?utm_source=juejin.im&amp;utm_medium=post&amp;utm_campaign=extension_promotion" target="_blank">安装掘金浏览器插件</a><div data-v-fa2339b8="" data-v-6fdc8784="" class="banner-content">打开新标签页发现好内容，掘金、GitHub、Dribbble、ProductHunt 等站点内容轻松获取。快来安装掘金浏览器插件获取高质量内容吧！</div></div><!----><!----><div data-v-0d823780="" data-v-fa2339b8="" class="comment-list-box" id="comment-box" data-v-6fdc8784="" manual="true"><div data-v-0d823780="" class="title">评论</div><div data-v-155bc796="" data-v-0d823780="" class="comment-form comment-form"><div data-v-155bc796="" class="avatar-box"><div data-v-95ddf8f6="" data-v-39db9419="" data-v-155bc796="" data-src="https://mirror-gold-cdn.xitu.io/168e08d6d9e8b3febec?imageView2/1/w/100/h/100/q/85/format/webp/interlace/1" class="lazy avatar avatar" style="background-image: none;"></div></div><div data-v-155bc796="" class="form-box"><div data-v-155bc796="" class="input-box"><div data-v-cc6aae16="" data-v-155bc796="" class="auth-card"><!----><div data-v-155bc796="" data-v-cc6aae16="" contenteditable="true" spellcheck="false" placeholder="输入评论..." class="rich-input empty"><br data-v-155bc796="" data-v-cc6aae16=""></div></div><!----></div><!----></div><input data-v-155bc796="" type="file" class="hidden"></div><div data-v-1540c949="" data-v-0d823780="" class="comment-list comment-list"><div data-v-0a49d917="" data-v-1540c949="" class="image-viewer-box"><!----></div><div data-v-1540c949="" class="item"><div data-v-164d9344="" data-v-1540c949="" class="comment comment"><div data-v-b628736a="" data-v-164d9344="" st:block="userPopover" st:state="58c37353da2f6056096834a1" class="user-popover-box popover"><!----><a data-v-164d9344="" href="https://juejin.im/user/58c37353da2f6056096834a1" target="_blank" rel="" class="user-link" data-v-b628736a=""><div data-v-95ddf8f6="" data-v-39db9419="" data-v-164d9344="" data-src="https://leancloud-gold-cdn.xitu.io/oq4BTeVLg0KYKOYIRlqrizffok7Yyi2NVjMn7M1T?imageView2/1/w/100/h/100/q/85/format/webp/interlace/1" class="lazy avatar avatar" style="background-image: none;"></div></a></div><div data-v-164d9344="" class="content-box comment-divider-line"><div data-v-164d9344="" class="meta-box"><div data-v-b628736a="" data-v-164d9344="" st:block="userPopover" st:state="58c37353da2f6056096834a1" class="user-popover-box"><!----><a data-v-263f3a32="" data-v-164d9344="" href="https://juejin.im/user/58c37353da2f6056096834a1" target="_blank" rel="" class="username username ellipsis" data-v-b628736a="">张大宗伟同志<a data-v-6d94a6ea="" data-v-263f3a32="" href="https://juejin.im/book/5c90640c5188252d7941f5bb/section/5c9065385188252da6320022" target="_blank" rel="" class="rank"><img data-v-6d94a6ea="" src="./【万字长文】深入理解 Typescript 高级用法 - 掘金_files/lv-1.636691c.svg" alt="lv-1"></a></a></div><div data-v-164d9344="" class="position">前端 go @ TCloud</div></div><div data-v-164d9344="" class="content">您好，作者，我这里有了一些困惑，问题见下图：</div><div data-v-164d9344="" class="limit-ctl-box"><!----><!----></div><!----><div data-v-164d9344="" class="reply-stat"><time data-v-164d9344="" datetime="2020-05-10T14:31:04.940Z" title="Sun May 10 2020 22:31:04 GMT+0800 (中国标准时间)" class="time">12天前</time><div data-v-164d9344="" class="delete"> &nbsp;·&nbsp;删除</div><div data-v-164d9344="" class="action-box"><div data-v-164d9344="" class="like-action action"><svg data-v-164d9344="" aria-hidden="true" width="16" height="16" viewBox="0 0 20 20" class="icon like-icon"><g data-v-164d9344="" fill="none" fill-rule="evenodd"><path data-v-164d9344="" d="M0 0h20v20H0z"></path> <path data-v-164d9344="" stroke="#8A93A0" stroke-linejoin="round" d="M4.58 8.25V17h-1.4C2.53 17 2 16.382 2 15.624V9.735c0-.79.552-1.485 1.18-1.485h1.4zM11.322 2c1.011.019 1.614.833 1.823 1.235.382.735.392 1.946.13 2.724-.236.704-.785 1.629-.785 1.629h4.11c.434 0 .838.206 1.107.563.273.365.363.84.24 1.272l-1.86 6.513A1.425 1.425 0 0 1 14.724 17H6.645V7.898C8.502 7.51 9.643 4.59 9.852 3.249A1.47 1.47 0 0 1 11.322 2z"></path></g></svg><!----></div><div data-v-164d9344="" class="comment-action action"><svg data-v-164d9344="" aria-hidden="true" width="16" height="16" viewBox="0 0 20 20" class="icon comment-icon"><g data-v-164d9344="" fill="none" fill-rule="evenodd"><path data-v-164d9344="" d="M0 0h20v20H0z"></path> <path data-v-164d9344="" stroke="#8A93A0" stroke-linejoin="round" d="M10 17c-4.142 0-7.5-2.91-7.5-6.5S5.858 4 10 4c4.142 0 7.5 2.91 7.5 6.5 0 1.416-.522 2.726-1.41 3.794-.129.156.41 3.206.41 3.206l-3.265-1.134c-.998.369-2.077.634-3.235.634z"></path></g></svg> <span data-v-164d9344="" class="action-title">回复</span></div></div></div><!----><div data-v-0aa2f002="" data-v-164d9344="" class="sub-comment-list sub-comment-list"><div data-v-0aa2f002="" class="item"><div data-v-406f083c="" data-v-0aa2f002="" class="sub-comment sub-comment"><div data-v-406f083c="" class="sub-comment-content-row"><div data-v-406f083c="" class="sub-comment-content-box"><div data-v-b628736a="" data-v-406f083c="" st:block="userPopover" st:state="5800462ed20309006801eabf" class="user-popover-box popover"><!----><a data-v-406f083c="" href="https://juejin.im/user/5800462ed20309006801eabf" target="_blank" rel="" class="username" data-v-b628736a=""><div data-v-95ddf8f6="" data-v-39db9419="" data-v-406f083c="" data-src="https://user-gold-cdn.xitu.io/2020/4/27/171b92c865a2a09e?imageView2/1/w/100/h/100/q/85/format/webp/interlace/1" class="lazy avatar avatar" style="background-image: none;"></div></a></div><div data-v-406f083c="" class="user-content-box"><div data-v-406f083c="" class="profie"><div data-v-b628736a="" data-v-406f083c="" st:block="userPopover" st:state="5800462ed20309006801eabf" class="user-popover-box"><!----><a data-v-263f3a32="" data-v-406f083c="" href="https://juejin.im/user/5800462ed20309006801eabf" target="_blank" rel="" class="username" data-v-b628736a="">黑头发的小强<a data-v-6d94a6ea="" data-v-263f3a32="" href="https://juejin.im/book/5c90640c5188252d7941f5bb/section/5c9065385188252da6320022" target="_blank" rel="" class="rank"><img data-v-6d94a6ea="" src="./【万字长文】深入理解 Typescript 高级用法 - 掘金_files/lv-2.f597b88.svg" alt="lv-2"></a><span data-v-406f083c="" class="author-badge-text">(作者)</span></a></div><div data-v-406f083c="" class="position">前端开发 @ SHEIN-ABC</div></div><div data-v-406f083c="" class="content-box"><span data-v-406f083c=""> 回复 </span><div data-v-b628736a="" data-v-406f083c="" st:block="userPopover" st:state="58c37353da2f6056096834a1" class="user-popover-box"><!----><a data-v-263f3a32="" data-v-406f083c="" href="https://juejin.im/user/58c37353da2f6056096834a1" target="_blank" rel="" class="username username be-replied" data-v-b628736a="">张大宗伟同志<a data-v-6d94a6ea="" data-v-263f3a32="" href="https://juejin.im/book/5c90640c5188252d7941f5bb/section/5c9065385188252da6320022" target="_blank" rel="" class="rank"><img data-v-6d94a6ea="" src="./【万字长文】深入理解 Typescript 高级用法 - 掘金_files/lv-1.636691c.svg" alt="lv-1"></a></a></div><!----><span data-v-406f083c="">: </span><span data-v-406f083c="" class="content">？？？</span></div><!----><!----><div data-v-406f083c="" class="limit-all-box"><!----></div><div data-v-406f083c="" class="sub-comment-stat-box"><time data-v-406f083c="" datetime="2020-05-10T14:32:47.150Z" title="Sun May 10 2020 22:32:47 GMT+0800 (中国标准时间)" class="time">12天前</time><div data-v-406f083c="" class="delete"> &nbsp;·&nbsp;删除</div><div data-v-406f083c="" class="sub-comment-action-box"><div data-v-406f083c="" class="like-action action"><svg data-v-406f083c="" aria-hidden="true" width="16" height="16" viewBox="0 0 20 20" class="icon like-icon"><g data-v-406f083c="" fill="none" fill-rule="evenodd"><path data-v-406f083c="" d="M0 0h20v20H0z"></path> <path data-v-406f083c="" stroke="#8A93A0" stroke-linejoin="round" d="M4.58 8.25V17h-1.4C2.53 17 2 16.382 2 15.624V9.735c0-.79.552-1.485 1.18-1.485h1.4zM11.322 2c1.011.019 1.614.833 1.823 1.235.382.735.392 1.946.13 2.724-.236.704-.785 1.629-.785 1.629h4.11c.434 0 .838.206 1.107.563.273.365.363.84.24 1.272l-1.86 6.513A1.425 1.425 0 0 1 14.724 17H6.645V7.898C8.502 7.51 9.643 4.59 9.852 3.249A1.47 1.47 0 0 1 11.322 2z"></path></g></svg><!----></div><div data-v-406f083c="" class="comment-action action"><svg data-v-406f083c="" aria-hidden="true" width="16" height="16" viewBox="0 0 20 20" class="icon comment-icon"><g data-v-406f083c="" fill="none" fill-rule="evenodd"><path data-v-406f083c="" d="M0 0h20v20H0z"></path> <path data-v-406f083c="" stroke="#8A93A0" stroke-linejoin="round" d="M10 17c-4.142 0-7.5-2.91-7.5-6.5S5.858 4 10 4c4.142 0 7.5 2.91 7.5 6.5 0 1.416-.522 2.726-1.41 3.794-.129.156.41 3.206.41 3.206l-3.265-1.134c-.998.369-2.077.634-3.235.634z"></path></g></svg> <span data-v-406f083c="">回复</span></div></div></div><!----></div></div></div><!----></div></div><div data-v-0aa2f002="" class="item"><div data-v-406f083c="" data-v-0aa2f002="" class="sub-comment sub-comment"><div data-v-406f083c="" class="sub-comment-content-row"><div data-v-406f083c="" class="sub-comment-content-box"><div data-v-b628736a="" data-v-406f083c="" st:block="userPopover" st:state="58c37353da2f6056096834a1" class="user-popover-box popover"><!----><a data-v-406f083c="" href="https://juejin.im/user/58c37353da2f6056096834a1" target="_blank" rel="" class="username" data-v-b628736a=""><div data-v-95ddf8f6="" data-v-39db9419="" data-v-406f083c="" data-src="https://leancloud-gold-cdn.xitu.io/oq4BTeVLg0KYKOYIRlqrizffok7Yyi2NVjMn7M1T?imageView2/1/w/100/h/100/q/85/format/webp/interlace/1" class="lazy avatar avatar" style="background-image: none;"></div></a></div><div data-v-406f083c="" class="user-content-box"><div data-v-406f083c="" class="profie"><div data-v-b628736a="" data-v-406f083c="" st:block="userPopover" st:state="58c37353da2f6056096834a1" class="user-popover-box"><!----><a data-v-263f3a32="" data-v-406f083c="" href="https://juejin.im/user/58c37353da2f6056096834a1" target="_blank" rel="" class="username" data-v-b628736a="">张大宗伟同志<a data-v-6d94a6ea="" data-v-263f3a32="" href="https://juejin.im/book/5c90640c5188252d7941f5bb/section/5c9065385188252da6320022" target="_blank" rel="" class="rank"><img data-v-6d94a6ea="" src="./【万字长文】深入理解 Typescript 高级用法 - 掘金_files/lv-1.636691c.svg" alt="lv-1"></a></a></div><div data-v-406f083c="" class="position">前端 go @ TCloud</div></div><div data-v-406f083c="" class="content-box"><span data-v-406f083c=""> 回复 </span><div data-v-b628736a="" data-v-406f083c="" st:block="userPopover" st:state="58c37353da2f6056096834a1" class="user-popover-box"><!----><a data-v-263f3a32="" data-v-406f083c="" href="https://juejin.im/user/58c37353da2f6056096834a1" target="_blank" rel="" class="username username be-replied" data-v-b628736a="">张大宗伟同志<a data-v-6d94a6ea="" data-v-263f3a32="" href="https://juejin.im/book/5c90640c5188252d7941f5bb/section/5c9065385188252da6320022" target="_blank" rel="" class="rank"><img data-v-6d94a6ea="" src="./【万字长文】深入理解 Typescript 高级用法 - 掘金_files/lv-1.636691c.svg" alt="lv-1"></a></a></div><!----><span data-v-406f083c="">: </span><span data-v-406f083c="" class="content">抱歉！图粘贴不上来。就直接贴代码了：</span></div><!----><!----><div data-v-406f083c="" class="limit-all-box"><!----></div><div data-v-406f083c="" class="sub-comment-stat-box"><time data-v-406f083c="" datetime="2020-05-10T14:34:06.568Z" title="Sun May 10 2020 22:34:06 GMT+0800 (中国标准时间)" class="time">12天前</time><div data-v-406f083c="" class="delete"> &nbsp;·&nbsp;删除</div><div data-v-406f083c="" class="sub-comment-action-box"><div data-v-406f083c="" class="like-action action"><svg data-v-406f083c="" aria-hidden="true" width="16" height="16" viewBox="0 0 20 20" class="icon like-icon"><g data-v-406f083c="" fill="none" fill-rule="evenodd"><path data-v-406f083c="" d="M0 0h20v20H0z"></path> <path data-v-406f083c="" stroke="#8A93A0" stroke-linejoin="round" d="M4.58 8.25V17h-1.4C2.53 17 2 16.382 2 15.624V9.735c0-.79.552-1.485 1.18-1.485h1.4zM11.322 2c1.011.019 1.614.833 1.823 1.235.382.735.392 1.946.13 2.724-.236.704-.785 1.629-.785 1.629h4.11c.434 0 .838.206 1.107.563.273.365.363.84.24 1.272l-1.86 6.513A1.425 1.425 0 0 1 14.724 17H6.645V7.898C8.502 7.51 9.643 4.59 9.852 3.249A1.47 1.47 0 0 1 11.322 2z"></path></g></svg><!----></div><div data-v-406f083c="" class="comment-action action"><svg data-v-406f083c="" aria-hidden="true" width="16" height="16" viewBox="0 0 20 20" class="icon comment-icon"><g data-v-406f083c="" fill="none" fill-rule="evenodd"><path data-v-406f083c="" d="M0 0h20v20H0z"></path> <path data-v-406f083c="" stroke="#8A93A0" stroke-linejoin="round" d="M10 17c-4.142 0-7.5-2.91-7.5-6.5S5.858 4 10 4c4.142 0 7.5 2.91 7.5 6.5 0 1.416-.522 2.726-1.41 3.794-.129.156.41 3.206.41 3.206l-3.265-1.134c-.998.369-2.077.634-3.235.634z"></path></g></svg> <span data-v-406f083c="">回复</span></div></div></div><!----></div></div></div><!----></div></div><div data-v-0aa2f002="" class="item fetch-more"><div data-v-0aa2f002="" class="fetch-more-comment">加载更多</div></div></div></div><!----></div></div><div data-v-1540c949="" class="item"><div data-v-164d9344="" data-v-1540c949="" class="comment comment"><div data-v-b628736a="" data-v-164d9344="" st:block="userPopover" st:state="562118b460b27e6cd488d565" class="user-popover-box popover"><!----><a data-v-164d9344="" href="https://juejin.im/user/562118b460b27e6cd488d565" target="_blank" rel="" class="user-link" data-v-b628736a=""><div data-v-95ddf8f6="" data-v-39db9419="" data-v-164d9344="" data-src="https://b-gold-cdn.xitu.io/v3/static/img/default-avatar.e30559a.svg" class="lazy avatar avatar loaded" style="background-image: url(&quot;https://b-gold-cdn.xitu.io/v3/static/img/default-avatar.e30559a.svg&quot;);"></div></a></div><div data-v-164d9344="" class="content-box comment-divider-line"><div data-v-164d9344="" class="meta-box"><div data-v-b628736a="" data-v-164d9344="" st:block="userPopover" st:state="562118b460b27e6cd488d565" class="user-popover-box"><!----><a data-v-263f3a32="" data-v-164d9344="" href="https://juejin.im/user/562118b460b27e6cd488d565" target="_blank" rel="" class="username username ellipsis" data-v-b628736a="">Hicc<!----></a></div><div data-v-164d9344="" class="position">FE</div></div><div data-v-164d9344="" class="content">type Combine&lt;T&gt; = (T extends any ? (args: T) =&gt; any : never) extends (args: infer A) =&gt; any ? A : never;
这个不就是T吗？啥都没干呀？</div><div data-v-164d9344="" class="limit-ctl-box"><!----><!----></div><!----><div data-v-164d9344="" class="reply-stat"><time data-v-164d9344="" datetime="2020-05-05T13:29:00.789Z" title="Tue May 05 2020 21:29:00 GMT+0800 (中国标准时间)" class="time">17天前</time><div data-v-164d9344="" class="delete"> &nbsp;·&nbsp;删除</div><div data-v-164d9344="" class="action-box"><div data-v-164d9344="" class="like-action action"><svg data-v-164d9344="" aria-hidden="true" width="16" height="16" viewBox="0 0 20 20" class="icon like-icon"><g data-v-164d9344="" fill="none" fill-rule="evenodd"><path data-v-164d9344="" d="M0 0h20v20H0z"></path> <path data-v-164d9344="" stroke="#8A93A0" stroke-linejoin="round" d="M4.58 8.25V17h-1.4C2.53 17 2 16.382 2 15.624V9.735c0-.79.552-1.485 1.18-1.485h1.4zM11.322 2c1.011.019 1.614.833 1.823 1.235.382.735.392 1.946.13 2.724-.236.704-.785 1.629-.785 1.629h4.11c.434 0 .838.206 1.107.563.273.365.363.84.24 1.272l-1.86 6.513A1.425 1.425 0 0 1 14.724 17H6.645V7.898C8.502 7.51 9.643 4.59 9.852 3.249A1.47 1.47 0 0 1 11.322 2z"></path></g></svg><!----></div><div data-v-164d9344="" class="comment-action action"><svg data-v-164d9344="" aria-hidden="true" width="16" height="16" viewBox="0 0 20 20" class="icon comment-icon"><g data-v-164d9344="" fill="none" fill-rule="evenodd"><path data-v-164d9344="" d="M0 0h20v20H0z"></path> <path data-v-164d9344="" stroke="#8A93A0" stroke-linejoin="round" d="M10 17c-4.142 0-7.5-2.91-7.5-6.5S5.858 4 10 4c4.142 0 7.5 2.91 7.5 6.5 0 1.416-.522 2.726-1.41 3.794-.129.156.41 3.206.41 3.206l-3.265-1.134c-.998.369-2.077.634-3.235.634z"></path></g></svg> <span data-v-164d9344="" class="action-title">回复</span></div></div></div><!----><div data-v-0aa2f002="" data-v-164d9344="" class="sub-comment-list sub-comment-list"><div data-v-0aa2f002="" class="item"><div data-v-406f083c="" data-v-0aa2f002="" class="sub-comment sub-comment"><div data-v-406f083c="" class="sub-comment-content-row"><div data-v-406f083c="" class="sub-comment-content-box"><div data-v-b628736a="" data-v-406f083c="" st:block="userPopover" st:state="5800462ed20309006801eabf" class="user-popover-box popover"><!----><a data-v-406f083c="" href="https://juejin.im/user/5800462ed20309006801eabf" target="_blank" rel="" class="username" data-v-b628736a=""><div data-v-95ddf8f6="" data-v-39db9419="" data-v-406f083c="" data-src="https://user-gold-cdn.xitu.io/2020/4/27/171b92c865a2a09e?imageView2/1/w/100/h/100/q/85/format/webp/interlace/1" class="lazy avatar avatar" style="background-image: none;"></div></a></div><div data-v-406f083c="" class="user-content-box"><div data-v-406f083c="" class="profie"><div data-v-b628736a="" data-v-406f083c="" st:block="userPopover" st:state="5800462ed20309006801eabf" class="user-popover-box"><!----><a data-v-263f3a32="" data-v-406f083c="" href="https://juejin.im/user/5800462ed20309006801eabf" target="_blank" rel="" class="username" data-v-b628736a="">黑头发的小强<a data-v-6d94a6ea="" data-v-263f3a32="" href="https://juejin.im/book/5c90640c5188252d7941f5bb/section/5c9065385188252da6320022" target="_blank" rel="" class="rank"><img data-v-6d94a6ea="" src="./【万字长文】深入理解 Typescript 高级用法 - 掘金_files/lv-2.f597b88.svg" alt="lv-2"></a><span data-v-406f083c="" class="author-badge-text">(作者)</span></a></div><div data-v-406f083c="" class="position">前端开发 @ SHEIN-ABC</div></div><div data-v-406f083c="" class="content-box"><span data-v-406f083c=""> 回复 </span><div data-v-b628736a="" data-v-406f083c="" st:block="userPopover" st:state="562118b460b27e6cd488d565" class="user-popover-box"><!----><a data-v-263f3a32="" data-v-406f083c="" href="https://juejin.im/user/562118b460b27e6cd488d565" target="_blank" rel="" class="username username be-replied" data-v-b628736a="">Hicc<!----></a></div><!----><span data-v-406f083c="">: </span><span data-v-406f083c="" class="content">这是利用类型重载逆变的特性把A | B 转成 A &amp; B，你可以拷贝下来自己试试看哦</span></div><!----><!----><div data-v-406f083c="" class="limit-all-box"><!----></div><div data-v-406f083c="" class="sub-comment-stat-box"><time data-v-406f083c="" datetime="2020-05-05T13:31:56.655Z" title="Tue May 05 2020 21:31:56 GMT+0800 (中国标准时间)" class="time">17天前</time><div data-v-406f083c="" class="delete"> &nbsp;·&nbsp;删除</div><div data-v-406f083c="" class="sub-comment-action-box"><div data-v-406f083c="" class="like-action action"><svg data-v-406f083c="" aria-hidden="true" width="16" height="16" viewBox="0 0 20 20" class="icon like-icon"><g data-v-406f083c="" fill="none" fill-rule="evenodd"><path data-v-406f083c="" d="M0 0h20v20H0z"></path> <path data-v-406f083c="" stroke="#8A93A0" stroke-linejoin="round" d="M4.58 8.25V17h-1.4C2.53 17 2 16.382 2 15.624V9.735c0-.79.552-1.485 1.18-1.485h1.4zM11.322 2c1.011.019 1.614.833 1.823 1.235.382.735.392 1.946.13 2.724-.236.704-.785 1.629-.785 1.629h4.11c.434 0 .838.206 1.107.563.273.365.363.84.24 1.272l-1.86 6.513A1.425 1.425 0 0 1 14.724 17H6.645V7.898C8.502 7.51 9.643 4.59 9.852 3.249A1.47 1.47 0 0 1 11.322 2z"></path></g></svg><!----></div><div data-v-406f083c="" class="comment-action action"><svg data-v-406f083c="" aria-hidden="true" width="16" height="16" viewBox="0 0 20 20" class="icon comment-icon"><g data-v-406f083c="" fill="none" fill-rule="evenodd"><path data-v-406f083c="" d="M0 0h20v20H0z"></path> <path data-v-406f083c="" stroke="#8A93A0" stroke-linejoin="round" d="M10 17c-4.142 0-7.5-2.91-7.5-6.5S5.858 4 10 4c4.142 0 7.5 2.91 7.5 6.5 0 1.416-.522 2.726-1.41 3.794-.129.156.41 3.206.41 3.206l-3.265-1.134c-.998.369-2.077.634-3.235.634z"></path></g></svg> <span data-v-406f083c="">回复</span></div></div></div><!----></div></div></div><!----></div></div><div data-v-0aa2f002="" class="item"><div data-v-406f083c="" data-v-0aa2f002="" class="sub-comment sub-comment"><div data-v-406f083c="" class="sub-comment-content-row"><div data-v-406f083c="" class="sub-comment-content-box"><div data-v-b628736a="" data-v-406f083c="" st:block="userPopover" st:state="562118b460b27e6cd488d565" class="user-popover-box popover"><!----><a data-v-406f083c="" href="https://juejin.im/user/562118b460b27e6cd488d565" target="_blank" rel="" class="username" data-v-b628736a=""><div data-v-95ddf8f6="" data-v-39db9419="" data-v-406f083c="" data-src="https://b-gold-cdn.xitu.io/v3/static/img/default-avatar.e30559a.svg" class="lazy avatar avatar loaded" style="background-image: url(&quot;https://b-gold-cdn.xitu.io/v3/static/img/default-avatar.e30559a.svg&quot;);"></div></a></div><div data-v-406f083c="" class="user-content-box"><div data-v-406f083c="" class="profie"><div data-v-b628736a="" data-v-406f083c="" st:block="userPopover" st:state="562118b460b27e6cd488d565" class="user-popover-box"><!----><a data-v-263f3a32="" data-v-406f083c="" href="https://juejin.im/user/562118b460b27e6cd488d565" target="_blank" rel="" class="username" data-v-b628736a="">Hicc<!----></a></div><div data-v-406f083c="" class="position">FE</div></div><div data-v-406f083c="" class="content-box"><span data-v-406f083c=""> 回复 </span><div data-v-b628736a="" data-v-406f083c="" st:block="userPopover" st:state="5800462ed20309006801eabf" class="user-popover-box"><!----><a data-v-263f3a32="" data-v-406f083c="" href="https://juejin.im/user/5800462ed20309006801eabf" target="_blank" rel="" class="username username be-replied" data-v-b628736a="">黑头发的小强<a data-v-6d94a6ea="" data-v-263f3a32="" href="https://juejin.im/book/5c90640c5188252d7941f5bb/section/5c9065385188252da6320022" target="_blank" rel="" class="rank"><img data-v-6d94a6ea="" src="./【万字长文】深入理解 Typescript 高级用法 - 掘金_files/lv-2.f597b88.svg" alt="lv-2"></a></a></div><span data-v-406f083c="" class="author-badge-text">(作者)</span><span data-v-406f083c="">: </span><span data-v-406f083c="" class="content">受教了，其实评论后在tsplayground看见效果啦，还是感谢</span></div><!----><!----><div data-v-406f083c="" class="limit-all-box"><!----></div><div data-v-406f083c="" class="sub-comment-stat-box"><time data-v-406f083c="" datetime="2020-05-05T16:45:27.461Z" title="Wed May 06 2020 00:45:27 GMT+0800 (中国标准时间)" class="time">16天前</time><div data-v-406f083c="" class="delete"> &nbsp;·&nbsp;删除</div><div data-v-406f083c="" class="sub-comment-action-box"><div data-v-406f083c="" class="like-action action"><svg data-v-406f083c="" aria-hidden="true" width="16" height="16" viewBox="0 0 20 20" class="icon like-icon"><g data-v-406f083c="" fill="none" fill-rule="evenodd"><path data-v-406f083c="" d="M0 0h20v20H0z"></path> <path data-v-406f083c="" stroke="#8A93A0" stroke-linejoin="round" d="M4.58 8.25V17h-1.4C2.53 17 2 16.382 2 15.624V9.735c0-.79.552-1.485 1.18-1.485h1.4zM11.322 2c1.011.019 1.614.833 1.823 1.235.382.735.392 1.946.13 2.724-.236.704-.785 1.629-.785 1.629h4.11c.434 0 .838.206 1.107.563.273.365.363.84.24 1.272l-1.86 6.513A1.425 1.425 0 0 1 14.724 17H6.645V7.898C8.502 7.51 9.643 4.59 9.852 3.249A1.47 1.47 0 0 1 11.322 2z"></path></g></svg><!----></div><div data-v-406f083c="" class="comment-action action"><svg data-v-406f083c="" aria-hidden="true" width="16" height="16" viewBox="0 0 20 20" class="icon comment-icon"><g data-v-406f083c="" fill="none" fill-rule="evenodd"><path data-v-406f083c="" d="M0 0h20v20H0z"></path> <path data-v-406f083c="" stroke="#8A93A0" stroke-linejoin="round" d="M10 17c-4.142 0-7.5-2.91-7.5-6.5S5.858 4 10 4c4.142 0 7.5 2.91 7.5 6.5 0 1.416-.522 2.726-1.41 3.794-.129.156.41 3.206.41 3.206l-3.265-1.134c-.998.369-2.077.634-3.235.634z"></path></g></svg> <span data-v-406f083c="">回复</span></div></div></div><!----></div></div></div><!----></div></div><!----></div></div><!----></div></div><div data-v-1540c949="" class="item"><div data-v-164d9344="" data-v-1540c949="" class="comment comment"><div data-v-b628736a="" data-v-164d9344="" st:block="userPopover" st:state="5ba9f38ce51d450e8477bd7a" class="user-popover-box popover"><!----><a data-v-164d9344="" href="https://juejin.im/user/5ba9f38ce51d450e8477bd7a" target="_blank" rel="" class="user-link" data-v-b628736a=""><div data-v-95ddf8f6="" data-v-39db9419="" data-v-164d9344="" data-src="https://mirror-gold-cdn.xitu.io/168e094945d95739467?imageView2/1/w/100/h/100/q/85/format/webp/interlace/1" class="lazy avatar avatar" style="background-image: none;"></div></a></div><div data-v-164d9344="" class="content-box comment-divider-line"><div data-v-164d9344="" class="meta-box"><div data-v-b628736a="" data-v-164d9344="" st:block="userPopover" st:state="5ba9f38ce51d450e8477bd7a" class="user-popover-box"><!----><a data-v-263f3a32="" data-v-164d9344="" href="https://juejin.im/user/5ba9f38ce51d450e8477bd7a" target="_blank" rel="" class="username username ellipsis" data-v-b628736a="">yeyan1996<a data-v-6d94a6ea="" data-v-263f3a32="" href="https://juejin.im/book/5c90640c5188252d7941f5bb/section/5c9065385188252da6320022" target="_blank" rel="" class="rank"><img data-v-6d94a6ea="" src="./【万字长文】深入理解 Typescript 高级用法 - 掘金_files/lv-5.f8d5198.svg" alt="lv-5"></a></a></div><div data-v-164d9344="" class="position">less is more @ ∠( ᐛ 」∠)＿</div></div><div data-v-164d9344="" class="content">好文<img class="emoji" draggable="false" alt="👍" src="./【万字长文】深入理解 Typescript 高级用法 - 掘金_files/1f44d.svg"></div><div data-v-164d9344="" class="limit-ctl-box"><!----><!----></div><!----><div data-v-164d9344="" class="reply-stat"><time data-v-164d9344="" datetime="2020-04-30T14:41:52.891Z" title="Thu Apr 30 2020 22:41:52 GMT+0800 (中国标准时间)" class="time">22天前</time><div data-v-164d9344="" class="delete"> &nbsp;·&nbsp;删除</div><div data-v-164d9344="" class="action-box"><div data-v-164d9344="" class="like-action action"><svg data-v-164d9344="" aria-hidden="true" width="16" height="16" viewBox="0 0 20 20" class="icon like-icon"><g data-v-164d9344="" fill="none" fill-rule="evenodd"><path data-v-164d9344="" d="M0 0h20v20H0z"></path> <path data-v-164d9344="" stroke="#8A93A0" stroke-linejoin="round" d="M4.58 8.25V17h-1.4C2.53 17 2 16.382 2 15.624V9.735c0-.79.552-1.485 1.18-1.485h1.4zM11.322 2c1.011.019 1.614.833 1.823 1.235.382.735.392 1.946.13 2.724-.236.704-.785 1.629-.785 1.629h4.11c.434 0 .838.206 1.107.563.273.365.363.84.24 1.272l-1.86 6.513A1.425 1.425 0 0 1 14.724 17H6.645V7.898C8.502 7.51 9.643 4.59 9.852 3.249A1.47 1.47 0 0 1 11.322 2z"></path></g></svg><!----></div><div data-v-164d9344="" class="comment-action action"><svg data-v-164d9344="" aria-hidden="true" width="16" height="16" viewBox="0 0 20 20" class="icon comment-icon"><g data-v-164d9344="" fill="none" fill-rule="evenodd"><path data-v-164d9344="" d="M0 0h20v20H0z"></path> <path data-v-164d9344="" stroke="#8A93A0" stroke-linejoin="round" d="M10 17c-4.142 0-7.5-2.91-7.5-6.5S5.858 4 10 4c4.142 0 7.5 2.91 7.5 6.5 0 1.416-.522 2.726-1.41 3.794-.129.156.41 3.206.41 3.206l-3.265-1.134c-.998.369-2.077.634-3.235.634z"></path></g></svg> <span data-v-164d9344="" class="action-title">回复</span></div></div></div><!----><div data-v-0aa2f002="" data-v-164d9344="" class="sub-comment-list sub-comment-list"><!----></div></div><!----></div></div><div data-v-1540c949="" class="item"><div data-v-164d9344="" data-v-1540c949="" class="comment comment"><div data-v-b628736a="" data-v-164d9344="" st:block="userPopover" st:state="592e27cd2f301e00570f9268" class="user-popover-box popover"><!----><a data-v-164d9344="" href="https://juejin.im/user/592e27cd2f301e00570f9268" target="_blank" rel="" class="user-link" data-v-b628736a=""><div data-v-95ddf8f6="" data-v-39db9419="" data-v-164d9344="" data-src="https://b-gold-cdn.xitu.io/v3/static/img/default-avatar.e30559a.svg" class="lazy avatar avatar loaded" style="background-image: url(&quot;https://b-gold-cdn.xitu.io/v3/static/img/default-avatar.e30559a.svg&quot;);"></div></a></div><div data-v-164d9344="" class="content-box comment-divider-line"><div data-v-164d9344="" class="meta-box"><div data-v-b628736a="" data-v-164d9344="" st:block="userPopover" st:state="592e27cd2f301e00570f9268" class="user-popover-box"><!----><a data-v-263f3a32="" data-v-164d9344="" href="https://juejin.im/user/592e27cd2f301e00570f9268" target="_blank" rel="" class="username username ellipsis" data-v-b628736a="">penguin“<!----></a></div><div data-v-164d9344="" class="position"></div></div><div data-v-164d9344="" class="content">老哥,type Combine&lt;T&gt;这个根据条件类型筛选的为啥不是联合类型变成交叉类型的？
type combine&lt;T&gt;=  (T extends  any?{args:T}:never          ) extends {args:infer A}         ?A:never 
这个返回的是联合类型<img class="emoji" draggable="false" alt="😢" src="./【万字长文】深入理解 Typescript 高级用法 - 掘金_files/1f622.svg"></div><div data-v-164d9344="" class="limit-ctl-box"><!----><!----></div><!----><div data-v-164d9344="" class="reply-stat"><time data-v-164d9344="" datetime="2020-04-30T04:10:53.753Z" title="Thu Apr 30 2020 12:10:53 GMT+0800 (中国标准时间)" class="time">22天前</time><div data-v-164d9344="" class="delete"> &nbsp;·&nbsp;删除</div><div data-v-164d9344="" class="action-box"><div data-v-164d9344="" class="like-action action"><svg data-v-164d9344="" aria-hidden="true" width="16" height="16" viewBox="0 0 20 20" class="icon like-icon"><g data-v-164d9344="" fill="none" fill-rule="evenodd"><path data-v-164d9344="" d="M0 0h20v20H0z"></path> <path data-v-164d9344="" stroke="#8A93A0" stroke-linejoin="round" d="M4.58 8.25V17h-1.4C2.53 17 2 16.382 2 15.624V9.735c0-.79.552-1.485 1.18-1.485h1.4zM11.322 2c1.011.019 1.614.833 1.823 1.235.382.735.392 1.946.13 2.724-.236.704-.785 1.629-.785 1.629h4.11c.434 0 .838.206 1.107.563.273.365.363.84.24 1.272l-1.86 6.513A1.425 1.425 0 0 1 14.724 17H6.645V7.898C8.502 7.51 9.643 4.59 9.852 3.249A1.47 1.47 0 0 1 11.322 2z"></path></g></svg><!----></div><div data-v-164d9344="" class="comment-action action"><svg data-v-164d9344="" aria-hidden="true" width="16" height="16" viewBox="0 0 20 20" class="icon comment-icon"><g data-v-164d9344="" fill="none" fill-rule="evenodd"><path data-v-164d9344="" d="M0 0h20v20H0z"></path> <path data-v-164d9344="" stroke="#8A93A0" stroke-linejoin="round" d="M10 17c-4.142 0-7.5-2.91-7.5-6.5S5.858 4 10 4c4.142 0 7.5 2.91 7.5 6.5 0 1.416-.522 2.726-1.41 3.794-.129.156.41 3.206.41 3.206l-3.265-1.134c-.998.369-2.077.634-3.235.634z"></path></g></svg> <span data-v-164d9344="" class="action-title">回复</span></div></div></div><!----><div data-v-0aa2f002="" data-v-164d9344="" class="sub-comment-list sub-comment-list"><div data-v-0aa2f002="" class="item"><div data-v-406f083c="" data-v-0aa2f002="" class="sub-comment sub-comment"><div data-v-406f083c="" class="sub-comment-content-row"><div data-v-406f083c="" class="sub-comment-content-box"><div data-v-b628736a="" data-v-406f083c="" st:block="userPopover" st:state="5800462ed20309006801eabf" class="user-popover-box popover"><!----><a data-v-406f083c="" href="https://juejin.im/user/5800462ed20309006801eabf" target="_blank" rel="" class="username" data-v-b628736a=""><div data-v-95ddf8f6="" data-v-39db9419="" data-v-406f083c="" data-src="https://user-gold-cdn.xitu.io/2020/4/27/171b92c865a2a09e?imageView2/1/w/100/h/100/q/85/format/webp/interlace/1" class="lazy avatar avatar" style="background-image: none;"></div></a></div><div data-v-406f083c="" class="user-content-box"><div data-v-406f083c="" class="profie"><div data-v-b628736a="" data-v-406f083c="" st:block="userPopover" st:state="5800462ed20309006801eabf" class="user-popover-box"><!----><a data-v-263f3a32="" data-v-406f083c="" href="https://juejin.im/user/5800462ed20309006801eabf" target="_blank" rel="" class="username" data-v-b628736a="">黑头发的小强<a data-v-6d94a6ea="" data-v-263f3a32="" href="https://juejin.im/book/5c90640c5188252d7941f5bb/section/5c9065385188252da6320022" target="_blank" rel="" class="rank"><img data-v-6d94a6ea="" src="./【万字长文】深入理解 Typescript 高级用法 - 掘金_files/lv-2.f597b88.svg" alt="lv-2"></a><span data-v-406f083c="" class="author-badge-text">(作者)</span></a></div><div data-v-406f083c="" class="position">前端开发 @ SHEIN-ABC</div></div><div data-v-406f083c="" class="content-box"><span data-v-406f083c=""> 回复 </span><div data-v-b628736a="" data-v-406f083c="" st:block="userPopover" st:state="592e27cd2f301e00570f9268" class="user-popover-box"><!----><a data-v-263f3a32="" data-v-406f083c="" href="https://juejin.im/user/592e27cd2f301e00570f9268" target="_blank" rel="" class="username username be-replied" data-v-b628736a="">penguin“<!----></a></div><!----><span data-v-406f083c="">: </span><span data-v-406f083c="" class="content">这里的Combine是利用类型重载，我后面找机会补充一下类型重载相关的讲解吧</span></div><!----><!----><div data-v-406f083c="" class="limit-all-box"><!----></div><div data-v-406f083c="" class="sub-comment-stat-box"><time data-v-406f083c="" datetime="2020-04-30T04:16:36.714Z" title="Thu Apr 30 2020 12:16:36 GMT+0800 (中国标准时间)" class="time">22天前</time><div data-v-406f083c="" class="delete"> &nbsp;·&nbsp;删除</div><div data-v-406f083c="" class="sub-comment-action-box"><div data-v-406f083c="" class="like-action action"><svg data-v-406f083c="" aria-hidden="true" width="16" height="16" viewBox="0 0 20 20" class="icon like-icon"><g data-v-406f083c="" fill="none" fill-rule="evenodd"><path data-v-406f083c="" d="M0 0h20v20H0z"></path> <path data-v-406f083c="" stroke="#8A93A0" stroke-linejoin="round" d="M4.58 8.25V17h-1.4C2.53 17 2 16.382 2 15.624V9.735c0-.79.552-1.485 1.18-1.485h1.4zM11.322 2c1.011.019 1.614.833 1.823 1.235.382.735.392 1.946.13 2.724-.236.704-.785 1.629-.785 1.629h4.11c.434 0 .838.206 1.107.563.273.365.363.84.24 1.272l-1.86 6.513A1.425 1.425 0 0 1 14.724 17H6.645V7.898C8.502 7.51 9.643 4.59 9.852 3.249A1.47 1.47 0 0 1 11.322 2z"></path></g></svg><!----></div><div data-v-406f083c="" class="comment-action action"><svg data-v-406f083c="" aria-hidden="true" width="16" height="16" viewBox="0 0 20 20" class="icon comment-icon"><g data-v-406f083c="" fill="none" fill-rule="evenodd"><path data-v-406f083c="" d="M0 0h20v20H0z"></path> <path data-v-406f083c="" stroke="#8A93A0" stroke-linejoin="round" d="M10 17c-4.142 0-7.5-2.91-7.5-6.5S5.858 4 10 4c4.142 0 7.5 2.91 7.5 6.5 0 1.416-.522 2.726-1.41 3.794-.129.156.41 3.206.41 3.206l-3.265-1.134c-.998.369-2.077.634-3.235.634z"></path></g></svg> <span data-v-406f083c="">回复</span></div></div></div><!----></div></div></div><!----></div></div><!----></div></div><!----></div></div><div data-v-1540c949="" class="item"><div data-v-164d9344="" data-v-1540c949="" class="comment comment"><div data-v-b628736a="" data-v-164d9344="" st:block="userPopover" st:state="59590dc75188250d781cec42" class="user-popover-box popover"><!----><a data-v-164d9344="" href="https://juejin.im/user/59590dc75188250d781cec42" target="_blank" rel="" class="user-link" data-v-b628736a=""><div data-v-95ddf8f6="" data-v-39db9419="" data-v-164d9344="" data-src="https://mirror-gold-cdn.xitu.io/168e085be81b68e8969?imageView2/1/w/100/h/100/q/85/format/webp/interlace/1" class="lazy avatar avatar" style="background-image: none;"></div></a></div><div data-v-164d9344="" class="content-box comment-divider-line"><div data-v-164d9344="" class="meta-box"><div data-v-b628736a="" data-v-164d9344="" st:block="userPopover" st:state="59590dc75188250d781cec42" class="user-popover-box"><!----><a data-v-263f3a32="" data-v-164d9344="" href="https://juejin.im/user/59590dc75188250d781cec42" target="_blank" rel="" class="username username ellipsis" data-v-b628736a="">胡衍生同志<a data-v-6d94a6ea="" data-v-263f3a32="" href="https://juejin.im/book/5c90640c5188252d7941f5bb/section/5c9065385188252da6320022" target="_blank" rel="" class="rank"><img data-v-6d94a6ea="" src="./【万字长文】深入理解 Typescript 高级用法 - 掘金_files/lv-1.636691c.svg" alt="lv-1"></a></a></div><div data-v-164d9344="" class="position">打杂 @ 滴滴</div></div><div data-v-164d9344="" class="content">老哥厉害</div><div data-v-164d9344="" class="limit-ctl-box"><!----><!----></div><!----><div data-v-164d9344="" class="reply-stat"><time data-v-164d9344="" datetime="2020-04-29T07:22:26.612Z" title="Wed Apr 29 2020 15:22:26 GMT+0800 (中国标准时间)" class="time">23天前</time><div data-v-164d9344="" class="delete"> &nbsp;·&nbsp;删除</div><div data-v-164d9344="" class="action-box"><div data-v-164d9344="" class="like-action action"><svg data-v-164d9344="" aria-hidden="true" width="16" height="16" viewBox="0 0 20 20" class="icon like-icon"><g data-v-164d9344="" fill="none" fill-rule="evenodd"><path data-v-164d9344="" d="M0 0h20v20H0z"></path> <path data-v-164d9344="" stroke="#8A93A0" stroke-linejoin="round" d="M4.58 8.25V17h-1.4C2.53 17 2 16.382 2 15.624V9.735c0-.79.552-1.485 1.18-1.485h1.4zM11.322 2c1.011.019 1.614.833 1.823 1.235.382.735.392 1.946.13 2.724-.236.704-.785 1.629-.785 1.629h4.11c.434 0 .838.206 1.107.563.273.365.363.84.24 1.272l-1.86 6.513A1.425 1.425 0 0 1 14.724 17H6.645V7.898C8.502 7.51 9.643 4.59 9.852 3.249A1.47 1.47 0 0 1 11.322 2z"></path></g></svg><!----></div><div data-v-164d9344="" class="comment-action action"><svg data-v-164d9344="" aria-hidden="true" width="16" height="16" viewBox="0 0 20 20" class="icon comment-icon"><g data-v-164d9344="" fill="none" fill-rule="evenodd"><path data-v-164d9344="" d="M0 0h20v20H0z"></path> <path data-v-164d9344="" stroke="#8A93A0" stroke-linejoin="round" d="M10 17c-4.142 0-7.5-2.91-7.5-6.5S5.858 4 10 4c4.142 0 7.5 2.91 7.5 6.5 0 1.416-.522 2.726-1.41 3.794-.129.156.41 3.206.41 3.206l-3.265-1.134c-.998.369-2.077.634-3.235.634z"></path></g></svg> <span data-v-164d9344="" class="action-title">回复</span></div></div></div><!----><div data-v-0aa2f002="" data-v-164d9344="" class="sub-comment-list sub-comment-list"><!----></div></div><!----></div></div><div data-v-1540c949="" class="item"><div data-v-164d9344="" data-v-1540c949="" class="comment comment"><div data-v-b628736a="" data-v-164d9344="" st:block="userPopover" st:state="575fd827128fe10057785093" class="user-popover-box popover"><!----><a data-v-164d9344="" href="https://juejin.im/user/575fd827128fe10057785093" target="_blank" rel="" class="user-link" data-v-b628736a=""><div data-v-95ddf8f6="" data-v-39db9419="" data-v-164d9344="" data-src="https://user-gold-cdn.xitu.io/2019/3/11/1696bc46aa2e03c6?imageView2/1/w/100/h/100/q/85/format/webp/interlace/1" class="lazy avatar avatar" style="background-image: none;"></div></a></div><div data-v-164d9344="" class="content-box comment-divider-line"><div data-v-164d9344="" class="meta-box"><div data-v-b628736a="" data-v-164d9344="" st:block="userPopover" st:state="575fd827128fe10057785093" class="user-popover-box"><!----><a data-v-263f3a32="" data-v-164d9344="" href="https://juejin.im/user/575fd827128fe10057785093" target="_blank" rel="" class="username username ellipsis" data-v-b628736a="">Antone<!----></a></div><div data-v-164d9344="" class="position">.</div></div><div data-v-164d9344="" class="content">不错 支持<img class="emoji" draggable="false" alt="👍" src="./【万字长文】深入理解 Typescript 高级用法 - 掘金_files/1f44d.svg"></div><div data-v-164d9344="" class="limit-ctl-box"><!----><!----></div><!----><div data-v-164d9344="" class="reply-stat"><time data-v-164d9344="" datetime="2020-04-29T01:25:20.617Z" title="Wed Apr 29 2020 09:25:20 GMT+0800 (中国标准时间)" class="time">23天前</time><div data-v-164d9344="" class="delete"> &nbsp;·&nbsp;删除</div><div data-v-164d9344="" class="action-box"><div data-v-164d9344="" class="like-action action"><svg data-v-164d9344="" aria-hidden="true" width="16" height="16" viewBox="0 0 20 20" class="icon like-icon"><g data-v-164d9344="" fill="none" fill-rule="evenodd"><path data-v-164d9344="" d="M0 0h20v20H0z"></path> <path data-v-164d9344="" stroke="#8A93A0" stroke-linejoin="round" d="M4.58 8.25V17h-1.4C2.53 17 2 16.382 2 15.624V9.735c0-.79.552-1.485 1.18-1.485h1.4zM11.322 2c1.011.019 1.614.833 1.823 1.235.382.735.392 1.946.13 2.724-.236.704-.785 1.629-.785 1.629h4.11c.434 0 .838.206 1.107.563.273.365.363.84.24 1.272l-1.86 6.513A1.425 1.425 0 0 1 14.724 17H6.645V7.898C8.502 7.51 9.643 4.59 9.852 3.249A1.47 1.47 0 0 1 11.322 2z"></path></g></svg><!----></div><div data-v-164d9344="" class="comment-action action"><svg data-v-164d9344="" aria-hidden="true" width="16" height="16" viewBox="0 0 20 20" class="icon comment-icon"><g data-v-164d9344="" fill="none" fill-rule="evenodd"><path data-v-164d9344="" d="M0 0h20v20H0z"></path> <path data-v-164d9344="" stroke="#8A93A0" stroke-linejoin="round" d="M10 17c-4.142 0-7.5-2.91-7.5-6.5S5.858 4 10 4c4.142 0 7.5 2.91 7.5 6.5 0 1.416-.522 2.726-1.41 3.794-.129.156.41 3.206.41 3.206l-3.265-1.134c-.998.369-2.077.634-3.235.634z"></path></g></svg> <span data-v-164d9344="" class="action-title">回复</span></div></div></div><!----><div data-v-0aa2f002="" data-v-164d9344="" class="sub-comment-list sub-comment-list"><!----></div></div><!----></div></div></div><div data-v-0d823780="" class="fetch-more-comment">查看更多 &gt;</div></div></div><!----><div data-v-fa2339b8="" data-v-6fdc8784="" st:block="recommended" class="main-area recommended-area shadow"><div data-v-fa2339b8="" data-v-6fdc8784="" class="recommended-entry-list-title">相关推荐</div><!----><ul data-v-0dfe6a32="" data-v-fa2339b8="" st:block="entryList" class="entry-list recommended-entry-list" data-v-6fdc8784=""><!----><li data-v-0dfe6a32="" data-growing-container="true" data-growing-title="entryList" class="item"><div data-v-18d129a6="" data-v-0dfe6a32="" class="entry-box"><div data-v-ecbf465a="" data-v-18d129a6="" st:block="entry" st:state="5ec6b8fc51882542e6477dd3|1" class="entry"><a data-v-ecbf465a="" href="https://juejin.im/post/5ec6b8906fb9a047ce7c4560" target="_blank" rel="" st:name="link" class="entry-link"><div data-v-ecbf465a="" class="content-box"><div data-v-ecbf465a="" class="info-box"><div data-v-ecbf465a="" class="info-row meta-row"><ul data-v-ecbf465a="" class="meta-list"><!----><!----><li data-v-ecbf465a="" class="item post">专栏</li><li data-v-ecbf465a="" class="item username clickable"><div data-v-b628736a="" data-v-ecbf465a="" st:block="userPopover" st:state="5cbbe37c51882532c334c324" class="user-popover-box"><!----><a data-v-ecbf465a="" href="https://juejin.im/user/5cbbe37c51882532c334c324" target="_blank" rel="" st:name="user" st:state="5cbbe37c51882532c334c324" data-v-b628736a="">神奇的程序员</a></div></li><li data-v-ecbf465a="" class="item">21小时前</li><li data-v-ecbf465a="" class="item tag"><a data-v-ecbf465a="" href="https://juejin.im/tag/TypeScript" target="_blank" rel="" st:name="tag" st:state="55e7d5a360b2d687f60ae13a" class="tag">TypeScript</a></li><!----></ul></div><div data-v-ecbf465a="" class="info-row title-row"><!----><!----><a data-v-ecbf465a="" href="https://juejin.im/post/5ec6b8906fb9a047ce7c4560" target="_blank" rel="" st:name="title" class="title">数组实现栈与对象实现栈的区别</a></div><div data-v-ecbf465a="" class="info-row action-row"><ul data-v-ecbf465a="" class="action-list"><li data-v-ecbf465a="" st:name="likeBtn" class="item like clickable"><a data-v-ecbf465a="" class="title-box"><img data-v-ecbf465a="" src="./【万字长文】深入理解 Typescript 高级用法 - 掘金_files/zan.e9d7698.svg" class="icon"><span data-v-ecbf465a="" class="count">1</span></a></li><li data-v-ecbf465a="" st:name="commentBtn" class="item comment clickable"><a data-v-ecbf465a="" href="https://juejin.im/post/5ec6b8906fb9a047ce7c4560#comment" target="_blank" rel="" class="title-box"><img data-v-ecbf465a="" src="./【万字长文】深入理解 Typescript 高级用法 - 掘金_files/comment.4d5744f.svg" class="icon"><!----></a></li><li data-v-ecbf465a="" st:name="shareBtn" title="分享" class="item share clickable hover"><img data-v-ecbf465a="" src="./【万字长文】深入理解 Typescript 高级用法 - 掘金_files/share.1d55e69.svg" class="icon"><div data-v-ecbf465a="" class="share-panel"><div data-v-ecbf465a="" st:name="shareItem" st:state="weibo" class="share-item weibo"><img data-v-ecbf465a="" src="./【万字长文】深入理解 Typescript 高级用法 - 掘金_files/weibo.8e2f5d6.svg" class="icon">微博</div><div data-v-ecbf465a="" st:name="shareItem" st:state="wechat" class="share-item wechat"><img data-v-ecbf465a="" src="./【万字长文】深入理解 Typescript 高级用法 - 掘金_files/wechat.844402c.svg" class="icon">微信扫一扫<div data-v-ecbf465a="" class="qr-code-box"><img data-v-ecbf465a="" src="https://juejin.im/post/5ea40427518825736f6434ef" class="qr-code"></div></div></div></li><li data-v-ecbf465a="" title="收藏" st:name="collectBtn" class="item collect clickable hover"><img data-v-ecbf465a="" src="./【万字长文】深入理解 Typescript 高级用法 - 掘金_files/collect.02e2979.svg" class="icon"><!----></li><!----></ul></div></div><div data-v-95ddf8f6="" data-v-4802f2b2="" data-v-ecbf465a="" data-src="https://user-gold-cdn.xitu.io/2020/5/22/172384133841e9db?imageView2/1/w/120/h/120/q/85/format/webp/interlace/1" class="lazy thumb thumb" style="background-image: none; background-size: cover;"></div></div></a></div></div></li><li data-v-0dfe6a32="" data-growing-container="true" data-growing-title="entryList" class="item"><div data-v-18d129a6="" data-v-0dfe6a32="" class="entry-box"><div data-v-ecbf465a="" data-v-18d129a6="" st:block="entry" st:state="5ec30d53e51d454dd15f1214|2" class="entry"><a data-v-ecbf465a="" href="https://juejin.im/post/5ec2951ce51d454dda7f5dd6" target="_blank" rel="" st:name="link" class="entry-link"><div data-v-ecbf465a="" class="content-box"><div data-v-ecbf465a="" class="info-box"><div data-v-ecbf465a="" class="info-row meta-row"><ul data-v-ecbf465a="" class="meta-list"><!----><!----><li data-v-ecbf465a="" class="item post">专栏</li><li data-v-ecbf465a="" class="item username clickable"><div data-v-b628736a="" data-v-ecbf465a="" st:block="userPopover" st:state="5b33414351882574b9694d28" class="user-popover-box"><!----><a data-v-ecbf465a="" href="https://juejin.im/user/5b33414351882574b9694d28" target="_blank" rel="" st:name="user" st:state="5b33414351882574b9694d28" data-v-b628736a="">图雀社区</a></div></li><li data-v-ecbf465a="" class="item">3天前</li><li data-v-ecbf465a="" class="item tag"><a data-v-ecbf465a="" href="https://juejin.im/tag/TypeScript" target="_blank" rel="" st:name="tag" st:state="55e7d5a360b2d687f60ae13a" class="tag">TypeScript</a></li><!----></ul></div><div data-v-ecbf465a="" class="info-row title-row"><!----><!----><a data-v-ecbf465a="" href="https://juejin.im/post/5ec2951ce51d454dda7f5dd6" target="_blank" rel="" st:name="title" class="title">类型即正义：TypeScript 从入门到实践（四）：5000字长文带你重新认识泛型</a></div><div data-v-ecbf465a="" class="info-row action-row"><ul data-v-ecbf465a="" class="action-list"><li data-v-ecbf465a="" st:name="likeBtn" class="item like clickable"><a data-v-ecbf465a="" class="title-box"><img data-v-ecbf465a="" src="./【万字长文】深入理解 Typescript 高级用法 - 掘金_files/zan.e9d7698.svg" class="icon"><span data-v-ecbf465a="" class="count">12</span></a></li><li data-v-ecbf465a="" st:name="commentBtn" class="item comment clickable"><a data-v-ecbf465a="" href="https://juejin.im/post/5ec2951ce51d454dda7f5dd6#comment" target="_blank" rel="" class="title-box"><img data-v-ecbf465a="" src="./【万字长文】深入理解 Typescript 高级用法 - 掘金_files/comment.4d5744f.svg" class="icon"><span data-v-ecbf465a="" class="count">3</span></a></li><li data-v-ecbf465a="" st:name="shareBtn" title="分享" class="item share clickable hover"><img data-v-ecbf465a="" src="./【万字长文】深入理解 Typescript 高级用法 - 掘金_files/share.1d55e69.svg" class="icon"><div data-v-ecbf465a="" class="share-panel"><div data-v-ecbf465a="" st:name="shareItem" st:state="weibo" class="share-item weibo"><img data-v-ecbf465a="" src="./【万字长文】深入理解 Typescript 高级用法 - 掘金_files/weibo.8e2f5d6.svg" class="icon">微博</div><div data-v-ecbf465a="" st:name="shareItem" st:state="wechat" class="share-item wechat"><img data-v-ecbf465a="" src="./【万字长文】深入理解 Typescript 高级用法 - 掘金_files/wechat.844402c.svg" class="icon">微信扫一扫<div data-v-ecbf465a="" class="qr-code-box"><img data-v-ecbf465a="" src="https://juejin.im/post/5ea40427518825736f6434ef" class="qr-code"></div></div></div></li><li data-v-ecbf465a="" title="收藏" st:name="collectBtn" class="item collect clickable hover"><img data-v-ecbf465a="" src="./【万字长文】深入理解 Typescript 高级用法 - 掘金_files/collect.02e2979.svg" class="icon"><!----></li><!----></ul></div></div><div data-v-95ddf8f6="" data-v-4802f2b2="" data-v-ecbf465a="" data-src="https://user-gold-cdn.xitu.io/2020/5/18/172281a2dee90fff?imageView2/1/w/120/h/120/q/85/format/webp/interlace/1" class="lazy thumb thumb" style="background-image: none; background-size: cover;"></div></div></a></div></div></li><li data-v-0dfe6a32="" data-growing-container="true" data-growing-title="entryList" class="item"><div data-v-18d129a6="" data-v-0dfe6a32="" class="entry-box"><div data-v-ecbf465a="" data-v-18d129a6="" st:block="entry" st:state="5e95066bf265da47f73441a8|3" class="entry"><a data-v-ecbf465a="" href="https://juejin.im/post/5e94595c6fb9a03c341daa75" target="_blank" rel="" st:name="link" class="entry-link"><div data-v-ecbf465a="" class="content-box"><div data-v-ecbf465a="" class="info-box"><div data-v-ecbf465a="" class="info-row meta-row"><ul data-v-ecbf465a="" class="meta-list"><!----><!----><li data-v-ecbf465a="" class="item post">专栏</li><li data-v-ecbf465a="" class="item username clickable"><div data-v-b628736a="" data-v-ecbf465a="" st:block="userPopover" st:state="5b13f11d5188257da1245183" class="user-popover-box"><!----><a data-v-ecbf465a="" href="https://juejin.im/user/5b13f11d5188257da1245183" target="_blank" rel="" st:name="user" st:state="5b13f11d5188257da1245183" data-v-b628736a="">晨曦时梦见兮</a></div></li><li data-v-ecbf465a="" class="item">1月前</li><li data-v-ecbf465a="" class="item tag"><a data-v-ecbf465a="" href="https://juejin.im/tag/Vue.js" target="_blank" rel="" st:name="tag" st:state="555e9a98e4b00c57d9955f68" class="tag">Vue.js</a><a data-v-ecbf465a="" href="https://juejin.im/tag/TypeScript" target="_blank" rel="" st:name="tag" st:state="55e7d5a360b2d687f60ae13a" class="tag">TypeScript</a></li><!----></ul></div><div data-v-ecbf465a="" class="info-row title-row"><!----><!----><a data-v-ecbf465a="" href="https://juejin.im/post/5e94595c6fb9a03c341daa75" target="_blank" rel="" st:name="title" class="title">Vue3 跟着尤雨溪学 TypeScript 之 Ref 类型从零实现</a></div><div data-v-ecbf465a="" class="info-row action-row"><ul data-v-ecbf465a="" class="action-list"><li data-v-ecbf465a="" st:name="likeBtn" class="item like clickable"><a data-v-ecbf465a="" class="title-box"><img data-v-ecbf465a="" src="./【万字长文】深入理解 Typescript 高级用法 - 掘金_files/zan.e9d7698.svg" class="icon"><span data-v-ecbf465a="" class="count">291</span></a></li><li data-v-ecbf465a="" st:name="commentBtn" class="item comment clickable"><a data-v-ecbf465a="" href="https://juejin.im/post/5e94595c6fb9a03c341daa75#comment" target="_blank" rel="" class="title-box"><img data-v-ecbf465a="" src="./【万字长文】深入理解 Typescript 高级用法 - 掘金_files/comment.4d5744f.svg" class="icon"><span data-v-ecbf465a="" class="count">59</span></a></li><li data-v-ecbf465a="" st:name="shareBtn" title="分享" class="item share clickable hover"><img data-v-ecbf465a="" src="./【万字长文】深入理解 Typescript 高级用法 - 掘金_files/share.1d55e69.svg" class="icon"><div data-v-ecbf465a="" class="share-panel"><div data-v-ecbf465a="" st:name="shareItem" st:state="weibo" class="share-item weibo"><img data-v-ecbf465a="" src="./【万字长文】深入理解 Typescript 高级用法 - 掘金_files/weibo.8e2f5d6.svg" class="icon">微博</div><div data-v-ecbf465a="" st:name="shareItem" st:state="wechat" class="share-item wechat"><img data-v-ecbf465a="" src="./【万字长文】深入理解 Typescript 高级用法 - 掘金_files/wechat.844402c.svg" class="icon">微信扫一扫<div data-v-ecbf465a="" class="qr-code-box"><img data-v-ecbf465a="" src="https://juejin.im/post/5ea40427518825736f6434ef" class="qr-code"></div></div></div></li><li data-v-ecbf465a="" title="收藏" st:name="collectBtn" class="item collect clickable hover"><img data-v-ecbf465a="" src="./【万字长文】深入理解 Typescript 高级用法 - 掘金_files/collect.02e2979.svg" class="icon"><!----></li><!----></ul></div></div><!----></div></a></div></div></li><!----><li data-v-0dfe6a32="" data-growing-container="true" data-growing-title="entryList" class="item"><div data-v-18d129a6="" data-v-0dfe6a32="" class="entry-box"><div data-v-ecbf465a="" data-v-18d129a6="" st:block="entry" st:state="5ec222b96fb9a0438b2f40c8|4" class="entry"><a data-v-ecbf465a="" href="https://juejin.im/post/5ec221f65188256d5324e1b0" target="_blank" rel="" st:name="link" class="entry-link"><div data-v-ecbf465a="" class="content-box"><div data-v-ecbf465a="" class="info-box"><div data-v-ecbf465a="" class="info-row meta-row"><ul data-v-ecbf465a="" class="meta-list"><!----><!----><li data-v-ecbf465a="" class="item post">专栏</li><li data-v-ecbf465a="" class="item username clickable"><div data-v-b628736a="" data-v-ecbf465a="" st:block="userPopover" st:state="59be059c5188256c6d77cf2e" class="user-popover-box"><!----><a data-v-ecbf465a="" href="https://juejin.im/user/59be059c5188256c6d77cf2e" target="_blank" rel="" st:name="user" st:state="59be059c5188256c6d77cf2e" data-v-b628736a="">Neal_yang</a></div></li><li data-v-ecbf465a="" class="item">4天前</li><li data-v-ecbf465a="" class="item tag"><a data-v-ecbf465a="" href="https://juejin.im/tag/%E6%9E%B6%E6%9E%84" target="_blank" rel="" st:name="tag" st:state="55cdb52740ac79db3570607f" class="tag">架构</a><a data-v-ecbf465a="" href="https://juejin.im/tag/TypeScript" target="_blank" rel="" st:name="tag" st:state="55e7d5a360b2d687f60ae13a" class="tag">TypeScript</a></li><!----></ul></div><div data-v-ecbf465a="" class="info-row title-row"><!----><!----><a data-v-ecbf465a="" href="https://juejin.im/post/5ec221f65188256d5324e1b0" target="_blank" rel="" st:name="title" class="title">拍卖源码架构在拍品详情页上的探索</a></div><div data-v-ecbf465a="" class="info-row action-row"><ul data-v-ecbf465a="" class="action-list"><li data-v-ecbf465a="" st:name="likeBtn" class="item like clickable"><a data-v-ecbf465a="" class="title-box"><img data-v-ecbf465a="" src="./【万字长文】深入理解 Typescript 高级用法 - 掘金_files/zan.e9d7698.svg" class="icon"><span data-v-ecbf465a="" class="count">7</span></a></li><li data-v-ecbf465a="" st:name="commentBtn" class="item comment clickable"><a data-v-ecbf465a="" href="https://juejin.im/post/5ec221f65188256d5324e1b0#comment" target="_blank" rel="" class="title-box"><img data-v-ecbf465a="" src="./【万字长文】深入理解 Typescript 高级用法 - 掘金_files/comment.4d5744f.svg" class="icon"><span data-v-ecbf465a="" class="count">2</span></a></li><li data-v-ecbf465a="" st:name="shareBtn" title="分享" class="item share clickable hover"><img data-v-ecbf465a="" src="./【万字长文】深入理解 Typescript 高级用法 - 掘金_files/share.1d55e69.svg" class="icon"><div data-v-ecbf465a="" class="share-panel"><div data-v-ecbf465a="" st:name="shareItem" st:state="weibo" class="share-item weibo"><img data-v-ecbf465a="" src="./【万字长文】深入理解 Typescript 高级用法 - 掘金_files/weibo.8e2f5d6.svg" class="icon">微博</div><div data-v-ecbf465a="" st:name="shareItem" st:state="wechat" class="share-item wechat"><img data-v-ecbf465a="" src="./【万字长文】深入理解 Typescript 高级用法 - 掘金_files/wechat.844402c.svg" class="icon">微信扫一扫<div data-v-ecbf465a="" class="qr-code-box"><img data-v-ecbf465a="" src="https://juejin.im/post/5ea40427518825736f6434ef" class="qr-code"></div></div></div></li><li data-v-ecbf465a="" title="收藏" st:name="collectBtn" class="item collect clickable hover"><img data-v-ecbf465a="" src="./【万字长文】深入理解 Typescript 高级用法 - 掘金_files/collect.02e2979.svg" class="icon"><!----></li><!----></ul></div></div><div data-v-95ddf8f6="" data-v-4802f2b2="" data-v-ecbf465a="" data-src="https://user-gold-cdn.xitu.io/2020/5/18/172265754adc71f6?imageView2/1/w/120/h/120/q/85/format/webp/interlace/1" class="lazy thumb thumb" style="background-image: none; background-size: cover;"></div></div></a></div></div></li><li data-v-0dfe6a32="" data-growing-container="true" data-growing-title="entryList" class="item"><div data-v-18d129a6="" data-v-0dfe6a32="" class="entry-box"><div data-v-ecbf465a="" data-v-18d129a6="" st:block="entry" st:state="5ea40bbce51d4546fd48318f|5" class="entry"><a data-v-ecbf465a="" href="https://juejin.im/post/5ea40427518825736f6434ef" target="_blank" rel="" st:name="link" class="entry-link"><div data-v-ecbf465a="" class="content-box"><div data-v-ecbf465a="" class="info-box"><div data-v-ecbf465a="" class="info-row meta-row"><ul data-v-ecbf465a="" class="meta-list"><!----><!----><li data-v-ecbf465a="" class="item post">专栏</li><li data-v-ecbf465a="" class="item username clickable"><div data-v-b628736a="" data-v-ecbf465a="" st:block="userPopover" st:state="5800462ed20309006801eabf" class="user-popover-box"><!----><a data-v-ecbf465a="" href="https://juejin.im/user/5800462ed20309006801eabf" target="_blank" rel="" st:name="user" st:state="5800462ed20309006801eabf" data-v-b628736a="">黑头发的小强</a></div></li><li data-v-ecbf465a="" class="item">27天前</li><li data-v-ecbf465a="" class="item tag"><a data-v-ecbf465a="" href="https://juejin.im/tag/TypeScript" target="_blank" rel="" st:name="tag" st:state="55e7d5a360b2d687f60ae13a" class="tag">TypeScript</a></li><!----></ul></div><div data-v-ecbf465a="" class="info-row title-row"><!----><!----><a data-v-ecbf465a="" href="https://juejin.im/post/5ea40427518825736f6434ef" target="_blank" rel="" st:name="title" class="title">【万字长文】深入理解 Typescript 高级用法</a></div><div data-v-ecbf465a="" class="info-row action-row"><ul data-v-ecbf465a="" class="action-list"><li data-v-ecbf465a="" st:name="likeBtn" class="item like clickable"><a data-v-ecbf465a="" class="title-box"><img data-v-ecbf465a="" src="./【万字长文】深入理解 Typescript 高级用法 - 掘金_files/zan.e9d7698.svg" class="icon"><span data-v-ecbf465a="" class="count">164</span></a></li><li data-v-ecbf465a="" st:name="commentBtn" class="item comment clickable"><a data-v-ecbf465a="" href="https://juejin.im/post/5ea40427518825736f6434ef#comment" target="_blank" rel="" class="title-box"><img data-v-ecbf465a="" src="./【万字长文】深入理解 Typescript 高级用法 - 掘金_files/comment.4d5744f.svg" class="icon"><span data-v-ecbf465a="" class="count">42</span></a></li><li data-v-ecbf465a="" st:name="shareBtn" title="分享" class="item share clickable hover"><img data-v-ecbf465a="" src="./【万字长文】深入理解 Typescript 高级用法 - 掘金_files/share.1d55e69.svg" class="icon"><div data-v-ecbf465a="" class="share-panel"><div data-v-ecbf465a="" st:name="shareItem" st:state="weibo" class="share-item weibo"><img data-v-ecbf465a="" src="./【万字长文】深入理解 Typescript 高级用法 - 掘金_files/weibo.8e2f5d6.svg" class="icon">微博</div><div data-v-ecbf465a="" st:name="shareItem" st:state="wechat" class="share-item wechat"><img data-v-ecbf465a="" src="./【万字长文】深入理解 Typescript 高级用法 - 掘金_files/wechat.844402c.svg" class="icon">微信扫一扫<div data-v-ecbf465a="" class="qr-code-box"><img data-v-ecbf465a="" src="https://juejin.im/post/5ea40427518825736f6434ef" class="qr-code"></div></div></div></li><li data-v-ecbf465a="" title="收藏" st:name="collectBtn" class="item collect clickable hover"><img data-v-ecbf465a="" src="./【万字长文】深入理解 Typescript 高级用法 - 掘金_files/collect.02e2979.svg" class="icon"><!----></li><!----></ul></div></div><div data-v-95ddf8f6="" data-v-4802f2b2="" data-v-ecbf465a="" data-src="https://user-gold-cdn.xitu.io/2020/4/25/171b0fe42ec18e6a?imageView2/1/w/120/h/120/q/85/format/webp/interlace/1" class="lazy thumb thumb" style="background-image: none; background-size: cover;"></div></div></a></div></div></li><!----><!----><li data-v-0dfe6a32="" data-growing-container="true" data-growing-title="entryList" class="item"><div data-v-18d129a6="" data-v-0dfe6a32="" class="entry-box"><div data-v-ecbf465a="" data-v-18d129a6="" st:block="entry" st:state="5ec28d1d6fb9a043710eb9ee|4" class="entry"><a data-v-ecbf465a="" href="https://juejin.im/post/5ec28cfc6fb9a0432d76e037" target="_blank" rel="" st:name="link" class="entry-link"><div data-v-ecbf465a="" class="content-box"><div data-v-ecbf465a="" class="info-box"><div data-v-ecbf465a="" class="info-row meta-row"><ul data-v-ecbf465a="" class="meta-list"><!----><!----><li data-v-ecbf465a="" class="item post">专栏</li><li data-v-ecbf465a="" class="item username clickable"><div data-v-b628736a="" data-v-ecbf465a="" st:block="userPopover" st:state="5ae4348f6fb9a07aac2436f1" class="user-popover-box"><!----><a data-v-ecbf465a="" href="https://juejin.im/user/5ae4348f6fb9a07aac2436f1" target="_blank" rel="" st:name="user" st:state="5ae4348f6fb9a07aac2436f1" data-v-b628736a="">五月君</a></div></li><li data-v-ecbf465a="" class="item">4天前</li><li data-v-ecbf465a="" class="item tag"><a data-v-ecbf465a="" href="https://juejin.im/tag/TypeScript" target="_blank" rel="" st:name="tag" st:state="55e7d5a360b2d687f60ae13a" class="tag">TypeScript</a></li><!----></ul></div><div data-v-ecbf465a="" class="info-row title-row"><!----><!----><a data-v-ecbf465a="" href="https://juejin.im/post/5ec28cfc6fb9a0432d76e037" target="_blank" rel="" st:name="title" class="title">使用 TypeScript 快速开发 Serverless REST API</a></div><div data-v-ecbf465a="" class="info-row action-row"><ul data-v-ecbf465a="" class="action-list"><li data-v-ecbf465a="" st:name="likeBtn" class="item like clickable"><a data-v-ecbf465a="" class="title-box"><img data-v-ecbf465a="" src="./【万字长文】深入理解 Typescript 高级用法 - 掘金_files/zan.e9d7698.svg" class="icon"><span data-v-ecbf465a="" class="count">5</span></a></li><li data-v-ecbf465a="" st:name="commentBtn" class="item comment clickable"><a data-v-ecbf465a="" href="https://juejin.im/post/5ec28cfc6fb9a0432d76e037#comment" target="_blank" rel="" class="title-box"><img data-v-ecbf465a="" src="./【万字长文】深入理解 Typescript 高级用法 - 掘金_files/comment.4d5744f.svg" class="icon"><!----></a></li><li data-v-ecbf465a="" st:name="shareBtn" title="分享" class="item share clickable hover"><img data-v-ecbf465a="" src="./【万字长文】深入理解 Typescript 高级用法 - 掘金_files/share.1d55e69.svg" class="icon"><div data-v-ecbf465a="" class="share-panel"><div data-v-ecbf465a="" st:name="shareItem" st:state="weibo" class="share-item weibo"><img data-v-ecbf465a="" src="./【万字长文】深入理解 Typescript 高级用法 - 掘金_files/weibo.8e2f5d6.svg" class="icon">微博</div><div data-v-ecbf465a="" st:name="shareItem" st:state="wechat" class="share-item wechat"><img data-v-ecbf465a="" src="./【万字长文】深入理解 Typescript 高级用法 - 掘金_files/wechat.844402c.svg" class="icon">微信扫一扫<div data-v-ecbf465a="" class="qr-code-box"><img data-v-ecbf465a="" src="https://juejin.im/post/5ea40427518825736f6434ef" class="qr-code"></div></div></div></li><li data-v-ecbf465a="" title="收藏" st:name="collectBtn" class="item collect clickable hover"><img data-v-ecbf465a="" src="./【万字长文】深入理解 Typescript 高级用法 - 掘金_files/collect.02e2979.svg" class="icon"><!----></li><!----></ul></div></div><div data-v-95ddf8f6="" data-v-4802f2b2="" data-v-ecbf465a="" data-src="https://user-gold-cdn.xitu.io/2020/5/18/17227f6eb3871db6?imageView2/1/w/120/h/120/q/85/format/webp/interlace/1" class="lazy thumb thumb" style="background-image: none; background-size: cover;"></div></div></a></div></div></li><li data-v-0dfe6a32="" data-growing-container="true" data-growing-title="entryList" class="item"><div data-v-18d129a6="" data-v-0dfe6a32="" class="entry-box"><div data-v-ecbf465a="" data-v-18d129a6="" st:block="entry" st:state="5ebfa541f265da7c026bf063|5" class="entry"><a data-v-ecbf465a="" href="https://juejin.im/post/5ebfa51de51d454ddf23661a" target="_blank" rel="" st:name="link" class="entry-link"><div data-v-ecbf465a="" class="content-box"><div data-v-ecbf465a="" class="info-box"><div data-v-ecbf465a="" class="info-row meta-row"><ul data-v-ecbf465a="" class="meta-list"><!----><!----><li data-v-ecbf465a="" class="item post">专栏</li><li data-v-ecbf465a="" class="item username clickable"><div data-v-b628736a="" data-v-ecbf465a="" st:block="userPopover" st:state="5bd68c42e51d454c410e5edf" class="user-popover-box"><!----><a data-v-ecbf465a="" href="https://juejin.im/user/5bd68c42e51d454c410e5edf" target="_blank" rel="" st:name="user" st:state="5bd68c42e51d454c410e5edf" data-v-b628736a="">zoomdong</a></div></li><li data-v-ecbf465a="" class="item">6天前</li><li data-v-ecbf465a="" class="item tag"><a data-v-ecbf465a="" href="https://juejin.im/tag/TypeScript" target="_blank" rel="" st:name="tag" st:state="55e7d5a360b2d687f60ae13a" class="tag">TypeScript</a></li><!----></ul></div><div data-v-ecbf465a="" class="info-row title-row"><!----><!----><a data-v-ecbf465a="" href="https://juejin.im/post/5ebfa51de51d454ddf23661a" target="_blank" rel="" st:name="title" class="title">[译]使用 TypeScript complier API</a></div><div data-v-ecbf465a="" class="info-row action-row"><ul data-v-ecbf465a="" class="action-list"><li data-v-ecbf465a="" st:name="likeBtn" class="item like clickable"><a data-v-ecbf465a="" class="title-box"><img data-v-ecbf465a="" src="./【万字长文】深入理解 Typescript 高级用法 - 掘金_files/zan.e9d7698.svg" class="icon"><span data-v-ecbf465a="" class="count">6</span></a></li><li data-v-ecbf465a="" st:name="commentBtn" class="item comment clickable"><a data-v-ecbf465a="" href="https://juejin.im/post/5ebfa51de51d454ddf23661a#comment" target="_blank" rel="" class="title-box"><img data-v-ecbf465a="" src="./【万字长文】深入理解 Typescript 高级用法 - 掘金_files/comment.4d5744f.svg" class="icon"><!----></a></li><li data-v-ecbf465a="" st:name="shareBtn" title="分享" class="item share clickable hover"><img data-v-ecbf465a="" src="./【万字长文】深入理解 Typescript 高级用法 - 掘金_files/share.1d55e69.svg" class="icon"><div data-v-ecbf465a="" class="share-panel"><div data-v-ecbf465a="" st:name="shareItem" st:state="weibo" class="share-item weibo"><img data-v-ecbf465a="" src="./【万字长文】深入理解 Typescript 高级用法 - 掘金_files/weibo.8e2f5d6.svg" class="icon">微博</div><div data-v-ecbf465a="" st:name="shareItem" st:state="wechat" class="share-item wechat"><img data-v-ecbf465a="" src="./【万字长文】深入理解 Typescript 高级用法 - 掘金_files/wechat.844402c.svg" class="icon">微信扫一扫<div data-v-ecbf465a="" class="qr-code-box"><img data-v-ecbf465a="" src="https://juejin.im/post/5ea40427518825736f6434ef" class="qr-code"></div></div></div></li><li data-v-ecbf465a="" title="收藏" st:name="collectBtn" class="item collect clickable hover"><img data-v-ecbf465a="" src="./【万字长文】深入理解 Typescript 高级用法 - 掘金_files/collect.02e2979.svg" class="icon"><!----></li><!----></ul></div></div><!----></div></a></div></div></li><li data-v-0dfe6a32="" data-growing-container="true" data-growing-title="entryList" class="item"><div data-v-18d129a6="" data-v-0dfe6a32="" class="entry-box"><div data-v-ecbf465a="" data-v-18d129a6="" st:block="entry" st:state="5ec160546fb9a0438222996f|6" class="entry"><a data-v-ecbf465a="" href="https://juejin.im/post/5ec150b851882573a924e73d" target="_blank" rel="" st:name="link" class="entry-link"><div data-v-ecbf465a="" class="content-box"><div data-v-ecbf465a="" class="info-box"><div data-v-ecbf465a="" class="info-row meta-row"><ul data-v-ecbf465a="" class="meta-list"><!----><!----><li data-v-ecbf465a="" class="item post">专栏</li><li data-v-ecbf465a="" class="item username clickable"><div data-v-b628736a="" data-v-ecbf465a="" st:block="userPopover" st:state="5bc2abc06fb9a05d1f223319" class="user-popover-box"><!----><a data-v-ecbf465a="" href="https://juejin.im/user/5bc2abc06fb9a05d1f223319" target="_blank" rel="" st:name="user" st:state="5bc2abc06fb9a05d1f223319" data-v-b628736a="">猛汉_赤鸡仙人</a></div></li><li data-v-ecbf465a="" class="item">4天前</li><li data-v-ecbf465a="" class="item tag"><a data-v-ecbf465a="" href="https://juejin.im/tag/TypeScript" target="_blank" rel="" st:name="tag" st:state="55e7d5a360b2d687f60ae13a" class="tag">TypeScript</a></li><!----></ul></div><div data-v-ecbf465a="" class="info-row title-row"><!----><!----><a data-v-ecbf465a="" href="https://juejin.im/post/5ec150b851882573a924e73d" target="_blank" rel="" st:name="title" class="title">【闲谈】babel和ts对ES6的import干了什么</a></div><div data-v-ecbf465a="" class="info-row action-row"><ul data-v-ecbf465a="" class="action-list"><li data-v-ecbf465a="" st:name="likeBtn" class="item like clickable"><a data-v-ecbf465a="" class="title-box"><img data-v-ecbf465a="" src="./【万字长文】深入理解 Typescript 高级用法 - 掘金_files/zan.e9d7698.svg" class="icon"><span data-v-ecbf465a="" class="count">3</span></a></li><li data-v-ecbf465a="" st:name="commentBtn" class="item comment clickable"><a data-v-ecbf465a="" href="https://juejin.im/post/5ec150b851882573a924e73d#comment" target="_blank" rel="" class="title-box"><img data-v-ecbf465a="" src="./【万字长文】深入理解 Typescript 高级用法 - 掘金_files/comment.4d5744f.svg" class="icon"><!----></a></li><li data-v-ecbf465a="" st:name="shareBtn" title="分享" class="item share clickable hover"><img data-v-ecbf465a="" src="./【万字长文】深入理解 Typescript 高级用法 - 掘金_files/share.1d55e69.svg" class="icon"><div data-v-ecbf465a="" class="share-panel"><div data-v-ecbf465a="" st:name="shareItem" st:state="weibo" class="share-item weibo"><img data-v-ecbf465a="" src="./【万字长文】深入理解 Typescript 高级用法 - 掘金_files/weibo.8e2f5d6.svg" class="icon">微博</div><div data-v-ecbf465a="" st:name="shareItem" st:state="wechat" class="share-item wechat"><img data-v-ecbf465a="" src="./【万字长文】深入理解 Typescript 高级用法 - 掘金_files/wechat.844402c.svg" class="icon">微信扫一扫<div data-v-ecbf465a="" class="qr-code-box"><img data-v-ecbf465a="" src="https://juejin.im/post/5ea40427518825736f6434ef" class="qr-code"></div></div></div></li><li data-v-ecbf465a="" title="收藏" st:name="collectBtn" class="item collect clickable hover"><img data-v-ecbf465a="" src="./【万字长文】深入理解 Typescript 高级用法 - 掘金_files/collect.02e2979.svg" class="icon"><!----></li><!----></ul></div></div><!----></div></a></div></div></li><li data-v-0dfe6a32="" data-growing-container="true" data-growing-title="entryList" class="item"><div data-v-18d129a6="" data-v-0dfe6a32="" class="entry-box"><div data-v-ecbf465a="" data-v-18d129a6="" st:block="entry" st:state="5ebc0944e51d4541491abb73|7" class="entry"><a data-v-ecbf465a="" href="https://juejin.im/post/5ebc08c4e51d454dd9407585" target="_blank" rel="" st:name="link" class="entry-link"><div data-v-ecbf465a="" class="content-box"><div data-v-ecbf465a="" class="info-box"><div data-v-ecbf465a="" class="info-row meta-row"><ul data-v-ecbf465a="" class="meta-list"><!----><!----><li data-v-ecbf465a="" class="item post">专栏</li><li data-v-ecbf465a="" class="item username clickable"><div data-v-b628736a="" data-v-ecbf465a="" st:block="userPopover" st:state="5861d87961ff4b00582876cd" class="user-popover-box"><!----><a data-v-ecbf465a="" href="https://juejin.im/user/5861d87961ff4b00582876cd" target="_blank" rel="" st:name="user" st:state="5861d87961ff4b00582876cd" data-v-b628736a="">西南_张家辉</a></div></li><li data-v-ecbf465a="" class="item">9天前</li><li data-v-ecbf465a="" class="item tag"><a data-v-ecbf465a="" href="https://juejin.im/tag/TypeScript" target="_blank" rel="" st:name="tag" st:state="55e7d5a360b2d687f60ae13a" class="tag">TypeScript</a></li><!----></ul></div><div data-v-ecbf465a="" class="info-row title-row"><!----><!----><a data-v-ecbf465a="" href="https://juejin.im/post/5ebc08c4e51d454dd9407585" target="_blank" rel="" st:name="title" class="title">【译】Typescript 3.9 常用新特性一览</a></div><div data-v-ecbf465a="" class="info-row action-row"><ul data-v-ecbf465a="" class="action-list"><li data-v-ecbf465a="" st:name="likeBtn" class="item like clickable"><a data-v-ecbf465a="" class="title-box"><img data-v-ecbf465a="" src="./【万字长文】深入理解 Typescript 高级用法 - 掘金_files/zan.e9d7698.svg" class="icon"><span data-v-ecbf465a="" class="count">6</span></a></li><li data-v-ecbf465a="" st:name="commentBtn" class="item comment clickable"><a data-v-ecbf465a="" href="https://juejin.im/post/5ebc08c4e51d454dd9407585#comment" target="_blank" rel="" class="title-box"><img data-v-ecbf465a="" src="./【万字长文】深入理解 Typescript 高级用法 - 掘金_files/comment.4d5744f.svg" class="icon"><span data-v-ecbf465a="" class="count">2</span></a></li><li data-v-ecbf465a="" st:name="shareBtn" title="分享" class="item share clickable hover"><img data-v-ecbf465a="" src="./【万字长文】深入理解 Typescript 高级用法 - 掘金_files/share.1d55e69.svg" class="icon"><div data-v-ecbf465a="" class="share-panel"><div data-v-ecbf465a="" st:name="shareItem" st:state="weibo" class="share-item weibo"><img data-v-ecbf465a="" src="./【万字长文】深入理解 Typescript 高级用法 - 掘金_files/weibo.8e2f5d6.svg" class="icon">微博</div><div data-v-ecbf465a="" st:name="shareItem" st:state="wechat" class="share-item wechat"><img data-v-ecbf465a="" src="./【万字长文】深入理解 Typescript 高级用法 - 掘金_files/wechat.844402c.svg" class="icon">微信扫一扫<div data-v-ecbf465a="" class="qr-code-box"><img data-v-ecbf465a="" src="https://juejin.im/post/5ea40427518825736f6434ef" class="qr-code"></div></div></div></li><li data-v-ecbf465a="" title="收藏" st:name="collectBtn" class="item collect clickable hover"><img data-v-ecbf465a="" src="./【万字长文】深入理解 Typescript 高级用法 - 掘金_files/collect.02e2979.svg" class="icon"><!----></li><!----></ul></div></div><div data-v-95ddf8f6="" data-v-4802f2b2="" data-v-ecbf465a="" data-src="https://user-gold-cdn.xitu.io/2020/5/15/17215f2ef43dc207?imageView2/1/w/120/h/120/q/85/format/webp/interlace/1" class="lazy thumb thumb" style="background-image: none; background-size: cover;"></div></div></a></div></div></li><li data-v-0dfe6a32="" data-growing-container="true" data-growing-title="entryList" class="item"><div data-v-18d129a6="" data-v-0dfe6a32="" class="entry-box"><div data-v-ecbf465a="" data-v-18d129a6="" st:block="entry" st:state="5eb9ed566fb9a043586c8d95|8" class="entry"><a data-v-ecbf465a="" href="https://juejin.im/post/5eb9ed2b5188256d7674aee6" target="_blank" rel="" st:name="link" class="entry-link"><div data-v-ecbf465a="" class="content-box"><div data-v-ecbf465a="" class="info-box"><div data-v-ecbf465a="" class="info-row meta-row"><ul data-v-ecbf465a="" class="meta-list"><!----><!----><li data-v-ecbf465a="" class="item post">专栏</li><li data-v-ecbf465a="" class="item username clickable"><div data-v-b628736a="" data-v-ecbf465a="" st:block="userPopover" st:state="59a64bdb51882524363c583f" class="user-popover-box"><!----><a data-v-ecbf465a="" href="https://juejin.im/user/59a64bdb51882524363c583f" target="_blank" rel="" st:name="user" st:state="59a64bdb51882524363c583f" data-v-b628736a="">zhongzhong05</a></div></li><li data-v-ecbf465a="" class="item">10天前</li><li data-v-ecbf465a="" class="item tag"><a data-v-ecbf465a="" href="https://juejin.im/tag/TypeScript" target="_blank" rel="" st:name="tag" st:state="55e7d5a360b2d687f60ae13a" class="tag">TypeScript</a></li><!----></ul></div><div data-v-ecbf465a="" class="info-row title-row"><!----><!----><a data-v-ecbf465a="" href="https://juejin.im/post/5eb9ed2b5188256d7674aee6" target="_blank" rel="" st:name="title" class="title">我对前端代码设计的理解</a></div><div data-v-ecbf465a="" class="info-row action-row"><ul data-v-ecbf465a="" class="action-list"><li data-v-ecbf465a="" st:name="likeBtn" class="item like clickable"><a data-v-ecbf465a="" class="title-box"><img data-v-ecbf465a="" src="./【万字长文】深入理解 Typescript 高级用法 - 掘金_files/zan.e9d7698.svg" class="icon"><span data-v-ecbf465a="" class="count">11</span></a></li><li data-v-ecbf465a="" st:name="commentBtn" class="item comment clickable"><a data-v-ecbf465a="" href="https://juejin.im/post/5eb9ed2b5188256d7674aee6#comment" target="_blank" rel="" class="title-box"><img data-v-ecbf465a="" src="./【万字长文】深入理解 Typescript 高级用法 - 掘金_files/comment.4d5744f.svg" class="icon"><span data-v-ecbf465a="" class="count">1</span></a></li><li data-v-ecbf465a="" st:name="shareBtn" title="分享" class="item share clickable hover"><img data-v-ecbf465a="" src="./【万字长文】深入理解 Typescript 高级用法 - 掘金_files/share.1d55e69.svg" class="icon"><div data-v-ecbf465a="" class="share-panel"><div data-v-ecbf465a="" st:name="shareItem" st:state="weibo" class="share-item weibo"><img data-v-ecbf465a="" src="./【万字长文】深入理解 Typescript 高级用法 - 掘金_files/weibo.8e2f5d6.svg" class="icon">微博</div><div data-v-ecbf465a="" st:name="shareItem" st:state="wechat" class="share-item wechat"><img data-v-ecbf465a="" src="./【万字长文】深入理解 Typescript 高级用法 - 掘金_files/wechat.844402c.svg" class="icon">微信扫一扫<div data-v-ecbf465a="" class="qr-code-box"><img data-v-ecbf465a="" src="https://juejin.im/post/5ea40427518825736f6434ef" class="qr-code"></div></div></div></li><li data-v-ecbf465a="" title="收藏" st:name="collectBtn" class="item collect clickable hover"><img data-v-ecbf465a="" src="./【万字长文】深入理解 Typescript 高级用法 - 掘金_files/collect.02e2979.svg" class="icon"><!----></li><!----></ul></div></div><!----></div></a></div></div></li><li data-v-0dfe6a32="" class="item"><!----></li><!----></ul></div><div data-v-7301278b="" data-v-fa2339b8="" st:block="sidebar" class="sidebar sidebar top sticky" data-v-6fdc8784=""><div data-v-16442876="" data-v-76358071="" data-v-7301278b="" class="sidebar-block author-block shadow"><div data-v-16442876="" class="block-title">关于作者</div><div data-v-16442876="" class="block-body"><a data-v-76358071="" href="https://juejin.im/user/5800462ed20309006801eabf" target="_blank" rel="" class="user-item item" data-v-16442876=""><div data-v-95ddf8f6="" data-v-39db9419="" data-v-76358071="" data-src="https://user-gold-cdn.xitu.io/2020/4/27/171b92c865a2a09e?imageView2/1/w/100/h/100/q/85/format/webp/interlace/1" class="lazy avatar avatar loaded" style="background-image: url(&quot;https://user-gold-cdn.xitu.io/2020/4/27/171b92c865a2a09e?imageView2/1/w/100/h/100/q/85/format/webp/interlace/1&quot;);"></div><div data-v-76358071="" class="info-box"><a data-v-263f3a32="" data-v-76358071="" href="https://juejin.im/user/5800462ed20309006801eabf" target="_blank" rel="" class="username">黑头发的小强<a data-v-6d94a6ea="" data-v-263f3a32="" href="https://juejin.im/book/5c90640c5188252d7941f5bb/section/5c9065385188252da6320022" target="_blank" rel="" class="rank"><img data-v-6d94a6ea="" src="./【万字长文】深入理解 Typescript 高级用法 - 掘金_files/lv-2.f597b88.svg" alt="lv-2"></a></a><div data-v-76358071="" title="前端开发 @ SHEIN-ABC" class="position">前端开发 @ SHEIN-ABC</div></div></a><div data-v-76358071="" data-v-16442876="" class="stat-item item"><svg data-v-76358071="" data-v-16442876="" xmlns="http://www.w3.org/2000/svg" width="25" height="26" viewBox="0 0 25 26" class="zan"><g data-v-76358071="" data-v-16442876="" fill="none" fill-rule="evenodd" transform="translate(0 .57)"><ellipse data-v-76358071="" data-v-16442876="" cx="12.5" cy="12.57" fill="#E1EFFF" rx="12.5" ry="12.57"></ellipse> <path data-v-76358071="" data-v-16442876="" fill="#7BB9FF" d="M8.596 11.238V19H7.033C6.463 19 6 18.465 6 17.807v-5.282c0-.685.483-1.287 1.033-1.287h1.563zm4.275-4.156A1.284 1.284 0 0 1 14.156 6c.885.016 1.412.722 1.595 1.07.334.638.343 1.687.114 2.361-.207.61-.687 1.412-.687 1.412h3.596c.38 0 .733.178.969.488.239.317.318.728.21 1.102l-1.628 5.645a1.245 1.245 0 0 1-1.192.922h-7.068v-7.889c1.624-.336 2.623-2.866 2.806-4.029z"></path></g></svg> <span data-v-76358071="" data-v-16442876="" class="content">获得点赞<span data-v-76358071="" data-v-16442876="" class="count">164</span></span></div><div data-v-76358071="" data-v-16442876="" class="stat-item item"><svg data-v-76358071="" data-v-16442876="" width="25" height="25" viewBox="0 0 25 25" class="icon stat-view-icon"><g data-v-76358071="" data-v-16442876="" fill="none" fill-rule="evenodd"><circle data-v-76358071="" data-v-16442876="" cx="12.5" cy="12.5" r="12.5" fill="#E1EFFF"></circle> <path data-v-76358071="" data-v-16442876="" fill="#7BB9FF" d="M4 12.5S6.917 7 12.75 7s8.75 5.5 8.75 5.5-2.917 5.5-8.75 5.5S4 12.5 4 12.5zm8.75 2.292c1.208 0 2.188-1.026 2.188-2.292 0-1.266-.98-2.292-2.188-2.292-1.208 0-2.188 1.026-2.188 2.292 0 1.266.98 2.292 2.188 2.292z"></path></g></svg> <span data-v-76358071="" data-v-16442876="" class="content">文章被阅读<span data-v-76358071="" data-v-16442876="" class="count">5,118</span></span></div><!----></div></div><!----><div data-v-16442876="" data-v-f69ccc58="" data-v-518a2f8f="" data-v-7301278b="" class="sidebar-block recommend recommend-index shadow"><div data-v-16442876="" class="block-title">你可能感兴趣的小册</div><div data-v-16442876="" class="block-body"><div data-v-f69ccc58="" data-v-16442876="" class="book-list"><div data-v-f69ccc58="" data-v-16442876="" class="book"><div data-v-f69ccc58="" data-v-16442876="" class="poster"><div data-v-95ddf8f6="" data-v-4802f2b2="" data-v-f69ccc58="" data-src="https://user-gold-cdn.xitu.io/2018/5/17/1636d772f3d23cf1?imageView2/1/w/200/h/280/q/95/format/webp/interlace/1" class="lazy thumb poster-img loaded" data-v-16442876="" style="background-image: url(&quot;https://user-gold-cdn.xitu.io/2018/5/17/1636d772f3d23cf1?imageView2/1/w/200/h/280/q/95/format/webp/interlace/1&quot;); background-size: cover;"></div></div><div data-v-f69ccc58="" data-v-16442876="" class="info"><div data-v-f69ccc58="" data-v-16442876="" class="title">区块链开发入门：从 0 到 1 构建基于以太坊智能合约的 ICO DApp</div><div data-v-f69ccc58="" data-v-16442876="" class="bought"><span data-v-f69ccc58="" data-v-16442876="" class="num">1495人已购买</span><span data-v-f69ccc58="" data-v-16442876="" class="try-read">试读</span></div></div></div><div data-v-f69ccc58="" data-v-16442876="" class="book"><div data-v-f69ccc58="" data-v-16442876="" class="poster"><div data-v-95ddf8f6="" data-v-4802f2b2="" data-v-f69ccc58="" data-src="https://user-gold-cdn.xitu.io/2018/12/18/167bd17a51160738?imageView2/1/w/200/h/280/q/95/format/webp/interlace/1" class="lazy thumb poster-img loaded" data-v-16442876="" style="background-image: url(&quot;https://user-gold-cdn.xitu.io/2018/12/18/167bd17a51160738?imageView2/1/w/200/h/280/q/95/format/webp/interlace/1&quot;); background-size: cover;"></div></div><div data-v-f69ccc58="" data-v-16442876="" class="info"><div data-v-f69ccc58="" data-v-16442876="" class="title">Android 进阶：基于 Kotlin 的 Android App 开发实践</div><div data-v-f69ccc58="" data-v-16442876="" class="bought"><span data-v-f69ccc58="" data-v-16442876="" class="num">777人已购买</span><span data-v-f69ccc58="" data-v-16442876="" class="try-read">试读</span></div></div></div></div></div></div><div data-v-16442876="" data-v-03315f79="" data-v-7301278b="" class="sidebar-block app-download-sidebar-block shadow"><!----><div data-v-16442876="" class="block-body"><a data-v-03315f79="" data-v-16442876="" class="app-link" href="https://juejin.im/app" target="_blank"><img data-v-03315f79="" data-v-16442876="" src="./【万字长文】深入理解 Typescript 高级用法 - 掘金_files/post.7cb7332.png" class="qr-img"><div data-v-03315f79="" data-v-16442876="" class="content-box"><div data-v-03315f79="" data-v-16442876="" class="headline">下载掘金客户端</div><div data-v-03315f79="" data-v-16442876="" class="desc">一个帮助开发者成长的社区</div></div><div data-v-03315f79="" data-v-16442876="" title="关闭" class="close-btn ion-close-round"></div></a></div></div><div data-v-16442876="" data-v-3c6504c4="" data-v-7301278b="" class="sidebar-block wechat-sidebar-block pure"><div data-v-06f599f1="" data-v-3c6504c4="" class="wechat-banner" data-v-16442876=""><img data-v-06f599f1="" src="./【万字长文】深入理解 Typescript 高级用法 - 掘金_files/frontend.1dae74a.png" class="wechat-img"></div><div data-v-3c6504c4="" data-v-16442876="" title="关闭" class="close-btn ion-close-round"></div></div><div data-v-16442876="" data-v-2998ad53="" data-v-7301278b="" class="sidebar-block related-entry-sidebar-block shadow" st:block="relatedEntrySidebarBlock"><div data-v-16442876="" class="block-title">相关文章</div><div data-v-16442876="" class="block-body"><div data-v-2998ad53="" data-v-16442876="" class="entry-list"><a data-v-2998ad53="" href="https://juejin.im/post/5ec6b8906fb9a047ce7c4560" target="_blank" rel="" st:name="link" class="item" data-v-16442876=""><div data-v-2998ad53="" class="entry-title">数组实现栈与对象实现栈的区别</div><div data-v-2998ad53="" class="entry-meta-box"><div data-v-2998ad53="" class="entry-meta"><img data-v-2998ad53="" src="./【万字长文】深入理解 Typescript 高级用法 - 掘金_files/zan.e9d7698.svg" class="icon"><span data-v-2998ad53="" class="count">1</span></div><div data-v-2998ad53="" class="entry-meta"><img data-v-2998ad53="" src="./【万字长文】深入理解 Typescript 高级用法 - 掘金_files/comment.a7c8341.svg" class="icon"><span data-v-2998ad53="" class="count">0</span></div></div></a><a data-v-2998ad53="" href="https://juejin.im/post/5ec2951ce51d454dda7f5dd6" target="_blank" rel="" st:name="link" class="item" data-v-16442876=""><div data-v-2998ad53="" class="entry-title">类型即正义：TypeScript 从入门到实践（四）：5000字长文带你重新认识泛型</div><div data-v-2998ad53="" class="entry-meta-box"><div data-v-2998ad53="" class="entry-meta"><img data-v-2998ad53="" src="./【万字长文】深入理解 Typescript 高级用法 - 掘金_files/zan.e9d7698.svg" class="icon"><span data-v-2998ad53="" class="count">12</span></div><div data-v-2998ad53="" class="entry-meta"><img data-v-2998ad53="" src="./【万字长文】深入理解 Typescript 高级用法 - 掘金_files/comment.a7c8341.svg" class="icon"><span data-v-2998ad53="" class="count">3</span></div></div></a><a data-v-2998ad53="" href="https://juejin.im/post/5e94595c6fb9a03c341daa75" target="_blank" rel="" st:name="link" class="item" data-v-16442876=""><div data-v-2998ad53="" class="entry-title">Vue3 跟着尤雨溪学 TypeScript 之 Ref 类型从零实现</div><div data-v-2998ad53="" class="entry-meta-box"><div data-v-2998ad53="" class="entry-meta"><img data-v-2998ad53="" src="./【万字长文】深入理解 Typescript 高级用法 - 掘金_files/zan.e9d7698.svg" class="icon"><span data-v-2998ad53="" class="count">291</span></div><div data-v-2998ad53="" class="entry-meta"><img data-v-2998ad53="" src="./【万字长文】深入理解 Typescript 高级用法 - 掘金_files/comment.a7c8341.svg" class="icon"><span data-v-2998ad53="" class="count">59</span></div></div></a><a data-v-2998ad53="" href="https://juejin.im/post/5ec221f65188256d5324e1b0" target="_blank" rel="" st:name="link" class="item" data-v-16442876=""><div data-v-2998ad53="" class="entry-title">拍卖源码架构在拍品详情页上的探索</div><div data-v-2998ad53="" class="entry-meta-box"><div data-v-2998ad53="" class="entry-meta"><img data-v-2998ad53="" src="./【万字长文】深入理解 Typescript 高级用法 - 掘金_files/zan.e9d7698.svg" class="icon"><span data-v-2998ad53="" class="count">7</span></div><div data-v-2998ad53="" class="entry-meta"><img data-v-2998ad53="" src="./【万字长文】深入理解 Typescript 高级用法 - 掘金_files/comment.a7c8341.svg" class="icon"><span data-v-2998ad53="" class="count">2</span></div></div></a></div></div></div><div data-v-7301278b="" class="sticky-block-box"><div data-v-16442876="" data-v-48b1e3e4="" data-v-7301278b="" class="sidebar-block catalog-block pure"><nav data-v-1a96e633="" data-v-48b1e3e4="" class="article-catalog" data-v-16442876="" style=""><div data-v-1a96e633="" class="catalog-title">目录</div><div data-v-1a96e633="" class="catalog-body"><ul data-v-1a96e633="" class="catalog-list" style="margin-top: -964.102px;"><li data-v-1a96e633="" class="item d1"><a href="https://juejin.im/post/5ea40427518825736f6434ef#heading-0" title="作者: 韩念琪">作者: 韩念琪</a><!----></li><li data-v-1a96e633="" class="item d1"><a href="https://juejin.im/post/5ea40427518825736f6434ef#heading-1" title="相关链接">相关链接</a><!----></li><li data-v-1a96e633="" class="item d1"><a href="https://juejin.im/post/5ea40427518825736f6434ef#heading-2" title="写作初衷">写作初衷</a><ul class="sub-list"><li class="item d2"><a href="https://juejin.im/post/5ea40427518825736f6434ef#heading-3" title="关于标题">关于标题</a><!----></li></ul></li><li data-v-1a96e633="" class="item d1"><a href="https://juejin.im/post/5ea40427518825736f6434ef#heading-4" title="正文">正文</a><!----></li><li data-v-1a96e633="" class="item d1"><a href="https://juejin.im/post/5ea40427518825736f6434ef#heading-5" title="大纲">大纲</a><!----></li><li data-v-1a96e633="" class="item d1"><a href="https://juejin.im/post/5ea40427518825736f6434ef#heading-6" title="基础准备">基础准备</a><ul class="sub-list"><li class="item d2"><a href="https://juejin.im/post/5ea40427518825736f6434ef#heading-7" title="预备知识">预备知识</a><ul class="sub-list"><li class="item d3"><a href="https://juejin.im/post/5ea40427518825736f6434ef#heading-8" title="此文档的内容默认要求读者已经具备以下知识：">此文档的内容默认要求读者已经具备以下知识：</a><!----></li></ul></li><li class="item d2"><a href="https://juejin.im/post/5ea40427518825736f6434ef#heading-9" title="相关资源推荐">相关资源推荐</a><!----></li></ul></li><li data-v-1a96e633="" class="item d1"><a href="https://juejin.im/post/5ea40427518825736f6434ef#heading-10" title="背景">背景</a><!----></li><li data-v-1a96e633="" class="item d1"><a href="https://juejin.im/post/5ea40427518825736f6434ef#heading-11" title="Typescript 类型系统简述">Typescript 类型系统简述</a><ul class="sub-list"><li class="item d2"><a href="https://juejin.im/post/5ea40427518825736f6434ef#heading-12" title="Typescript 的类型是支持定义 &quot;函数定义&quot; 的">Typescript 的类型是支持定义 "函数定义" 的</a><ul class="sub-list"><li class="item d3"><a href="https://juejin.im/post/5ea40427518825736f6434ef#heading-13" title="那么言归正传，如何在 Typescript 类型系统中定义函数呢？">那么言归正传，如何在 Typescript 类型系统中定义函数呢？</a><!----></li></ul></li><li class="item d2"><a href="https://juejin.im/post/5ea40427518825736f6434ef#heading-14" title="Typescript 的类型是支持 &quot;条件判断&quot; 的">Typescript 的类型是支持 "条件判断" 的</a><ul class="sub-list"><li class="item d3"><a href="https://juejin.im/post/5ea40427518825736f6434ef#heading-15" title="那么在 Typescript 类型系统中的类型判断要怎么实现呢？">那么在 Typescript 类型系统中的类型判断要怎么实现呢？</a><!----></li></ul></li><li class="item d2"><a href="https://juejin.im/post/5ea40427518825736f6434ef#heading-16" title="Typescript 的类型是支持 &quot;数据结构&quot; 的">Typescript 的类型是支持 "数据结构" 的</a><ul class="sub-list"><li class="item d3"><a href="https://juejin.im/post/5ea40427518825736f6434ef#heading-17" title="模拟真实数组">模拟真实数组</a><!----></li><li class="item d3"><a href="https://juejin.im/post/5ea40427518825736f6434ef#heading-18" title="类型系统中的 &quot;数组&quot;">类型系统中的 "数组"</a><ul class="sub-list"><li class="item d4" style="display: none;"><a href="https://juejin.im/post/5ea40427518825736f6434ef#heading-19" title="下面就让我们更加深入地了解一下 联合类型(Union Types)：">下面就让我们更加深入地了解一下 联合类型(Union Types)：</a><ul class="sub-list"><li class="item d5" style="display: none;"><a href="https://juejin.im/post/5ea40427518825736f6434ef#heading-20" title="如何遍历 联合类型(Union Types) 呢？">如何遍历 联合类型(Union Types) 呢？</a><!----></li><li class="item d5" style="display: none;"><a href="https://juejin.im/post/5ea40427518825736f6434ef#heading-21" title="我们想动态地推导出 联合类型(Union Types) 类型有哪些方法呢？">我们想动态地推导出 联合类型(Union Types) 类型有哪些方法呢？</a><!----></li></ul></li></ul></li><li class="item d3"><a href="https://juejin.im/post/5ea40427518825736f6434ef#heading-22" title="实战应用">实战应用</a><ul class="sub-list"><li class="item d4" style="display: none;"><a href="https://juejin.im/post/5ea40427518825736f6434ef#heading-23" title="那么如何实现一个操作 联合类型(Union Types) 的 map 函数呢？">那么如何实现一个操作 联合类型(Union Types) 的 map 函数呢？</a><!----></li></ul></li><li class="item d3"><a href="https://juejin.im/post/5ea40427518825736f6434ef#heading-24" title="其他数据类型">其他数据类型</a><!----></li></ul></li><li class="item d2"><a href="https://juejin.im/post/5ea40427518825736f6434ef#heading-25" title="Typescript 的类型是支持  &quot;作用域&quot; 的">Typescript 的类型是支持  "作用域" 的</a><ul class="sub-list"><li class="item d3"><a href="https://juejin.im/post/5ea40427518825736f6434ef#heading-26" title="全局作用域">全局作用域</a><!----></li><li class="item d3"><a href="https://juejin.im/post/5ea40427518825736f6434ef#heading-27" title="模块作用域">模块作用域</a><!----></li><li class="item d3"><a href="https://juejin.im/post/5ea40427518825736f6434ef#heading-28" title="泛型操作符作用域&amp;函数作用域">泛型操作符作用域&amp;函数作用域</a><!----></li></ul></li><li class="item d2"><a href="https://juejin.im/post/5ea40427518825736f6434ef#heading-29" title="Typescript 的类型是支持 &quot;递归&quot; 的">Typescript 的类型是支持 "递归" 的</a><ul class="sub-list"><li class="item d3"><a href="https://juejin.im/post/5ea40427518825736f6434ef#heading-30" title="假如现在需要把一个任意长度的元组类型中的子类型依次取出，并用 `&amp;` 拼接并返回。">假如现在需要把一个任意长度的元组类型中的子类型依次取出，并用 `&amp;` 拼接并返回。</a><!----></li></ul></li><li class="item d2"><a href="https://juejin.im/post/5ea40427518825736f6434ef#heading-31" title="小结">小结</a><!----></li></ul></li><li data-v-1a96e633="" class="item d1"><a href="https://juejin.im/post/5ea40427518825736f6434ef#heading-32" title="&quot;高级用法&quot; 的使用场景与价值">"高级用法" 的使用场景与价值</a><ul class="sub-list"><li class="item d2"><a href="https://juejin.im/post/5ea40427518825736f6434ef#heading-33" title="哪些用法可以被称为 &quot;高级用法&quot;">哪些用法可以被称为 "高级用法"</a><!----></li><li class="item d2"><a href="https://juejin.im/post/5ea40427518825736f6434ef#heading-34" title="举例说明 &quot;高级用法&quot; 的使用场景">举例说明 "高级用法" 的使用场景</a><!----></li><li class="item d2"><a href="https://juejin.im/post/5ea40427518825736f6434ef#heading-35" title="小结">小结</a><!----></li></ul></li><li data-v-1a96e633="" class="item d1"><a href="https://juejin.im/post/5ea40427518825736f6434ef#heading-36" title="类型推导与泛型操作符">类型推导与泛型操作符</a><ul class="sub-list"><li class="item d2"><a href="https://juejin.im/post/5ea40427518825736f6434ef#heading-37" title="流动的类型（类型编写思路）">流动的类型（类型编写思路）</a><!----></li><li class="item d2"><a href="https://juejin.im/post/5ea40427518825736f6434ef#heading-38" title="Typescript 代码哲学">Typescript 代码哲学</a><!----></li></ul></li><li data-v-1a96e633="" class="item d1"><a href="https://juejin.im/post/5ea40427518825736f6434ef#heading-39" title="常见类型推导实现逻辑梳理与实践入门">常见类型推导实现逻辑梳理与实践入门</a><ul class="sub-list"><li class="item d2"><a href="https://juejin.im/post/5ea40427518825736f6434ef#heading-40" title="类型的传递（流动）">类型的传递（流动）</a><!----></li><li class="item d2"><a href="https://juejin.im/post/5ea40427518825736f6434ef#heading-41" title="类型的过滤与分流">类型的过滤与分流</a><!----></li><li class="item d2"><a href="https://juejin.im/post/5ea40427518825736f6434ef#heading-42" title="小结">小结</a><!----></li></ul></li><li data-v-1a96e633="" class="item d1"><a href="https://juejin.im/post/5ea40427518825736f6434ef#heading-43" title="【未完待续...】常见泛型操作符实现逻辑梳理与实践入门">【未完待续...】常见泛型操作符实现逻辑梳理与实践入门</a><!----></li><li data-v-1a96e633="" class="item d1"><a href="https://juejin.im/post/5ea40427518825736f6434ef#heading-44" title="定制化扩展你的 Typescript">定制化扩展你的 Typescript</a><ul class="sub-list"><li class="item d2"><a href="https://juejin.im/post/5ea40427518825736f6434ef#heading-45" title="Typescript Service Plugins 的产生背景、功能定位、基础使用">Typescript Service Plugins 的产生背景、功能定位、基础使用</a><ul class="sub-list"><li class="item d3"><a href="https://juejin.im/post/5ea40427518825736f6434ef#heading-46" title="产生背景">产生背景</a><ul class="sub-list"><li class="item d4" style="display: none;"><a href="https://juejin.im/post/5ea40427518825736f6434ef#heading-47" title="为了提供更加贴心的开发体验，Typescript 官方提供一种解决思路——Typescript Service Plugins">为了提供更加贴心的开发体验，Typescript 官方提供一种解决思路——Typescript Service Plugins</a><!----></li></ul></li><li class="item d3"><a href="https://juejin.im/post/5ea40427518825736f6434ef#heading-48" title="功能定位">功能定位</a><ul class="sub-list"><li class="item d4" style="display: none;"><a href="https://juejin.im/post/5ea40427518825736f6434ef#heading-49" title="以下内容摘自官方 WIKI：">以下内容摘自官方 WIKI：</a><!----></li></ul></li><li class="item d3"><a href="https://juejin.im/post/5ea40427518825736f6434ef#heading-50" title="如何安装以及如何配置 Typescript Service Plugins">如何安装以及如何配置 Typescript Service Plugins</a><ul class="sub-list"><li class="item d4" style="display: none;"><a href="https://juejin.im/post/5ea40427518825736f6434ef#heading-51" title="Typescript Service Plugins 的安装方法">Typescript Service Plugins 的安装方法</a><!----></li><li class="item d4" style="display: none;"><a href="https://juejin.im/post/5ea40427518825736f6434ef#heading-52" title="如何在 tsconfig.json 中配置 Typescript Service Plugins">如何在 tsconfig.json 中配置 Typescript Service Plugins</a><!----></li><li class="item d4" style="display: none;"><a href="https://juejin.im/post/5ea40427518825736f6434ef#heading-53" title="几个需要注意的地方:">几个需要注意的地方:</a><!----></li></ul></li></ul></li><li class="item d2"><a href="https://juejin.im/post/5ea40427518825736f6434ef#heading-54" title="市面上已有的 Typescript Service Plugins 举例介绍">市面上已有的 Typescript Service Plugins 举例介绍</a><ul class="sub-list"><li class="item d3"><a href="https://juejin.im/post/5ea40427518825736f6434ef#heading-55" title="示例插件：typescript-plugin-css-modules">示例插件：typescript-plugin-css-modules</a><ul class="sub-list"><li class="item d4" style="display: none;"><a href="https://juejin.im/post/5ea40427518825736f6434ef#heading-56" title="插件安装">插件安装</a><!----></li><li class="item d4" style="display: none;"><a href="https://juejin.im/post/5ea40427518825736f6434ef#heading-57" title="配置方法">配置方法</a><ul class="sub-list"><li class="item d5" style="display: none;"><a href="https://juejin.im/post/5ea40427518825736f6434ef#heading-58" title="在 tsconfig.json 中增加配置">在 tsconfig.json 中增加配置</a><!----></li></ul></li><li class="item d4" style="display: none;"><a href="https://juejin.im/post/5ea40427518825736f6434ef#heading-59" title="插件基本介绍与使用场景">插件基本介绍与使用场景</a><!----></li></ul></li><li class="item d3 active"><a href="https://juejin.im/post/5ea40427518825736f6434ef#heading-60" title="示例插件：typescript-eslint-language-service">示例插件：typescript-eslint-language-service</a><ul class="sub-list"><li class="item d4" style="display: none;"><a href="https://juejin.im/post/5ea40427518825736f6434ef#heading-61" title="插件安装">插件安装</a><!----></li><li class="item d4" style="display: none;"><a href="https://juejin.im/post/5ea40427518825736f6434ef#heading-62" title="配置方法">配置方法</a><ul class="sub-list"><li class="item d5" style="display: none;"><a href="https://juejin.im/post/5ea40427518825736f6434ef#heading-63" title="在 tsconfig.json 中增加配置">在 tsconfig.json 中增加配置</a><!----></li></ul></li><li class="item d4" style="display: none;"><a href="https://juejin.im/post/5ea40427518825736f6434ef#heading-64" title="插件基本介绍与使用场景">插件基本介绍与使用场景</a><!----></li></ul></li><li class="item d3"><a href="https://juejin.im/post/5ea40427518825736f6434ef#heading-65" title="示例插件：typescript-styled-plugin">示例插件：typescript-styled-plugin</a><ul class="sub-list"><li class="item d4" style="display: none;"><a href="https://juejin.im/post/5ea40427518825736f6434ef#heading-66" title="插件安装">插件安装</a><!----></li><li class="item d4" style="display: none;"><a href="https://juejin.im/post/5ea40427518825736f6434ef#heading-67" title="配置方法">配置方法</a><ul class="sub-list"><li class="item d5" style="display: none;"><a href="https://juejin.im/post/5ea40427518825736f6434ef#heading-68" title="在 tsconfig.json 中增加配置">在 tsconfig.json 中增加配置</a><!----></li></ul></li><li class="item d4" style="display: none;"><a href="https://juejin.im/post/5ea40427518825736f6434ef#heading-69" title="插件基本介绍与使用场景">插件基本介绍与使用场景</a><!----></li></ul></li></ul></li><li class="item d2"><a href="https://juejin.im/post/5ea40427518825736f6434ef#heading-70" title="如何自己写一个 Typescript Service Plugins">如何自己写一个 Typescript Service Plugins</a><!----></li><li class="item d2"><a href="https://juejin.im/post/5ea40427518825736f6434ef#heading-71" title="参考资料链接">参考资料链接</a><!----></li><li class="item d2"><a href="https://juejin.im/post/5ea40427518825736f6434ef#heading-72" title="总结">总结</a><!----></li></ul></li><li data-v-1a96e633="" class="item d1"><a href="https://juejin.im/post/5ea40427518825736f6434ef#heading-73" title="Q&amp;A（欢迎评论区补充）">Q&amp;A（欢迎评论区补充）</a><ul class="sub-list"><li class="item d2"><a href="https://juejin.im/post/5ea40427518825736f6434ef#heading-74" title="可以利用 Typescript Service Plugin（例如配置 eslint 规则）阻塞编译或者在编译时告警吗？">可以利用 Typescript Service Plugin（例如配置 eslint 规则）阻塞编译或者在编译时告警吗？</a><!----></li></ul></li></ul></div></nav></div></div></div><div data-v-b753df20="" data-v-fa2339b8="" class="article-suspended-panel article-suspended-panel" data-v-6fdc8784=""><div data-v-b753df20="" class="like-btn panel-btn like-adjust with-badge" badge="164"></div><div data-v-b753df20="" class="comment-btn panel-btn comment-adjust with-badge" badge="42"></div><div data-v-b753df20="" class="collect-btn panel-btn"><!----></div><div data-v-b753df20="" class="share-title">分享</div><div data-v-b753df20="" class="weibo-btn share-btn panel-btn"></div><div data-v-b753df20="" class="qq-btn share-btn panel-btn"></div><div data-v-b753df20="" class="wechat-btn share-btn panel-btn"><img data-v-b753df20="" src="https://juejin.im/post/5ea40427518825736f6434ef" class="wechat-qr-code-img shadow" style="display: none;"></div></div><div data-v-0a49d917="" data-v-fa2339b8="" class="image-viewer-box" data-v-6fdc8784=""><!----></div><!----></div></main></div><!----></div>
      
      
      
      <script type="text/javascript" src="./【万字长文】深入理解 Typescript 高级用法 - 掘金_files/runtime.cc2b750c14e4e98c0e3a.js"></script><script type="text/javascript" src="./【万字长文】深入理解 Typescript 高级用法 - 掘金_files/0.0b214b1cb6731ce0f8d8.js"></script><script type="text/javascript" src="./【万字长文】深入理解 Typescript 高级用法 - 掘金_files/1.63ca4ab7fc5bd9c1cbc0.js"></script>
    </body></html>