<!DOCTYPE html>
<!-- saved from url=(0047)https://juejin.im/post/5def4831e51d45584b585000 -->
<html lang="zh-Hans"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8"><meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1"><meta name="viewport" content="width=device-width,initial-scale=1,user-scalable=no,viewport-fit=cover"><meta name="google-site-verification" content="cCHsgG9ktuCTgWgYfqCJql8AeR4gAne4DTZqztPoirE"><meta name="google-site-verification" content="nPvn9R5NJLsZKTv5VKIbn0OmkRcJ4PC6KdDoTX3n5Mw"><meta name="apple-itunes-app" content="app-id=987739104"><meta name="baidu-site-verification" content="qiK2a1kcFc"><meta name="360-site-verification" content="4c3c7d57d59f0e1a308462fbc7fd7e51"><meta name="sogou_site_verification" content="c49WUDZczQ"><style>body {
        font-size: 16px;
        line-height: 2;
      }
      a, button, input {
        margin: 1rem 1.5rem;
      }
      img {
        width: 0;
        height: 0;
      }
      #juejin {
        overflow-x: hidden;
      }</style><title data-vue-meta="true">8k字 | Redux/react-redux/redux中间件设计实现剖析 - 掘金</title><link rel="apple-touch-icon" sizes="180x180" href="https://b-gold-cdn.xitu.io/favicons/v2/apple-touch-icon.png"><link rel="icon" type="image/png" sizes="32x32" href="https://b-gold-cdn.xitu.io/favicons/v2/favicon-32x32.png"><link rel="icon" type="image/png" sizes="16x16" href="https://b-gold-cdn.xitu.io/favicons/v2/favicon-16x16.png"><link rel="manifest" href="https://b-gold-cdn.xitu.io/favicons/v2/manifest.json"><link rel="mask-icon" href="https://b-gold-cdn.xitu.io/favicons/v2/safari-pinned-tab.svg" color="#5bbad5"><link rel="shortcut icon" href="https://b-gold-cdn.xitu.io/favicons/v2/favicon.ico"><meta name="msapplication-config" content="https://b-gold-cdn.xitu.io/favicons/v2/browserconfig.xml"><meta name="theme-color" content="#ffffff"><link rel="search" title="掘金" href="https://b-gold-cdn.xitu.io/conf/search.xml" type="application/opensearchdescription+xml"><link rel="stylesheet" href="./8k字 _ Redux_react-redux_redux中间件设计实现剖析 - 掘金_files/ionicons.min.css"><link rel="stylesheet" href="./8k字 _ Redux_react-redux_redux中间件设计实现剖析 - 掘金_files/iconfont.css"><link href="./8k字 _ Redux_react-redux_redux中间件设计实现剖析 - 掘金_files/0.f1fc61eda29199ce1f45.css" rel="stylesheet"><script async="" src="./8k字 _ Redux_react-redux_redux中间件设计实现剖析 - 掘金_files/hm.js"></script><script async="" src="./8k字 _ Redux_react-redux_redux中间件设计实现剖析 - 掘金_files/analytics.js"></script><script type="text/javascript" async="" src="./8k字 _ Redux_react-redux_redux中间件设计实现剖析 - 掘金_files/vds.js"></script><script type="text/javascript" async="" src="./8k字 _ Redux_react-redux_redux中间件设计实现剖析 - 掘金_files/collect-v.3.2.14.js"></script><script charset="utf-8" src="./8k字 _ Redux_react-redux_redux中间件设计实现剖析 - 掘金_files/4.281438b56343cf12fa0b.js"></script><meta data-vmid="keywords" name="keywords" content="React.js" data-vue-meta="true"><meta data-vmid="description" name="description" content="其实笔者本来没有redux相关的行文计划，不过公司内部最近有同事作了redux相关的技术分享,而笔者承担了一部分文章评审的任务，在评审的过程中，笔者花了相当的精力时间来查阅资料和实现代码，前后积攒了几千字的笔记，对redux也有了一份心得见解，于是顺手写就本文" data-vue-meta="true"></head><body><div id="juejin" data-v-2a21baac=""><div class="global-component-box" data-v-2a21baac=""><!----><div data-v-5ef5fb43="" data-v-2a21baac="" class="alert-list alert-list"></div><div data-v-15608c17="" data-v-2a21baac="" class="suspension-panel suspension-panel"><button data-v-15608c17="" title="回到顶部" class="btn to-top-btn" style=""><i data-v-15608c17="" class="ion-android-arrow-dropup"></i></button><button data-v-15608c17="" title="建议反馈" class="btn meiqia-btn" style=""><i data-v-15608c17="" class="ion-chatbubble-working"></i></button></div><!----><!----><div class="emoji-barrage" data-v-94fd086c="" data-v-2a21baac=""><!----></div><div class="book-new-user-award-popup" style="display:none;" data-v-22fa60e5="" data-v-2a21baac=""><div class="content-box" style="display:;" data-v-22fa60e5=""><div class="close ion-close-round" data-v-22fa60e5=""></div><div class="header" data-v-22fa60e5=""><div class="icon" data-v-22fa60e5=""><img src="./8k字 _ Redux_react-redux_redux中间件设计实现剖析 - 掘金_files/icon.a87e5ae.svg" data-v-22fa60e5=""></div><div class="txt" data-v-22fa60e5="">新人专享好礼</div></div><div class="desc" data-v-22fa60e5="">凡未购买过小册的用户，均可领取三张 5 折新人专享券，购买小册时自动使用专享券，最高可节省 45 元。</div><div class="tickets" data-v-22fa60e5=""><div class="ticket" data-v-22fa60e5=""><div class="ticket__inner" data-v-22fa60e5=""><div class="enjoy" data-v-22fa60e5=""><span class="new-title" data-v-22fa60e5="">小册新人 5 折券</span></div><div class="sale" data-v-22fa60e5="">最高可省 15 元</div></div></div><div class="ticket" data-v-22fa60e5=""><div class="ticket__inner" data-v-22fa60e5=""><div class="enjoy" data-v-22fa60e5=""><span class="new-title" data-v-22fa60e5="">小册新人 5 折券</span></div><div class="sale" data-v-22fa60e5="">最高可省 15 元</div></div></div><div class="ticket" data-v-22fa60e5=""><div class="ticket__inner" data-v-22fa60e5=""><div class="enjoy" data-v-22fa60e5=""><span class="new-title" data-v-22fa60e5="">小册新人 5 折券</span></div><div class="sale" data-v-22fa60e5="">最高可省 15 元</div></div></div></div><div class="remark" data-v-22fa60e5="">注：专享券的使用期限在领券的七天内。</div><div class="submit-btn" data-v-22fa60e5="">一键领取</div></div><div class="model success" style="display:none;" data-v-22fa60e5=""><div class="heading" data-v-22fa60e5="">领取成功</div><div class="content-text" data-v-22fa60e5="">购买小册时自动使用专享券</div><div class="btn-success-footer" data-v-22fa60e5=""><div class="btn-ok" data-v-22fa60e5="">知道了</div><div class="btn-ok btn-link" data-v-22fa60e5="">前往小册首页</div></div></div><div class="model fail" style="display:none;" data-v-22fa60e5=""><div class="heading" data-v-22fa60e5="">领取失败</div><div class="content-text" data-v-22fa60e5="">本活动仅适用于小册新用户</div><div class="btn-ok" data-v-22fa60e5="">知道了</div></div></div><!----><!----><div class="bind-phone-number-modal-box" data-v-269c0ad0="" data-v-2a21baac=""><div st:block="bindPhoneNumberModal" class="modal-mask" style="display:none;" data-v-269c0ad0=""></div><form class="bind-phone-number-form" style="display:none;" data-v-269c0ad0=""><i title="关闭" class="close-btn ion-close-round" data-v-269c0ad0=""></i><h1 class="title" data-v-269c0ad0="">提示</h1><h2 class="hint" data-v-269c0ad0="">根据我国<a href="http://www.cac.gov.cn/2017-08/25/c_1121541842.htm" target="_blank" style="color:#007fff">《互联网跟帖评论服务管理规定》</a>，您需要绑定手机号后才可在掘金社区内发布内容。</h2><div class="input-group" data-v-269c0ad0=""><div class="input-box" data-v-269c0ad0=""><input maxlength="64" placeholder="请输入要绑定的手机号码" value="" class="input" data-v-269c0ad0=""></div><!----><!----></div><button st:name="bindBtn" class="btn" data-v-269c0ad0="">绑定手机</button></form></div></div><!----><div data-v-6fdc8784="" data-v-fa2339b8="" data-v-2a21baac="" class="view-container"><div data-v-6fdc8784="" class="main-header-box"><header data-v-0c56945c="" data-v-6fdc8784="" class="main-header main-header"><div data-v-0c56945c="" class="container"><a data-v-0c56945c="" href="https://juejin.im/" class="logo"><img data-v-0c56945c="" src="./8k字 _ Redux_react-redux_redux中间件设计实现剖析 - 掘金_files/logo.a7995ad.svg" alt="掘金" class="logo-img"><img data-v-0c56945c="" src="./8k字 _ Redux_react-redux_redux中间件设计实现剖析 - 掘金_files/simplify-logo.3e3c253.svg" alt="掘金" class="mobile"></a><nav data-v-0c56945c="" role="navigation" class="main-nav"><ul data-v-0c56945c="" class="nav-list"><li data-v-0c56945c="" class="main-nav-list"><div data-v-0c56945c="" class="phone-show-menu"><span data-v-0c56945c="">首页</span><div data-v-0c56945c="" class="icon ion-arrow-down-b"></div></div><ul data-v-0c56945c="" class="phone-hide"><li data-v-0c56945c="" class="nav-item link-item route-active"><a data-v-0c56945c="" href="https://juejin.im/">首页</a></li><li data-v-0c56945c="" class="nav-item link-item activities"><a data-v-0c56945c="" href="https://juejin.im/pins">沸点</a></li><li data-v-0c56945c="" class="nav-item link-item"><a data-v-0c56945c="" href="https://juejin.im/topics">话题</a></li><li data-v-0c56945c="" class="nav-item link-item book"><a data-v-0c56945c="" href="https://juejin.im/books">小册</a></li><li data-v-0c56945c="" class="nav-item link-item"><a data-v-0c56945c="" href="https://juejin.im/events/all">活动</a></li></ul></li><li data-v-0c56945c="" class="nav-item search"><form data-v-0c56945c="" role="search" class="search-form"><input data-v-0c56945c="" type="search" maxlength="32" placeholder="搜索掘金" class="search-input"><img data-v-0c56945c="" src="./8k字 _ Redux_react-redux_redux中间件设计实现剖析 - 掘金_files/juejin-search-icon.6f8ba1b.svg" alt="搜索" class="search-icon"></form></li><li data-v-0c56945c="" class="nav-item add"><div data-v-0c56945c="" class="add-group"><button data-v-0c56945c="" class="add-btn">写文章</button><div data-v-0c56945c="" class="more"><i data-v-0c56945c="" class="more-icon ion-android-arrow-dropdown"></i></div><ul data-v-0c56945c="" class="more-list"><li data-v-0c56945c="" class="item">发布沸点</li><li data-v-0c56945c="" class="item">分享链接</li><!----></ul></div><!----></li><li data-v-0c56945c="" class="nav-item notification"><a data-v-0c56945c="" class="app-link" href="https://juejin.im/notification" target="_blank"><i data-v-0c56945c="" class="icon ion-android-notifications"></i><!----></a></li><li data-v-0c56945c="" class="nav-item menu"><div data-v-95ddf8f6="" data-v-39db9419="" data-v-0c56945c="" data-src="https://mirror-gold-cdn.xitu.io/168e08d6d9e8b3febec?imageView2/1/w/100/h/100/q/85/format/webp/interlace/1" class="lazy avatar avatar loaded immediate" style="background-image: url(&quot;https://mirror-gold-cdn.xitu.io/168e08d6d9e8b3febec?imageView2/1/w/100/h/100/q/85/format/webp/interlace/1&quot;);"></div><!----><ul data-v-0c56945c="" class="nav-menu user-dropdown-list" style="display: none;"><div data-v-0c56945c="" class="nav-menu-item-group"><li data-v-0c56945c="" class="nav-menu-item"><a data-v-0c56945c=""><i data-v-0c56945c="" class="fengwei fw-write"></i><span data-v-0c56945c="">写文章</span></a></li><!----><li data-v-0c56945c="" class="nav-menu-item"><a data-v-0c56945c=""><i data-v-0c56945c="" class="fengwei fw-draft"></i><span data-v-0c56945c="">草稿</span></a></li></div><div data-v-0c56945c="" class="nav-menu-item-group"><li data-v-0c56945c="" class="nav-menu-item"><a data-v-0c56945c="" href="https://juejin.im/user/5a5f6102f265da3e3a6dd3b0" class="link-icon"><i data-v-0c56945c="" class="fengwei fw-person"></i><span data-v-0c56945c="">我的主页</span><!----></a></li><li data-v-0c56945c="" class="nav-menu-item"><a data-v-0c56945c="" href="https://juejin.im/user/5a5f6102f265da3e3a6dd3b0/likes"><img data-v-0c56945c="" src="./8k字 _ Redux_react-redux_redux中间件设计实现剖析 - 掘金_files/zan.e9d7698.svg" class="zan"><span data-v-0c56945c="">我赞过的</span></a></li><!----><li data-v-0c56945c="" class="nav-menu-item"><a data-v-0c56945c="" href="https://juejin.im/user/5a5f6102f265da3e3a6dd3b0/collections"><img data-v-0c56945c="" src="./8k字 _ Redux_react-redux_redux中间件设计实现剖析 - 掘金_files/collect.02e2979.svg" class="collect"><span data-v-0c56945c="">我的收藏集</span></a></li><li data-v-0c56945c="" class="nav-menu-item"><a data-v-0c56945c="" href="https://juejin.im/user/5a5f6102f265da3e3a6dd3b0/books?type=bought"><i data-v-0c56945c="" class="fengwei fw-bought"></i><span data-v-0c56945c="">已购</span></a></li><li data-v-0c56945c="" class="nav-menu-item"><a data-v-0c56945c="" href="https://juejin.im/subscribe"><i data-v-0c56945c="" class="fengwei fw-tag"></i><span data-v-0c56945c="">标签管理</span></a></li></div><div data-v-0c56945c="" class="nav-menu-item-group"><li data-v-0c56945c="" class="nav-menu-item"><a data-v-0c56945c="" href="https://juejin.im/user/settings"><i data-v-0c56945c="" class="fengwei fw-setting"></i><span data-v-0c56945c="">设置</span></a></li><li data-v-0c56945c="" class="nav-menu-item more"><a data-v-0c56945c=""><i data-v-0c56945c="" class="fengwei fw-info"></i><span data-v-0c56945c="">关于</span><i data-v-0c56945c="" class="ion-chevron-right more-icon"></i></a><ul data-v-0c56945c="" class="nav-menu more-dropdown-list"><div data-v-0c56945c="" class="nav-menu-item-group"><li data-v-0c56945c="" class="nav-menu-item"><a data-v-0c56945c="" href="https://juejin.im/app" target="_blank">下载应用</a></li><li data-v-0c56945c="" class="nav-menu-item"><a data-v-0c56945c="" href="https://juejin.im/about" target="_blank">关于</a></li><li data-v-0c56945c="" class="nav-menu-item"><a data-v-0c56945c="" href="https://xitu.io/jobs" target="_blank">加入我们</a></li><li data-v-0c56945c="" class="nav-menu-item"><a data-v-0c56945c="" href="https://github.com/xitu/gold-miner" rel="nofollow noopener noreferrer" target="_blank">翻译计划</a></li><li data-v-0c56945c="" class="nav-menu-item"><a data-v-0c56945c="" href="https://bd.juejin.im/?utm_campaign=bd&amp;utm_source=web&amp;utm_medium=nav" target="_blank">合作伙伴</a></li></div></ul></li></div><div data-v-0c56945c="" class="nav-menu-item-group"><li data-v-0c56945c="" class="nav-menu-item"><a data-v-0c56945c=""><i data-v-0c56945c="" class="fengwei fw-logout"></i><span data-v-0c56945c="">登出</span></a></li></div></ul></li><!----><!----></ul></nav></div></header></div><main data-v-6fdc8784="" class="container main-container"><div data-v-fa2339b8="" data-v-6fdc8784="" class="view column-view"><div data-v-fa2339b8="" data-v-6fdc8784="" class="main-area article-area shadow"><article data-v-fa2339b8="" itemscope="itemscope" itemtype="http://schema.org/Article" class="article" data-v-6fdc8784=""><meta itemprop="url" content="https://juejin.im/post/5def4831e51d45584b585000"><meta itemprop="headline" content="8k字 | Redux/react-redux/redux中间件设计实现剖析"><meta itemprop="keywords" content="React.js"><meta itemprop="datePublished" content="2020-01-01T08:28:33.072Z"><meta itemprop="image" content="https://user-gold-cdn.xitu.io/2020/4/5/1714a77c672ded2d?w=3700&amp;h=2081&amp;f=jpeg&amp;s=1323899"><div itemprop="author" itemscope="itemscope" itemtype="http://schema.org/Person"><meta itemprop="name" content="写代码像蔡徐抻"><meta itemprop="url" content="https://juejin.im/user/5d194f8151882517de2ae188"></div><div itemprop="publisher" itemscope="itemscope" itemtype="http://schema.org/Organization"><meta itemprop="name" content="掘金"><div itemprop="logo" itemscope="itemscope" itemtype="https://schema.org/ImageObject"><meta itemprop="url" content="https://b-gold-cdn.xitu.io/icon/icon-white-180.png"><meta itemprop="width" content="180"><meta itemprop="height" content="180"></div></div><div data-v-fa2339b8="" class="author-info-block"><a data-v-fa2339b8="" href="https://juejin.im/user/5d194f8151882517de2ae188" target="_blank" rel="" class="avatar-link"><div data-v-95ddf8f6="" data-v-39db9419="" data-v-fa2339b8="" data-src="https://user-gold-cdn.xitu.io/2020/5/12/1720611905f5dfef?imageView2/1/w/100/h/100/q/85/format/webp/interlace/1" class="lazy avatar avatar loaded" style="background-image: url(&quot;https://user-gold-cdn.xitu.io/2020/5/12/1720611905f5dfef?imageView2/1/w/100/h/100/q/85/format/webp/interlace/1&quot;);"></div></a><div data-v-fa2339b8="" class="author-info-box"><a data-v-263f3a32="" data-v-fa2339b8="" href="https://juejin.im/user/5d194f8151882517de2ae188" target="_blank" rel="" class="username username ellipsis">写代码像蔡徐抻<a data-v-6d94a6ea="" data-v-263f3a32="" href="https://juejin.im/book/5c90640c5188252d7941f5bb/section/5c9065385188252da6320022" target="_blank" rel="" class="rank"><img data-v-6d94a6ea="" src="./8k字 _ Redux_react-redux_redux中间件设计实现剖析 - 掘金_files/lv-3.e108c68.svg" alt="lv-3"></a></a><div data-v-fa2339b8="" class="meta-box"><time data-v-fa2339b8="" datetime="2020-01-01T08:28:33.072Z" title="Wed Jan 01 2020 16:28:33 GMT+0800 (中国标准时间)" class="time">2020年01月01日</time><span data-v-fa2339b8="" class="views-count">阅读 15319</span><!----></div></div><button data-v-5789daef="" data-v-fa2339b8="" class="follow-button follow">关注</button></div><div data-v-95ddf8f6="" data-v-4802f2b2="" data-v-fa2339b8="" data-src="https://user-gold-cdn.xitu.io/2020/4/5/1714a77c672ded2d?imageView2/1/w/1304/h/734/q/85/format/webp/interlace/1" class="lazy thumb article-hero loaded" style="background-image: url(&quot;https://user-gold-cdn.xitu.io/2020/4/5/1714a77c672ded2d?imageView2/1/w/1304/h/734/q/85/format/webp/interlace/1&quot;); background-size: cover;"></div><h1 data-v-fa2339b8="" class="article-title">8k字 | Redux/react-redux/redux中间件设计实现剖析</h1><div data-v-fa2339b8="" data-id="5e0c58306fb9a0481759daac" itemprop="articleBody" class="article-content"><div><p>其实笔者本来没有redux相关的行文计划，不过公司内部最近有同事作了redux相关的技术分享,而笔者承担了一部分文章评审的任务，在评审的过程中，笔者花了相当的精力时间来查阅资料和实现代码，前后积攒了几千字的笔记，对redux也有了一份心得见解，于是顺手写就本文，希望能给大家带来些一些启发和思考Thanks♪(･ω·)ﾉ经过本文的学习，读者应该能够学习理解：</p><div><div><p></p><ol><li><p><code>redux</code>的设计思路及实现原理</p></li><li><p><code>react-redux</code>的设计思路及实现原理</p></li><li><p><code>redux中间件</code>的设计思路及实现原理</p></li></ol></div></div></div><p><br></p><div><h2 data-id="heading-0">一. redux的实现</h2><p>在一切开始之前，我们首先要回答一个问题：为什么我们需要redux，redux为我们解决了什么问题？只有回答了这个问题，我们才能把握redux的设计思路。</p><p>React作为一个组件化开发框架，组件之间存在大量通信，有时这些通信跨越多个组件，或者多个组件之间共享一套数据，简单的父子组件间传值不能满足我们的需求，自然而然地，我们需要有一个地方存取和操作这些公共状态。而redux就为我们提供了一种管理公共状态的方案，我们后续的设计实现也将围绕这个需求来展开。</p><p></p><p>我们思考一下如何管理公共状态：既然是公共状态，那么就直接把公共状态提取出来好了。我们创建一个store.js文件，然后直接在里边存放公共的state，其他组件只要引入这个store就可以存取共用状态了。</p><p></p><p></p><p></p><pre code-lang="javascript" class="hljs javascript"><code class="hljs javascript copyable" lang="javascript"><span class="hljs-keyword">const</span> state = {    
    <span class="hljs-attr">count</span>: <span class="hljs-number">0</span>
}<span class="copy-code-btn">复制代码</span></code></pre><p></p><p>我们在store里存放一个公共状态count，组件在import了store后就可以操作这个count。这是最直接的store，当然我们的store肯定不能这么设计，原因主要是两点：</p><p><b>1. 容易误操作</b></p><p>比如说，有人一个不小心把store赋值了{}，清空了store，或者误修改了其他组件的数据，那显然不太安全，出错了也很难排查，因此我们需要<b>有条件地</b>操作store，防止使用者直接修改store的数据。</p><p><b>2. 可读性很差</b></p><p>JS是一门极其依赖语义化的语言，试想如果在代码中不经注释直接修改了公用的state，以后其他人维护代码得多懵逼，为了搞清楚修改state的含义还得根据上下文推断，所以我们最好是给每个操作<b>起个名字</b>。</p><blockquote>项目交接</blockquote><p><img class="lazyload inited loaded" data-src="https://user-gold-cdn.xitu.io/2019/12/10/16eeebdea0891821?imageslim" data-width="350" data-height="230" src="./8k字 _ Redux_react-redux_redux中间件设计实现剖析 - 掘金_files/16eeebdea0891821"></p></div><div><p>我们重新思考一下如何设计这个<b>公共状态管理器</b>，根据我们上面的分析，我们希望公共状态既能够被全局访问到，又是私有的不能被直接修改，思考一下，<b>闭包</b>是不是就就正好符合这两条要求，因此我们会把公共状态设计成闭包（对闭包理解有困难的同学也可以跳过闭包，这并不影响后续理解）</p><p>既然我们要存取状态，那么肯定要有<b>getter</b>和<b>setter</b>，此外当状态发生改变时，我们得进行广播，通知组件状态发生了变更。这不就和redux的三个API：<code>getState、dispatch、subscribe</code>对应上了吗。我们用几句代码勾勒出store的大致形状：</p><p></p></div><p></p><p></p><p></p><pre code-lang="javascript" class="hljs javascript"><code class="hljs javascript copyable" lang="javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> createStore = <span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> {    
    <span class="hljs-keyword">let</span> currentState = {}       <span class="hljs-comment">// 公共状态    </span>
    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getState</span>(<span class="hljs-params"></span>) </span>{}      <span class="hljs-comment">// getter    </span>
    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dispatch</span>(<span class="hljs-params"></span>) </span>{}      <span class="hljs-comment">// setter    </span>
    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">subscribe</span>(<span class="hljs-params"></span>) </span>{}     <span class="hljs-comment">// 发布订阅    </span>
    <span class="hljs-keyword">return</span> { getState, dispatch, subscribe }
}<span class="copy-code-btn">复制代码</span></code></pre><p></p><h3 data-id="heading-1">1. getState实现</h3><div><p><code>getState()</code>的实现非常简单，返回当前状态即可：</p><p></p><p></p><p></p><pre code-lang="javascript" class="hljs javascript"><code class="hljs javascript copyable" lang="javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> createStore = <span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> {    
    <span class="hljs-keyword">let</span> currentState = {}       <span class="hljs-comment">// 公共状态    </span>
    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getState</span>(<span class="hljs-params"></span>) </span>{       <span class="hljs-comment">// getter        </span>
        <span class="hljs-keyword">return</span> currentState    
    }    
    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dispatch</span>(<span class="hljs-params"></span>) </span>{}      <span class="hljs-comment">// setter    </span>
    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">subscribe</span>(<span class="hljs-params"></span>) </span>{}     <span class="hljs-comment">// 发布订阅    </span>
    <span class="hljs-keyword">return</span> { getState, dispatch, subscribe }
}<span class="copy-code-btn">复制代码</span></code></pre><p></p></div><h3 data-id="heading-2">2.dispatch实现</h3><div><p>但是<code>dispatch()</code>的实现我们得思考一下，经过上面的分析，我们的目标是<b>有条件地、具名地</b>修改store的数据，那么我们要如何实现这两点呢？我们已经知道，在使用dispatch的时候，我们会给dispatch()传入一个action对象，这个对象包括我们要修改的state以及这个操作的名字(actionType)，根据type的不同，store会修改对应的state。我们这里也沿用这种设计：</p><p></p><p></p><p></p><pre code-lang="javascript" class="hljs javascript"><code class="hljs javascript copyable" lang="javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> createStore = <span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> {    
    <span class="hljs-keyword">let</span> currentState = {}    
    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getState</span>(<span class="hljs-params"></span>) </span>{        
        <span class="hljs-keyword">return</span> currentState    
    }    
    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dispatch</span>(<span class="hljs-params">action</span>) </span>{        
        <span class="hljs-keyword">switch</span> (action.type) {            
            <span class="hljs-keyword">case</span> <span class="hljs-string">'plus'</span>:            
            currentState = {                 
                ...state,                 
                <span class="hljs-attr">count</span>: currentState.count + <span class="hljs-number">1</span>            
            }        
        }    
    }    
    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">subscribe</span>(<span class="hljs-params"></span>) </span>{}    
    <span class="hljs-keyword">return</span> { getState, subscribe, dispatch }
}<span class="copy-code-btn">复制代码</span></code></pre><p></p></div><div><p>我们把对actionType的判断写在了dispatch中，这样显得很臃肿，也很笨拙，于是我们想到把这部分修改state的规则抽离出来放到外面，这就是我们熟悉的<b><code>reducer</code>。</b>我们修改一下代码，让reducer从外部传入：</p><p></p><p></p><p></p><pre code-lang="javascript" class="hljs javascript"><code class="hljs javascript copyable" lang="javascript"><span class="hljs-keyword">import</span> { reducer } <span class="hljs-keyword">from</span> <span class="hljs-string">'./reducer'</span>
<span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> createStore = <span class="hljs-function">(<span class="hljs-params">reducer</span>) =&gt;</span> {    
    <span class="hljs-keyword">let</span> currentState = {}     
    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getState</span>(<span class="hljs-params"></span>) </span>{        
        <span class="hljs-keyword">return</span> currentState    
    }    
    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dispatch</span>(<span class="hljs-params">action</span>) </span>{         
        currentState = reducer(currentState, action)  
    }    
    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">subscribe</span>(<span class="hljs-params"></span>) </span>{}    
    <span class="hljs-keyword">return</span> { getState, dispatch, subscribe }
}<span class="copy-code-btn">复制代码</span></code></pre><p></p></div><p>然后我们创建一个reducer.js文件，写我们的reducer</p><p></p><p></p><p></p><pre code-lang="javascript" class="hljs javascript"><code class="hljs javascript copyable" lang="javascript"><span class="hljs-comment">//reducer.js</span>
<span class="hljs-keyword">const</span> initialState = {    
    <span class="hljs-attr">count</span>: <span class="hljs-number">0</span>
}
<span class="hljs-keyword">export</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">reducer</span>(<span class="hljs-params">state = initialState, action</span>) </span>{    
    <span class="hljs-keyword">switch</span>(action.type) {      
        <span class="hljs-keyword">case</span> <span class="hljs-string">'plus'</span>:        
        <span class="hljs-keyword">return</span> {            
            ...state,                    
            <span class="hljs-attr">count</span>: state.count + <span class="hljs-number">1</span>        
        }      
        <span class="hljs-keyword">case</span> <span class="hljs-string">'subtract'</span>:        
        <span class="hljs-keyword">return</span> {            
            ...state,            
            <span class="hljs-attr">count</span>: state.count - <span class="hljs-number">1</span>        
        }      
        <span class="hljs-keyword">default</span>:        
        <span class="hljs-keyword">return</span> initialState    
    }
}<span class="copy-code-btn">复制代码</span></code></pre><p></p><p>代码写到这里，我们可以验证一下<code>getState</code>和<code>dispatch</code>：</p><p></p><p></p><p></p><pre code-lang="javascript" class="hljs javascript"><code class="hljs javascript copyable" lang="javascript"><span class="hljs-comment">//store.js</span>
<span class="hljs-keyword">import</span> { reducer } <span class="hljs-keyword">from</span> <span class="hljs-string">'./reducer'</span>
<span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> createStore = <span class="hljs-function">(<span class="hljs-params">reducer</span>) =&gt;</span> {    
    <span class="hljs-keyword">let</span> currentState = {}        
    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getState</span>(<span class="hljs-params"></span>) </span>{                
        <span class="hljs-keyword">return</span> currentState        
    }        
    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dispatch</span>(<span class="hljs-params">action</span>) </span>{                
        currentState = reducer(currentState, action)  
    }        
    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">subscribe</span>(<span class="hljs-params"></span>) </span>{}        
    <span class="hljs-keyword">return</span> { getState, subscribe, dispatch }
}

<span class="hljs-keyword">const</span> store = createStore(reducer)  <span class="hljs-comment">//创建store</span>
store.dispatch({ <span class="hljs-attr">type</span>: <span class="hljs-string">'plus'</span> })    <span class="hljs-comment">//执行加法操作,给count加1</span>
<span class="hljs-built_in">console</span>.log(store.getState())       <span class="hljs-comment">//获取state</span><span class="copy-code-btn">复制代码</span></code></pre><p></p><p><br></p><p>运行代码，我们会发现，打印得到的state是：{&nbsp;count: NaN }，这是由于store里初始数据为空，state.count + 1实际上是underfind+1，输出了NaN，所以我们得先进行store数据初始化，我们在执行dispatch({ type: 'plus' })之前先进行一次初始化的dispatch，这个dispatch的actionType可以随便填，只要不和已有的type重复，让reducer里的switch能走到default去初始化store就行了：</p><p></p><p></p><p></p><pre code-lang="javascript" class="hljs javascript"><code class="hljs javascript copyable" lang="javascript"><span class="hljs-keyword">import</span> { reducer } <span class="hljs-keyword">from</span> <span class="hljs-string">'./reducer'</span>
<span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> createStore = <span class="hljs-function">(<span class="hljs-params">reducer</span>) =&gt;</span> {        
    <span class="hljs-keyword">let</span> currentState = {}        
    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getState</span>(<span class="hljs-params"></span>) </span>{                
        <span class="hljs-keyword">return</span> currentState        
    }        
    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dispatch</span>(<span class="hljs-params">action</span>) </span>{                
        currentState = reducer(currentState, action)        
    }        
    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">subscribe</span>(<span class="hljs-params"></span>) </span>{}    
    dispatch({ <span class="hljs-attr">type</span>: <span class="hljs-string">'@@REDUX_INIT'</span> })  <span class="hljs-comment">//初始化store数据        </span>
    <span class="hljs-keyword">return</span> { getState, subscribe, dispatch }
}

<span class="hljs-keyword">const</span> store = createStore(reducer)      <span class="hljs-comment">//创建store</span>
store.dispatch({ <span class="hljs-attr">type</span>: <span class="hljs-string">'plus'</span> })        <span class="hljs-comment">//执行加法操作,给count加1</span>
<span class="hljs-built_in">console</span>.log(store.getState())           <span class="hljs-comment">//获取state</span><span class="copy-code-btn">复制代码</span></code></pre><p></p><p><br></p><p>运行代码，我们就能打印到的正确的state：{ count: 1 }</p><p><img class="lazyload inited loaded" data-src="https://user-gold-cdn.xitu.io/2019/12/12/16ef781577deb645?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" data-width="658" data-height="454" src="./8k字 _ Redux_react-redux_redux中间件设计实现剖析 - 掘金_files/16ef781577deb645"><br></p><h3 data-id="heading-3">3.subscribe实现</h3><p>尽管我们已经能够存取公用state，但store的变化并不会直接引起视图的更新，我们需要监听store的变化，这里我们应用一个设计模式——观察者模式，观察者模式被广泛运用于监听事件实现（有些地方写的是发布订阅模式，但我个人认为这里称为观察者模式更准确，有关观察者和发布订阅的区别，讨论有很多，读者可以搜一下）</p><p>所谓观察者模式，概念也很简单：观察者监听被观察者的变化，被观察者发生改变时，通知所有的观察者。那么我们如何实现这种监听-通知的功能呢，为了照顾还不熟悉观察者模式实现的同学，我们先跳出redux，写一段简单的观察者模式实现代码：</p><p></p><p></p><p></p><pre code-lang="javascript" class="hljs javascript"><code class="hljs javascript copyable" lang="javascript"><span class="hljs-comment">//观察者</span>
<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Observer</span> </span>{    
    <span class="hljs-keyword">constructor</span> (fn) {      
        <span class="hljs-keyword">this</span>.update = fn    
    }
}
<span class="hljs-comment">//被观察者</span>
<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Subject</span> </span>{    
    <span class="hljs-keyword">constructor</span>() {        
        <span class="hljs-keyword">this</span>.observers = []          <span class="hljs-comment">//观察者队列    </span>
    }    
    addObserver(observer) {          
        <span class="hljs-keyword">this</span>.observers.push(observer)<span class="hljs-comment">//往观察者队列添加观察者    </span>
    }    
    notify() {                       <span class="hljs-comment">//通知所有观察者,实际上是把观察者的update()都执行了一遍       </span>
        <span class="hljs-keyword">this</span>.observers.forEach(<span class="hljs-function"><span class="hljs-params">observer</span> =&gt;</span> {        
            observer.update()            <span class="hljs-comment">//依次取出观察者,并执行观察者的update方法        </span>
        })    
    }
}

<span class="hljs-keyword">var</span> subject = <span class="hljs-keyword">new</span> Subject()       <span class="hljs-comment">//被观察者</span>
<span class="hljs-keyword">const</span> update = <span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> {<span class="hljs-built_in">console</span>.log(<span class="hljs-string">'被观察者发出通知'</span>)}  <span class="hljs-comment">//收到广播时要执行的方法</span>
<span class="hljs-keyword">var</span> ob1 = <span class="hljs-keyword">new</span> Observer(update)    <span class="hljs-comment">//观察者1</span>
<span class="hljs-keyword">var</span> ob2 = <span class="hljs-keyword">new</span> Observer(update)    <span class="hljs-comment">//观察者2</span>
subject.addObserver(ob1)          <span class="hljs-comment">//观察者1订阅subject的通知</span>
subject.addObserver(ob2)          <span class="hljs-comment">//观察者2订阅subject的通知</span>
subject.notify()                  <span class="hljs-comment">//发出广播,执行所有观察者的update方法</span><span class="copy-code-btn">复制代码</span></code></pre><p>解释一下上面的代码：观察者对象有一个<code>update</code>方法(收到通知后要执行的方法)，我们想要在被观察者发出通知后，执行该方法；被观察者拥有<code>addObserver</code>和<code>notify</code>方法，addObserver用于收集观察者，其实就是将观察者们的update方法加入一个队列，而当notify被执行的时候，就从队列中取出所有观察者的update方法并执行，这样就实现了通知的功能。我们redux的监听-通知功能也将按照这种实现思路来实现subscribe：</p><p>有了上面观察者模式的例子，subscribe的实现应该很好理解，这里把dispatch和notify做了合并，我们每次dispatch，都进行广播，通知组件store的状态发生了变更。<br></p><p></p><p></p><p></p><pre code-lang="javascript" class="hljs javascript"><code class="hljs javascript copyable" lang="javascript"><span class="hljs-keyword">import</span> { reducer } <span class="hljs-keyword">from</span> <span class="hljs-string">'./reducer'</span>
<span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> createStore = <span class="hljs-function">(<span class="hljs-params">reducer</span>) =&gt;</span> {        
    <span class="hljs-keyword">let</span> currentState = {}        
    <span class="hljs-keyword">let</span> observers = []             <span class="hljs-comment">//观察者队列        </span>
    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getState</span>(<span class="hljs-params"></span>) </span>{                
        <span class="hljs-keyword">return</span> currentState        
    }        
    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dispatch</span>(<span class="hljs-params">action</span>) </span>{                
        currentState = reducer(currentState, action)                
        observers.forEach(<span class="hljs-function"><span class="hljs-params">fn</span> =&gt;</span> fn())        
    }        
    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">subscribe</span>(<span class="hljs-params">fn</span>) </span>{                
        observers.push(fn)        
    }        
    dispatch({ <span class="hljs-attr">type</span>: <span class="hljs-string">'@@REDUX_INIT'</span> })  <span class="hljs-comment">//初始化store数据        </span>
    <span class="hljs-keyword">return</span> { getState, subscribe, dispatch }
}<span class="copy-code-btn">复制代码</span></code></pre><p></p><p><br></p><p>我们来试一下这个subscribe（这里就不创建组件再引入store再subscribe了，直接在store.js中模拟一下两个组件使用subscribe订阅store变化）：</p><p></p><p></p><p></p><pre code-lang="javascript" class="hljs javascript"><code class="hljs javascript copyable" lang="javascript"><span class="hljs-keyword">import</span> { reducer } <span class="hljs-keyword">from</span> <span class="hljs-string">'./reducer'</span>
<span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> createStore = <span class="hljs-function">(<span class="hljs-params">reducer</span>) =&gt;</span> {        
    <span class="hljs-keyword">let</span> currentState = {}        
    <span class="hljs-keyword">let</span> observers = []             <span class="hljs-comment">//观察者队列        </span>
    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getState</span>(<span class="hljs-params"></span>) </span>{                
        <span class="hljs-keyword">return</span> currentState        
    }        
    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dispatch</span>(<span class="hljs-params">action</span>) </span>{                
        currentState = reducer(currentState, action)                
        observers.forEach(<span class="hljs-function"><span class="hljs-params">fn</span> =&gt;</span> fn())        
    }        
    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">subscribe</span>(<span class="hljs-params">fn</span>) </span>{                
        observers.push(fn)        
    }            
    dispatch({ <span class="hljs-attr">type</span>: <span class="hljs-string">'@@REDUX_INIT'</span> })  <span class="hljs-comment">//初始化store数据        </span>
    <span class="hljs-keyword">return</span> { getState, subscribe, dispatch }
}

<span class="hljs-keyword">const</span> store = createStore(reducer)       <span class="hljs-comment">//创建store</span>
store.subscribe(<span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> { <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'组件1收到store的通知'</span>) })
store.subscribe(<span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> { <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'组件2收到store的通知'</span>) })
store.dispatch({ <span class="hljs-attr">type</span>: <span class="hljs-string">'plus'</span> })         <span class="hljs-comment">//执行dispatch，触发store的通知</span><span class="copy-code-btn">复制代码</span></code></pre><p></p><p><br></p><p>控制台成功输出store.subscribe()传入的回调的执行结果：</p><p><img class="lazyload inited loaded" data-src="https://user-gold-cdn.xitu.io/2019/12/12/16ef7aa713fe4f26?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" data-width="791" data-height="479" src="./8k字 _ Redux_react-redux_redux中间件设计实现剖析 - 掘金_files/16ef7aa713fe4f26"><br></p><p>到这里，一个简单的redux就已经完成，在redux真正的源码中还加入了入参校验等细节，但总体思路和上面的基本相同。</p><p>我们已经可以在组件里引入store进行状态的存取以及订阅store变化，数一下，正好十行代码(｀∀´)Ψ。但是我们看一眼右边的进度条，就会发现事情并不简单，篇幅到这里才过了三分之一。尽管说我们已经实现了redux，但coder们并不满足于此，我们在使用store时，需要在每个组件中引入store，然后getState，然后dispatch，还有subscribe，代码比较冗余，我们需要合并一些重复操作，而其中一种简化合并的方案，就是我们熟悉的<b>react-redux</b>。</p><p><br></p><h2 data-id="heading-4">二. react-redux的实现</h2><p>上文我们说到，一个组件如果想从store存取公用状态，需要进行四步操作：import引入store、getState获取状态、dispatch修改状态、subscribe订阅更新，代码相对冗余，我们想要合并一些重复的操作，而react-redux就提供了一种合并操作的方案：react-redux提供<code>Provider</code>和<code>connect</code>两个API，Provider将store放进this.context里，省去了import这一步，connect将getState、dispatch合并进了this.props，并自动订阅更新，简化了另外三步，下面我们来看一下如何实现这两个API：</p><p><br></p><h3 data-id="heading-5">1. Provider实现</h3><p>我们先从比较简单的<code>Provider</code>开始实现，Provider是一个组件，接收store并放进全局的<code>context</code>对象，至于为什么要放进context，后面我们实现connect的时候就会明白。下面我们创建Provider组件，并把store放进context里，使用context这个API时有一些固定写法(有关context的用法可以查看<a href="https://juejin.im/post/5a90e0545188257a63112977" target="_blank" rel="">这篇文章</a>)</p><p></p><p></p><p></p><pre code-lang="javascript" class="hljs javascript"><code class="hljs javascript copyable" lang="javascript"><span class="hljs-keyword">import</span> React <span class="hljs-keyword">from</span> <span class="hljs-string">'react'</span>
<span class="hljs-keyword">import</span> PropTypes <span class="hljs-keyword">from</span> <span class="hljs-string">'prop-types'</span>
<span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Provider</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">React</span>.<span class="hljs-title">Component</span> </span>{  
    <span class="hljs-comment">// 需要声明静态属性childContextTypes来指定context对象的属性,是context的固定写法  </span>
    <span class="hljs-keyword">static</span> childContextTypes = {    
        <span class="hljs-attr">store</span>: PropTypes.object  
    } 

    <span class="hljs-comment">// 实现getChildContext方法,返回context对象,也是固定写法  </span>
    getChildContext() {    
        <span class="hljs-keyword">return</span> { <span class="hljs-attr">store</span>: <span class="hljs-keyword">this</span>.store }  
    }  

    <span class="hljs-keyword">constructor</span>(props, context) {    
        <span class="hljs-keyword">super</span>(props, context)    
        <span class="hljs-keyword">this</span>.store = props.store  
    }  

    <span class="hljs-comment">// 渲染被Provider包裹的组件  </span>
    render() {    
        <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.props.children  
    }
}<span class="copy-code-btn">复制代码</span></code></pre><p></p><p>完成Provider后，我们就能在组件中通过this.context.store这样的形式取到store，不需要再单独import store。</p><p><br></p><h3 data-id="heading-6">2. connect实现</h3><p>下面我们来思考一下如何实现<code>connect</code>，我们先回顾一下connect的使用方法：</p><p></p><p></p><p></p><pre code-lang="bash" class="hljs bash"><code class="hljs bash copyable" lang="bash">connect(mapStateToProps, mapDispatchToProps)(App)<span class="copy-code-btn">复制代码</span></code></pre><p></p><p>我们已经知道，connect接收mapStateToProps、mapDispatchToProps两个方法，然后返回一个高阶函数，这个高阶函数接收一个组件，返回一个高阶组件（其实就是给传入的组件增加一些属性和功能）connect根据传入的map，将state和dispatch(action)挂载子组件的props上，我们直接放出connect的实现代码，寥寥几行，并不复杂：<br></p><p></p><p></p><p></p><pre code-lang="javascript" class="hljs javascript"><code class="hljs javascript copyable" lang="javascript"><span class="hljs-keyword">export</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">connect</span>(<span class="hljs-params">mapStateToProps, mapDispatchToProps</span>) </span>{    
    <span class="hljs-keyword">return</span> <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">Component</span>) </span>{      
        <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Connect</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">React</span>.<span class="hljs-title">Component</span> </span>{        
            componentDidMount() {          
                <span class="hljs-comment">//从context获取store并订阅更新          </span>
                <span class="hljs-keyword">this</span>.context.store.subscribe(<span class="hljs-keyword">this</span>.handleStoreChange.bind(<span class="hljs-keyword">this</span>));        
            }       
            handleStoreChange() {          
                <span class="hljs-comment">// 触发更新          </span>
                <span class="hljs-comment">// 触发的方法有多种,这里为了简洁起见,直接forceUpdate强制更新,读者也可以通过setState来触发子组件更新          </span>
                <span class="hljs-keyword">this</span>.forceUpdate()        
            }        
            render() {          
                <span class="hljs-keyword">return</span> (            
                    <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">Component</span>              
                        // 传入该组件的<span class="hljs-attr">props</span>,需要由<span class="hljs-attr">connect</span>这个高阶组件原样传回原组件              
                        { <span class="hljs-attr">...this.props</span> }              
                        // 根据<span class="hljs-attr">mapStateToProps</span>把<span class="hljs-attr">state</span>挂到<span class="hljs-attr">this.props</span>上              
                        { <span class="hljs-attr">...mapStateToProps</span>(<span class="hljs-attr">this.context.store.getState</span>()) }               
                        // 根据<span class="hljs-attr">mapDispatchToProps</span>把<span class="hljs-attr">dispatch</span>(<span class="hljs-attr">action</span>)挂到<span class="hljs-attr">this.props</span>上              
                        { <span class="hljs-attr">...mapDispatchToProps</span>(<span class="hljs-attr">this.context.store.dispatch</span>) }                 
                    /&gt;</span>              
                )        
            }      
        }      
        //接收context的固定写法      
        Connect.contextTypes = {        
            store: PropTypes.object      
        }      
        return Connect    
    }
}</span><span class="copy-code-btn">复制代码</span></code></pre><p></p><p>写完了connect的代码，我们有两点需要解释一下：</p><p>1. Provider的意义：我们审视一下connect的代码，其实context不过是给connect提供了获取store的途径，我们在connect中直接import store完全可以取代context。那么Provider存在的意义是什么，其实笔者也想过一阵子，后来才想起...上面这个connect是自己写的，当然可以直接import store，但react-redux的connect是封装的，对外只提供api，所以需要让Provider传入store。</p><p>2. connect中的装饰器模式：回顾一下connect的调用方式：<code>connect(mapStateToProps, mapDispatchToProps)(App)</code>其实connect完全可以把App跟着mapStateToProps一起传进去，看似没必要return一个函数再传入App，为什么react-redux要这样设计，react-redux作为一个被广泛使用的模块，其设计肯定有它的深意。</p><p>其实connect这种设计，是<b>装饰器模式</b>的实现，所谓装饰器模式，简单地说就是对类的一个包装，动态地拓展类的功能。connect以及React中的高阶组件（HoC）都是这一模式的实现。除此之外，也有更直接的原因：这种设计能够兼容ES7的<code>装饰器(Decorator)</code>，使得我们可以用@connect这样的方式来简化代码，有关@connect的使用可以看这篇<a href="https://www.jianshu.com/p/d07ccef9f4f0" target="_blank" rel="nofollow noopener noreferrer">&lt;react-redux中connect的装饰器用法&gt;</a>：</p><p></p><p></p><p></p><pre code-lang="bash" class="hljs bash"><code class="hljs bash copyable" lang="bash">//普通connect使用
class App extends React.Component{
    <span class="hljs-function"><span class="hljs-title">render</span></span>(){
        <span class="hljs-built_in">return</span> &lt;div&gt;hello&lt;/div&gt;
    }
}
<span class="hljs-keyword">function</span> mapStateToProps(state){
    <span class="hljs-built_in">return</span> state.main
}
<span class="hljs-keyword">function</span> mapDispatchToProps(dispatch){
    <span class="hljs-built_in">return</span> <span class="hljs-built_in">bind</span>ActionCreators(action,dispatch)
}
<span class="hljs-built_in">export</span> default connect(mapStateToProps,mapDispatchToProps)(App)<span class="copy-code-btn">复制代码</span></code></pre><p></p><pre code-lang="bash" class="hljs bash"><code class="hljs bash copyable" lang="bash">//使用装饰器简化
@connect(
  state=&gt;state.main,
  dispatch=&gt;<span class="hljs-built_in">bind</span>ActionCreators(action,dispatch)
)
class App extends React.Component{
    <span class="hljs-function"><span class="hljs-title">render</span></span>(){
        <span class="hljs-built_in">return</span> &lt;div&gt;hello&lt;/div&gt;
    }
}<span class="copy-code-btn">复制代码</span></code></pre><p></p><p><br></p><p>写完了react-redux，我们可以写个demo来测试一下：使用<code>create-react-app</code>创建一个项目，删掉无用的文件，并创建store.js、reducer.js、react-redux.js来分别写我们redux和react-redux的代码，index.js是项目的入口文件，在App.js中我们简单的写一个计数器，点击按钮就派发一个dispatch，让store中的count加一，页面上显示这个count。最后文件目录和代码如下：</p><p><img class="lazyload inited loaded" data-src="https://user-gold-cdn.xitu.io/2019/12/20/16f21fb249ffba11?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" data-width="1066" data-height="476" src="./8k字 _ Redux_react-redux_redux中间件设计实现剖析 - 掘金_files/16f21fb249ffba11"><br></p><p></p><p></p><p></p><pre code-lang="javascript" class="hljs javascript"><code class="hljs javascript copyable" lang="javascript"><span class="hljs-comment">// store.js</span>
<span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> createStore = <span class="hljs-function">(<span class="hljs-params">reducer</span>) =&gt;</span> {    
    <span class="hljs-keyword">let</span> currentState = {}    
    <span class="hljs-keyword">let</span> observers = []             <span class="hljs-comment">//观察者队列    </span>
    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getState</span>(<span class="hljs-params"></span>) </span>{        
        <span class="hljs-keyword">return</span> currentState    
    }    
    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dispatch</span>(<span class="hljs-params">action</span>) </span>{        
        currentState = reducer(currentState, action)       
        observers.forEach(<span class="hljs-function"><span class="hljs-params">fn</span> =&gt;</span> fn())    
    }    
    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">subscribe</span>(<span class="hljs-params">fn</span>) </span>{        
        observers.push(fn)    
    }    
    dispatch({ <span class="hljs-attr">type</span>: <span class="hljs-string">'@@REDUX_INIT'</span> }) <span class="hljs-comment">//初始化store数据    </span>
    <span class="hljs-keyword">return</span> { getState, subscribe, dispatch }
}<span class="copy-code-btn">复制代码</span></code></pre><p></p><p></p><p></p><p></p><pre code-lang="javascript" class="hljs javascript"><code class="hljs javascript copyable" lang="javascript"><span class="hljs-comment">//reducer.js</span>
<span class="hljs-keyword">const</span> initialState = {    
    <span class="hljs-attr">count</span>: <span class="hljs-number">0</span>
}

<span class="hljs-keyword">export</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">reducer</span>(<span class="hljs-params">state = initialState, action</span>) </span>{    
    <span class="hljs-keyword">switch</span>(action.type) {      
        <span class="hljs-keyword">case</span> <span class="hljs-string">'plus'</span>:        
        <span class="hljs-keyword">return</span> {            
            ...state,            
            <span class="hljs-attr">count</span>: state.count + <span class="hljs-number">1</span>        
        }      
        <span class="hljs-keyword">case</span> <span class="hljs-string">'subtract'</span>:        
        <span class="hljs-keyword">return</span> {            
            ...state,            
            <span class="hljs-attr">count</span>: state.count - <span class="hljs-number">1</span>        
        }      
        <span class="hljs-keyword">default</span>:        
        <span class="hljs-keyword">return</span> initialState    
    }
}<span class="copy-code-btn">复制代码</span></code></pre><p></p><p></p><p></p><p></p><pre code-lang="javascript" class="hljs javascript"><code class="hljs javascript copyable" lang="javascript"><span class="hljs-comment">//react-redux.js</span>
<span class="hljs-keyword">import</span> React <span class="hljs-keyword">from</span> <span class="hljs-string">'react'</span>
<span class="hljs-keyword">import</span> PropTypes <span class="hljs-keyword">from</span> <span class="hljs-string">'prop-types'</span>
<span class="hljs-keyword">export</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Provider</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">React</span>.<span class="hljs-title">Component</span> </span>{  
    <span class="hljs-comment">// 需要声明静态属性childContextTypes来指定context对象的属性,是context的固定写法  </span>
    <span class="hljs-keyword">static</span> childContextTypes = {    
        <span class="hljs-attr">store</span>: PropTypes.object  
    }  

    <span class="hljs-comment">// 实现getChildContext方法,返回context对象,也是固定写法  </span>
    getChildContext() {    
        <span class="hljs-keyword">return</span> { <span class="hljs-attr">store</span>: <span class="hljs-keyword">this</span>.store }  
    }  

    <span class="hljs-keyword">constructor</span>(props, context) {    
        <span class="hljs-keyword">super</span>(props, context)    
        <span class="hljs-keyword">this</span>.store = props.store  
    }  

    <span class="hljs-comment">// 渲染被Provider包裹的组件  </span>
    render() {    
        <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.props.children  
    }
}

<span class="hljs-keyword">export</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">connect</span>(<span class="hljs-params">mapStateToProps, mapDispatchToProps</span>) </span>{    
    <span class="hljs-keyword">return</span> <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">Component</span>) </span>{      
    <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Connect</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">React</span>.<span class="hljs-title">Component</span> </span>{        
        componentDidMount() {          <span class="hljs-comment">//从context获取store并订阅更新          </span>
            <span class="hljs-keyword">this</span>.context.store.subscribe(<span class="hljs-keyword">this</span>.handleStoreChange.bind(<span class="hljs-keyword">this</span>));        
        }        
        handleStoreChange() {          
            <span class="hljs-comment">// 触发更新          </span>
            <span class="hljs-comment">// 触发的方法有多种,这里为了简洁起见,直接forceUpdate强制更新,读者也可以通过setState来触发子组件更新          </span>
            <span class="hljs-keyword">this</span>.forceUpdate()        
        }        
        render() {          
            <span class="hljs-keyword">return</span> (            
                <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">Component</span>              
                    // 传入该组件的<span class="hljs-attr">props</span>,需要由<span class="hljs-attr">connect</span>这个高阶组件原样传回原组件              
                    { <span class="hljs-attr">...this.props</span> }              
                    // 根据<span class="hljs-attr">mapStateToProps</span>把<span class="hljs-attr">state</span>挂到<span class="hljs-attr">this.props</span>上              
                    { <span class="hljs-attr">...mapStateToProps</span>(<span class="hljs-attr">this.context.store.getState</span>()) }               
                    // 根据<span class="hljs-attr">mapDispatchToProps</span>把<span class="hljs-attr">dispatch</span>(<span class="hljs-attr">action</span>)挂到<span class="hljs-attr">this.props</span>上              
                    { <span class="hljs-attr">...mapDispatchToProps</span>(<span class="hljs-attr">this.context.store.dispatch</span>) }             
                /&gt;</span>          
            )        
        }      
    }      

    //接收context的固定写法      
    Connect.contextTypes = {        
        store: PropTypes.object      
    }      
    return Connect    
    }
}  </span><span class="copy-code-btn">复制代码</span></code></pre><p></p><p></p><p></p><p></p><pre code-lang="javascript" class="hljs javascript"><code class="hljs javascript copyable" lang="javascript"><span class="hljs-comment">//index.js</span>
<span class="hljs-keyword">import</span> React <span class="hljs-keyword">from</span> <span class="hljs-string">'react'</span>
<span class="hljs-keyword">import</span> ReactDOM <span class="hljs-keyword">from</span> <span class="hljs-string">'react-dom'</span>
<span class="hljs-keyword">import</span> App <span class="hljs-keyword">from</span> <span class="hljs-string">'./App'</span>
<span class="hljs-keyword">import</span> { Provider } <span class="hljs-keyword">from</span> <span class="hljs-string">'./react-redux'</span>
<span class="hljs-keyword">import</span> { createStore } <span class="hljs-keyword">from</span> <span class="hljs-string">'./store'</span>
<span class="hljs-keyword">import</span> { reducer } <span class="hljs-keyword">from</span> <span class="hljs-string">'./reducer'</span>

ReactDOM.render(   
    <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">Provider</span> <span class="hljs-attr">store</span>=<span class="hljs-string">{createStore(reducer)}</span>&gt;</span>        
        <span class="hljs-tag">&lt;<span class="hljs-name">App</span> /&gt;</span>    
    <span class="hljs-tag">&lt;/<span class="hljs-name">Provider</span>&gt;</span></span>,     
    <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">'root'</span>)
);<span class="copy-code-btn">复制代码</span></code></pre><p></p><p></p><p></p><p></p><pre code-lang="javascript" class="hljs javascript"><code class="hljs javascript copyable" lang="javascript"><span class="hljs-comment">//App.js</span>
<span class="hljs-keyword">import</span> React <span class="hljs-keyword">from</span> <span class="hljs-string">'react'</span>
<span class="hljs-keyword">import</span> { connect } <span class="hljs-keyword">from</span> <span class="hljs-string">'./react-redux'</span>

<span class="hljs-keyword">const</span> addCountAction = {  
    <span class="hljs-attr">type</span>: <span class="hljs-string">'plus'</span>
}

<span class="hljs-keyword">const</span> mapStateToProps = <span class="hljs-function"><span class="hljs-params">state</span> =&gt;</span> {  
    <span class="hljs-keyword">return</span> {      
        <span class="hljs-attr">count</span>: state.count  
    }
}

<span class="hljs-keyword">const</span> mapDispatchToProps = <span class="hljs-function"><span class="hljs-params">dispatch</span> =&gt;</span> {  
    <span class="hljs-keyword">return</span> {      
        <span class="hljs-attr">addCount</span>: <span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> {          
            dispatch(addCountAction)      
        }  
    }
}

<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">App</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">React</span>.<span class="hljs-title">Component</span> </span>{  
    render() {    
        <span class="hljs-keyword">return</span> (      
            <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">className</span>=<span class="hljs-string">"App"</span>&gt;</span>        
                { this.props.count }        
                <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">onClick</span>=<span class="hljs-string">{</span> () =&gt;</span> this.props.addCount() }&gt;增加<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>      
            <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span>    
        );  
    }
}

<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> connect(mapStateToProps, mapDispatchToProps)(App)<span class="copy-code-btn">复制代码</span></code></pre><p></p><p><br></p><p>运行项目，点击增加按钮，能够正确的计数，OK大成功，我们整个redux、react-redux的流程就走通了</p><p><img class="lazyload inited loaded" data-src="https://user-gold-cdn.xitu.io/2019/12/20/16f220600b322f69?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" data-width="1000" data-height="576" src="./8k字 _ Redux_react-redux_redux中间件设计实现剖析 - 掘金_files/16f220600b322f69"><br></p><p><br></p><h2 data-id="heading-7">三. redux Middleware实现</h2><p>上面redux和react-redux的实现都比较简单，下面我们来分析实现稍困难一些的<b>redux中间件</b>。所谓中间件，我们可以理解为拦截器，用于对某些过程进行拦截和处理，且中间件之间能够串联使用。在redux中，我们中间件拦截的是dispatch提交到reducer这个过程，从而增强dispatch的功能。</p><p><img class="lazyload inited loaded" data-src="https://user-gold-cdn.xitu.io/2019/12/27/16f44c0ad62d8656?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" data-width="1280" data-height="365" src="./8k字 _ Redux_react-redux_redux中间件设计实现剖析 - 掘金_files/16f44c0ad62d8656"></p><ol>
</ol><p>我查阅了很多redux中间件相关的资料，但最后发现没有一篇写的比<a href="https://redux.js.org/advanced/middleware/" target="_blank" rel="nofollow noopener noreferrer">官方文档</a>清晰，文档从中间件的需求到设计，从概念到实现，每一步都有清晰生动的讲解。下面我们就和文档一样，以一个记录日志的中间件为例，一步一步分析redux中间件的设计实现。</p><p>我们思考一下，如果我们想在每次dispatch之后，打印一下store的内容，我们会如何实现呢：</p><h3 data-id="heading-8">1. 在每次dispatch之后手动打印store的内容</h3><p></p><p></p><p></p><pre code-lang="javascript" class="hljs javascript"><code class="hljs javascript copyable" lang="javascript">store.dispatch({ <span class="hljs-attr">type</span>: <span class="hljs-string">'plus'</span> })
<span class="hljs-built_in">console</span>.log(<span class="hljs-string">'next state'</span>, store.getState())<span class="copy-code-btn">复制代码</span></code></pre><p></p><p>这是最直接的方法，当然我们不可能在项目里每个dispatch后面都粘贴一段打印日志的代码，我们至少要把这部分功能提取出来。</p><p><br></p><h3 data-id="heading-9">2. 封装dispatch</h3><p></p><p></p><p></p><pre code-lang="javascript" class="hljs javascript"><code class="hljs javascript copyable" lang="javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dispatchAndLog</span>(<span class="hljs-params">store, action</span>) </span>{    
    store.dispatch(action)    
    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'next state'</span>, store.getState())
}<span class="copy-code-btn">复制代码</span></code></pre><p></p><p>我们可以重新封装一个公用的新的dispatch方法，这样可以减少一部分重复的代码。不过每次使用这个新的dispatch都得从外部引一下，还是比较麻烦。</p><p><br></p><h3 data-id="heading-10">3. 替换dispatch</h3><p></p><p></p><p></p><pre code-lang="javascript" class="hljs javascript"><code class="hljs javascript copyable" lang="javascript"><span class="hljs-keyword">let</span> next = store.dispatch
store.dispatch = <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dispatchAndLog</span>(<span class="hljs-params">action</span>) </span>{  
    <span class="hljs-keyword">let</span> result = next(action)  
    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'next state'</span>, store.getState())  
    <span class="hljs-keyword">return</span> result
}<span class="copy-code-btn">复制代码</span></code></pre><p></p><p>如果我们直接把dispatch给替换，这样每次使用的时候不就不需要再从外部引用一次了吗？对于单纯打印日志来说，这样就足够了，但是如果我们还有一个监控dispatch错误的需求呢，我们固然可以在打印日志的代码后面加上捕获错误的代码，但随着功能模块的增多，代码量会迅速膨胀，以后这个中间件就没法维护了，我们希望不同的功能是<b>独立的可拔插的</b>模块。</p><p><br></p><h3 data-id="heading-11">4. 模块化</h3><p></p><p></p><p></p><pre code-lang="javascript" class="hljs javascript"><code class="hljs javascript copyable" lang="javascript"><span class="hljs-comment">// 打印日志中间件</span>
<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">patchStoreToAddLogging</span>(<span class="hljs-params">store</span>) </span>{    
    <span class="hljs-keyword">let</span> next = store.dispatch    <span class="hljs-comment">//此处也可以写成匿名函数    </span>
    store.dispatch = <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dispatchAndLog</span>(<span class="hljs-params">action</span>) </span>{      
        <span class="hljs-keyword">let</span> result = next(action)      
        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'next state'</span>, store.getState())      
        <span class="hljs-keyword">return</span> result    
    }
}  

<span class="hljs-comment">// 监控错误中间件</span>
<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">patchStoreToAddCrashReporting</span>(<span class="hljs-params">store</span>) </span>{    
    <span class="hljs-comment">//这里取到的dispatch已经是被上一个中间件包装过的dispatch, 从而实现中间件串联    </span>
    <span class="hljs-keyword">let</span> next = store.dispatch    
    store.dispatch = <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dispatchAndReportErrors</span>(<span class="hljs-params">action</span>) </span>{        
        <span class="hljs-keyword">try</span> {            
            <span class="hljs-keyword">return</span> next(action)        
        } <span class="hljs-keyword">catch</span> (err) {            
            <span class="hljs-built_in">console</span>.error(<span class="hljs-string">'捕获一个异常!'</span>, err)            
            <span class="hljs-keyword">throw</span> err        
        }    
    }
}<span class="copy-code-btn">复制代码</span></code></pre><p></p><p>我们把不同功能的模块拆分成不同的方法，通过在方法内<b>获取上一个中间件包装过的store.dispatch实现链式调用</b>。然后我们就能通过调用这些中间件方法，分别使用、组合这些中间件。</p><p></p><p></p><p></p><pre code-lang="javascript" class="hljs javascript"><code class="hljs javascript copyable" lang="javascript">patchStoreToAddLogging(store)
patchStoreToAddCrashReporting(store)<span class="copy-code-btn">复制代码</span></code></pre><p></p><p><span>到这里我们基本实现了可组合、拔插的中间件，但我们仍然可以把代码再写好看一点。我们注意到，我们当前写的中间件方法都是先获取dispatch，然后在方法内替换dispatch，这部分重复代码我们可以再稍微简化一下：我们不在方法内替换dispatch，而是返回一个新的dispatch，然后让循环来进行每一步的替换。</span><br></p><p><br></p><h3 data-id="heading-12">5.&nbsp;applyMiddleware</h3><p>改造一下中间件，使其返回新的dispatch而不是替换原dispatch</p><p></p><p></p><p></p><pre code-lang="javascript" class="hljs javascript"><code class="hljs javascript copyable" lang="javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">logger</span>(<span class="hljs-params">store</span>) </span>{    
    <span class="hljs-keyword">let</span> next = store.dispatch     
 
    <span class="hljs-comment">// 我们之前的做法(在方法内直接替换dispatch):    </span>
    <span class="hljs-comment">// store.dispatch = function dispatchAndLog(action) {    </span>
    <span class="hljs-comment">//         ...    </span>
    <span class="hljs-comment">// }    </span>
  
    <span class="hljs-keyword">return</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dispatchAndLog</span>(<span class="hljs-params">action</span>) </span>{        
        <span class="hljs-keyword">let</span> result = next(action)        
        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'next state'</span>, store.getState())        
        <span class="hljs-keyword">return</span> result    
    }
}<span class="copy-code-btn">复制代码</span></code></pre><p></p><p>在Redux中增加一个辅助方法<span>applyMiddleware</span><span>，用于添加中间件</span></p><p></p><p></p><p></p><pre code-lang="javascript" class="hljs javascript"><code class="hljs javascript copyable" lang="javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">applyMiddleware</span>(<span class="hljs-params">store, middlewares</span>) </span>{    
    middlewares = [ ...middlewares ]    <span class="hljs-comment">//浅拷贝数组, 避免下面reserve()影响原数组    </span>
    middlewares.reverse()               <span class="hljs-comment">//由于循环替换dispatch时,前面的中间件在最里层,因此需要翻转数组才能保证中间件的调用顺序      </span>
    <span class="hljs-comment">// 循环替换dispatch   </span>
    middlewares.forEach(<span class="hljs-function"><span class="hljs-params">middleware</span> =&gt;</span>      
        store.dispatch = middleware(store)    
    )
}<span class="copy-code-btn">复制代码</span></code></pre><p></p><p>然后我们就能以这种形式增加中间件了：</p><p></p><p></p><p></p><pre code-lang="javascript" class="hljs javascript"><code class="hljs javascript copyable" lang="javascript">applyMiddleware(store, [ logger, crashReporter ])<span class="copy-code-btn">复制代码</span></code></pre><p></p><p><br></p><p>写到这里，我们可以简单地测试一下中间件。我创建了三个中间件，分别是logger1、thunk、logger2，其作用也很简单，打印logger1 -&gt; 执行异步dispatch -&gt; 打印logger2，我们通过这个例子观察中间件的执行顺序</p><p></p><p></p><p></p><pre code-lang="javascript" class="hljs javascript"><code class="hljs javascript copyable" lang="javascript"><span class="hljs-comment">//index.js</span>
<span class="hljs-keyword">import</span> React <span class="hljs-keyword">from</span> <span class="hljs-string">'react'</span>;
<span class="hljs-keyword">import</span> ReactDOM <span class="hljs-keyword">from</span> <span class="hljs-string">'react-dom'</span>;
<span class="hljs-keyword">import</span> App <span class="hljs-keyword">from</span> <span class="hljs-string">'./App'</span>;
<span class="hljs-keyword">import</span> { Provider } <span class="hljs-keyword">from</span> <span class="hljs-string">'./react-redux'</span>
<span class="hljs-keyword">import</span> { createStore } <span class="hljs-keyword">from</span> <span class="hljs-string">'./store'</span>
<span class="hljs-keyword">import</span> { reducer } <span class="hljs-keyword">from</span> <span class="hljs-string">'./reducer'</span>

<span class="hljs-keyword">let</span> store = createStore(reducer)

<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">logger</span>(<span class="hljs-params">store</span>) </span>{    
    <span class="hljs-keyword">let</span> next = store.dispatch    
    <span class="hljs-keyword">return</span> <span class="hljs-function">(<span class="hljs-params">action</span>) =&gt;</span> {        
        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'logger1'</span>)        
        <span class="hljs-keyword">let</span> result = next(action)        
        <span class="hljs-keyword">return</span> result    
    }
}

<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">thunk</span>(<span class="hljs-params">store</span>) </span>{    
    <span class="hljs-keyword">let</span> next = store.dispatch    
    <span class="hljs-keyword">return</span> <span class="hljs-function">(<span class="hljs-params">action</span>) =&gt;</span> {        
        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'thunk'</span>)        
        <span class="hljs-keyword">return</span> <span class="hljs-keyword">typeof</span> action === <span class="hljs-string">'function'</span> ? action(store.dispatch) : next(action)    
    }
}

<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">logger2</span>(<span class="hljs-params">store</span>) </span>{    
    <span class="hljs-keyword">let</span> next = store.dispatch        
    <span class="hljs-keyword">return</span> <span class="hljs-function">(<span class="hljs-params">action</span>) =&gt;</span> {        
        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'logger2'</span>)        
        <span class="hljs-keyword">let</span> result = next(action)        
        <span class="hljs-keyword">return</span> result    
    }
}

<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">applyMiddleware</span>(<span class="hljs-params">store, middlewares</span>) </span>{    
    middlewares = [ ...middlewares ]      
    middlewares.reverse()     
    middlewares.forEach(<span class="hljs-function"><span class="hljs-params">middleware</span> =&gt;</span>      
        store.dispatch = middleware(store)    
    )
}

applyMiddleware(store, [ logger, thunk, logger2 ])

ReactDOM.render(    
    <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">Provider</span> <span class="hljs-attr">store</span>=<span class="hljs-string">{store}</span>&gt;</span>        
        <span class="hljs-tag">&lt;<span class="hljs-name">App</span> /&gt;</span>    
    <span class="hljs-tag">&lt;/<span class="hljs-name">Provider</span>&gt;</span></span>,     
    <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">'root'</span>)
);<span class="copy-code-btn">复制代码</span></code></pre><p></p><p><br></p><p>发出异步dispatch</p><p></p><p></p><p></p><pre code-lang="javascript" class="hljs javascript"><code class="hljs javascript copyable" lang="javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">addCountAction</span>(<span class="hljs-params">dispatch</span>) </span>{  
    setTimeout(<span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> {    
        dispatch({ <span class="hljs-attr">type</span>: <span class="hljs-string">'plus'</span> })  
    }, <span class="hljs-number">1000</span>)
}

dispatch(addCountAction)<span class="copy-code-btn">复制代码</span></code></pre><p></p><p><br></p><p>输出结果</p><p><img class="lazyload inited loaded" data-src="https://user-gold-cdn.xitu.io/2020/1/1/16f601ddb960c8ba?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" data-width="894" data-height="686" src="./8k字 _ Redux_react-redux_redux中间件设计实现剖析 - 掘金_files/16f601ddb960c8ba"><br></p><p>可以看到，控制台先输出了中间件logger1的打印结果，然后进入thunk中间件打印了'thunk'，等待一秒后，异步dispatch被触发，又重新走了一遍logger1 -&gt; thunk -&gt; logger2。到这里，我们就基本实现了可拔插、可组合的中间件机制，还顺便实现了redux-thunk。</p><p><br></p><h3 data-id="heading-13">6. 纯函数</h3><p>之前的例子已经基本实现我们的需求，但我们还可以进一步改进，上面这个函数看起来仍然不够“纯”，函数在函数体内修改了store自身的dispatch，产生了所谓的“副作用”，从函数式编程的规范出发，我们可以进行一些改造，借鉴react-redux的实现思路，我们可以把applyMiddleware作为高阶函数，用于增强store，而不是替换dispatch：</p><p>先对createStore进行一个小改造，传入heightener（即applyMiddleware），heightener接收并强化createStore。</p><p></p><p></p><p></p><pre code-lang="javascript" class="hljs javascript"><code class="hljs javascript copyable" lang="javascript"><span class="hljs-comment">// store.js</span>
<span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> createStore = <span class="hljs-function">(<span class="hljs-params">reducer, heightener</span>) =&gt;</span> {    
    <span class="hljs-comment">// heightener是一个高阶函数,用于增强createStore    </span>
    <span class="hljs-comment">//如果存在heightener,则执行增强后的createStore    </span>
    <span class="hljs-keyword">if</span> (heightener) {        
        <span class="hljs-keyword">return</span> heightener(createStore)(reducer)    
    }        
    <span class="hljs-keyword">let</span> currentState = {}    
    <span class="hljs-keyword">let</span> observers = []             <span class="hljs-comment">//观察者队列    </span>
    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getState</span>(<span class="hljs-params"></span>) </span>{        
        <span class="hljs-keyword">return</span> currentState    
    }    
    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dispatch</span>(<span class="hljs-params">action</span>) </span>{        
        currentState = reducer(currentState, action);        
        observers.forEach(<span class="hljs-function"><span class="hljs-params">fn</span> =&gt;</span> fn())    
    }    
    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">subscribe</span>(<span class="hljs-params">fn</span>) </span>{        
        observers.push(fn)    
    }    
    dispatch({ <span class="hljs-attr">type</span>: <span class="hljs-string">'@@REDUX_INIT'</span> })<span class="hljs-comment">//初始化store数据    </span>
    <span class="hljs-keyword">return</span> { getState, subscribe, dispatch }
}<span class="copy-code-btn">复制代码</span></code></pre><p></p><p><br></p><p>中间件进一步柯里化，让next通过参数传入</p><p></p><p></p><p></p><pre code-lang="javascript" class="hljs javascript"><code class="hljs javascript copyable" lang="javascript"><span class="hljs-keyword">const</span> logger = <span class="hljs-function"><span class="hljs-params">store</span> =&gt;</span> next =&gt; <span class="hljs-function"><span class="hljs-params">action</span> =&gt;</span> {    
    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'log1'</span>)    
    <span class="hljs-keyword">let</span> result = next(action)    
    <span class="hljs-keyword">return</span> result
}

<span class="hljs-keyword">const</span> thunk = <span class="hljs-function"><span class="hljs-params">store</span> =&gt;</span> next =&gt;<span class="hljs-function"><span class="hljs-params">action</span> =&gt;</span> {
    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'thunk'</span>)    
    <span class="hljs-keyword">const</span> { dispatch, getState } = store    
    <span class="hljs-keyword">return</span> <span class="hljs-keyword">typeof</span> action === <span class="hljs-string">'function'</span> ? action(store.dispatch) : next(action)
}

<span class="hljs-keyword">const</span> logger2 = <span class="hljs-function"><span class="hljs-params">store</span> =&gt;</span> next =&gt; <span class="hljs-function"><span class="hljs-params">action</span> =&gt;</span> {    
    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'log2'</span>)    
    <span class="hljs-keyword">let</span> result = next(action)    
    <span class="hljs-keyword">return</span> result
}<span class="copy-code-btn">复制代码</span></code></pre><p></p><p><br></p><p>改造applyMiddleware</p><p></p><p></p><p></p><pre code-lang="javascript" class="hljs javascript"><code class="hljs javascript copyable" lang="javascript"><span class="hljs-keyword">const</span> applyMiddleware = <span class="hljs-function">(<span class="hljs-params">...middlewares</span>) =&gt;</span> createStore =&gt; <span class="hljs-function"><span class="hljs-params">reducer</span> =&gt;</span> {    
    <span class="hljs-keyword">const</span> store = createStore(reducer)    
    <span class="hljs-keyword">let</span> { getState, dispatch } = store    
    <span class="hljs-keyword">const</span> params = {      
        getState,      
        <span class="hljs-attr">dispatch</span>: <span class="hljs-function">(<span class="hljs-params">action</span>) =&gt;</span> dispatch(action)      
        <span class="hljs-comment">//解释一下这里为什么不直接 dispatch: dispatch      </span>
        <span class="hljs-comment">//因为直接使用dispatch会产生闭包,导致所有中间件都共享同一个dispatch,如果有中间件修改了dispatch或者进行异步dispatch就可能出错    </span>
    }    

    <span class="hljs-keyword">const</span> middlewareArr = middlewares.map(<span class="hljs-function"><span class="hljs-params">middleware</span> =&gt;</span> middleware(params)) 
   
    dispatch = compose(...middlewareArr)(dispatch)    
    <span class="hljs-keyword">return</span> { ...store, dispatch }
}

<span class="hljs-comment">//compose这一步对应了middlewares.reverse(),是函数式编程一种常见的组合方法</span>
<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">compose</span>(<span class="hljs-params">...fns</span>) </span>{
    <span class="hljs-keyword">if</span> (fns.length === <span class="hljs-number">0</span>) <span class="hljs-keyword">return</span> <span class="hljs-function"><span class="hljs-params">arg</span> =&gt;</span> arg    
    <span class="hljs-keyword">if</span> (fns.length === <span class="hljs-number">1</span>) <span class="hljs-keyword">return</span> fns[<span class="hljs-number">0</span>]    
    <span class="hljs-keyword">return</span> fns.reduce(<span class="hljs-function">(<span class="hljs-params">res, cur</span>) =&gt;</span><span class="hljs-function">(<span class="hljs-params">...args</span>) =&gt;</span> res(cur(...args)))
}<span class="copy-code-btn">复制代码</span></code></pre><p></p><p>代码应该不难看懂，在上一个例子的基础上，我们主要做了两个改造</p><p>1. 使用compose方法取代了<span>middlewares.reverse()，compose是函数式编程中常用的一种组合函数的方式，compose内部使用reduce巧妙地组合了中间件函数，使传入的中间件函数变成</span><span><code>(...arg) =&gt; mid1(mid2(mid3(...arg)))</code>这种形式</span></p><p><span>2. 不直接替换dispatch，而是作为高阶函数增强createStore，最后return的是一个新的store</span></p><p><br></p><h3 data-id="heading-14">7.洋葱圈模型</h3><p>之所以把洋葱圈模型放到后面来讲，是因为洋葱圈和前边中间件的实现并没有很紧密的关系，为了避免读者混淆，放到这里再提一下。我们直接放出三个打印日志的中间件，观察输出结果，就能很轻易地看懂洋葱圈模型。</p><p></p><p></p><p></p><pre code-lang="javascript" class="hljs javascript"><code class="hljs javascript copyable" lang="javascript"><span class="hljs-keyword">const</span> logger1 = <span class="hljs-function"><span class="hljs-params">store</span> =&gt;</span> next =&gt; <span class="hljs-function"><span class="hljs-params">action</span> =&gt;</span> {    
    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'进入log1'</span>)    
    <span class="hljs-keyword">let</span> result = next(action)    
    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'离开log1'</span>)    
    <span class="hljs-keyword">return</span> result
}

<span class="hljs-keyword">const</span> logger2 = <span class="hljs-function"><span class="hljs-params">store</span> =&gt;</span> next =&gt; <span class="hljs-function"><span class="hljs-params">action</span> =&gt;</span> {    
    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'进入log2'</span>)    
    <span class="hljs-keyword">let</span> result = next(action)    
    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'离开log2'</span>)    
    <span class="hljs-keyword">return</span> result
}

<span class="hljs-keyword">const</span> logger3 = <span class="hljs-function"><span class="hljs-params">store</span> =&gt;</span> next =&gt; <span class="hljs-function"><span class="hljs-params">action</span> =&gt;</span> {    
    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'进入log3'</span>)    
    <span class="hljs-keyword">let</span> result = next(action)    
    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'离开log3'</span>)    
    <span class="hljs-keyword">return</span> result
}<span class="copy-code-btn">复制代码</span></code></pre><p></p><p><br></p><p>执行结果</p><p><img class="lazyload inited loaded" data-src="https://user-gold-cdn.xitu.io/2020/1/1/16f602b97933b126?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" data-width="634" data-height="550" src="./8k字 _ Redux_react-redux_redux中间件设计实现剖析 - 掘金_files/16f602b97933b126"><br></p><p>由于我们的中间件是这样的结构：</p><p></p><p></p><p></p><pre code-lang="javascript" class="hljs javascript"><code class="hljs javascript copyable" lang="javascript">logger1(    
    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'进入logger1'</span>)    
        logger2(        
            <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'进入logger2'</span>)        
                logger3(            
                    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'进入logger3'</span>)            
                    <span class="hljs-comment">//dispatch()            </span>
                    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'离开logger3'</span>)        
                )        
            <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'离开logger2'</span>)    
        )    
    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'离开logger1'</span>)
)<span class="copy-code-btn">复制代码</span></code></pre><p></p><p>因此我们可以看到，中间件的执行顺序实际上是这样的：</p><p>进入log1 -&gt; 执行next -&gt; 进入log2 -&gt; 执行next -&gt; 进入log3 -&gt; 执行next -&gt; next执行完毕 -&gt; 离开log3 -&gt; 回到上一层中间件,执行上层中间件next之后的语句 -&gt; 离开log2 -&gt; 回到中间件log1, 执行log1的next之后的语句 -&gt; 离开log1</p><blockquote>这就是所谓的“洋葱圈模型”</blockquote><p><img class="lazyload inited loaded" data-src="https://user-gold-cdn.xitu.io/2020/1/1/16f60342f3c7758e?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" data-width="1279" data-height="960" src="./8k字 _ Redux_react-redux_redux中间件设计实现剖析 - 掘金_files/16f60342f3c7758e"><br></p><p><br></p><p><br></p><h2 data-id="heading-15">四. 总结 &amp; 致谢</h2><p>其实全文看下来，读者应该能够体会到，redux、react-redux以及redux中间件的实现并不复杂，各自的核心代码不过十余行，但在这寥寥数行代码之间，蕴含了一系列编程思想与设计范式 —— 观察者模式、装饰器模式、中间件机制、函数柯里化、函数式编程。我们阅读源码的意义，也就在于理解和体会这些思想。</p><p>全篇成文前后经历一个月，主要参考资料来自同事分享以及多篇相关文章，在此特别感谢龙超大佬和于中大佬的分享。在考据细节的过程中，也得到了很多素未谋面的朋友们的解惑，特别是感谢Frank1e大佬在中间件柯里化理解上给予的帮助。真是感谢大家Thanks♪(･ω·)ﾉ</p><p><br></p></div></article><div data-v-fa2339b8="" data-v-6fdc8784="" class="tag-list-box"><div data-v-fa2339b8="" data-v-6fdc8784="" class="tag-list-title">关注下面的标签，发现更多相似文章</div><div data-v-fa2339b8="" data-v-6fdc8784="" st:block="tagList" class="tag-list"><a data-v-fa2339b8="" href="https://juejin.im/tag/React.js" target="_blank" rel="" st:name="tag" class="item" data-v-6fdc8784=""><div data-v-95ddf8f6="" data-v-4802f2b2="" data-v-fa2339b8="" data-src="https://lc-gold-cdn.xitu.io/f655215074250f10f8d4.png?imageView2/2/w/42/h/42/q/85/format/webp/interlace/1" class="lazy thumb tag-icon loaded" style="background-image: url(&quot;https://lc-gold-cdn.xitu.io/f655215074250f10f8d4.png?imageView2/2/w/42/h/42/q/85/format/webp/interlace/1&quot;); background-size: contain;"></div><div data-v-fa2339b8="" class="tag-title">React.js</div></a></div></div><a data-v-fa2339b8="" href="https://juejin.im/user/5d194f8151882517de2ae188" target="_blank" rel="" data-v-6fdc8784=""><div data-v-fa2339b8="" class="footer-author-block"><div data-v-081ef9db="" data-v-fa2339b8="" itemscope="itemscope" itemtype="http://schema.org/Person" class="author"><meta itemprop="url" content="https://juejin.im/user/5d194f8151882517de2ae188"><meta itemprop="image" content="https://user-gold-cdn.xitu.io/2020/5/12/1720611905f5dfef?w=748&amp;h=728&amp;f=png&amp;s=280989"><meta itemprop="name" content="写代码像蔡徐抻"><meta itemprop="jobTitle" content="时长一年半的React练习生"><!----><div data-v-081ef9db="" class="author-info-block"><a data-v-081ef9db="" href="https://juejin.im/user/5d194f8151882517de2ae188" target="_blank" rel="" class="avatar-link"><div data-v-95ddf8f6="" data-v-39db9419="" data-v-081ef9db="" data-src="https://user-gold-cdn.xitu.io/2020/5/12/1720611905f5dfef?imageView2/1/w/100/h/100/q/85/format/webp/interlace/1" class="lazy avatar avatar loaded" style="background-image: url(&quot;https://user-gold-cdn.xitu.io/2020/5/12/1720611905f5dfef?imageView2/1/w/100/h/100/q/85/format/webp/interlace/1&quot;);"></div></a><div data-v-081ef9db="" class="author-info-box"><div data-v-081ef9db="" class="profile-box"><a data-v-263f3a32="" data-v-081ef9db="" href="https://juejin.im/user/5d194f8151882517de2ae188" target="_blank" rel="" class="username username ellipsis">写代码像蔡徐抻<a data-v-6d94a6ea="" data-v-263f3a32="" href="https://juejin.im/book/5c90640c5188252d7941f5bb/section/5c9065385188252da6320022" target="_blank" rel="" class="rank"><img data-v-6d94a6ea="" src="./8k字 _ Redux_react-redux_redux中间件设计实现剖析 - 掘金_files/lv-3.e108c68.svg" alt="lv-3"></a></a><span data-v-081ef9db="" class="position ellipsis">时长一年半的React练习生</span></div><div data-v-081ef9db="" class="meta-box"><a data-v-081ef9db="" href="https://juejin.im/user/5d194f8151882517de2ae188/posts" target="_blank" rel="" class="posts"><span data-v-081ef9db="" class="count post-count">发布了 5 篇专栏 · </span></a><span data-v-081ef9db="" class="count">获得点赞 3,330 · </span><span data-v-081ef9db="" class="count">获得阅读 141,669</span></div></div><button data-v-5789daef="" data-v-081ef9db="" class="follow-button follow">关注</button></div></div></div></a><div data-v-fa2339b8="" data-v-6fdc8784="" st:block="banner" class="article-banner"><a data-v-fa2339b8="" data-v-6fdc8784="" st:name="link" st:state="https://juejin.im/extension/?utm_source=juejin.im&amp;utm_medium=post&amp;utm_campaign=extension_promotion" class="banner-title" href="https://juejin.im/extension/?utm_source=juejin.im&amp;utm_medium=post&amp;utm_campaign=extension_promotion" target="_blank">安装掘金浏览器插件</a><div data-v-fa2339b8="" data-v-6fdc8784="" class="banner-content">打开新标签页发现好内容，掘金、GitHub、Dribbble、ProductHunt 等站点内容轻松获取。快来安装掘金浏览器插件获取高质量内容吧！</div></div><!----><!----><div data-v-0d823780="" data-v-fa2339b8="" class="comment-list-box" id="comment-box" data-v-6fdc8784="" manual="true"><div data-v-0d823780="" class="title">评论</div><div data-v-155bc796="" data-v-0d823780="" class="comment-form comment-form"><div data-v-155bc796="" class="avatar-box"><div data-v-95ddf8f6="" data-v-39db9419="" data-v-155bc796="" data-src="https://mirror-gold-cdn.xitu.io/168e08d6d9e8b3febec?imageView2/1/w/100/h/100/q/85/format/webp/interlace/1" class="lazy avatar avatar loaded" style="background-image: url(&quot;https://mirror-gold-cdn.xitu.io/168e08d6d9e8b3febec?imageView2/1/w/100/h/100/q/85/format/webp/interlace/1&quot;);"></div></div><div data-v-155bc796="" class="form-box"><div data-v-155bc796="" class="input-box"><div data-v-cc6aae16="" data-v-155bc796="" class="auth-card"><!----><div data-v-155bc796="" data-v-cc6aae16="" contenteditable="true" spellcheck="false" placeholder="输入评论..." class="rich-input empty"><br data-v-155bc796="" data-v-cc6aae16=""></div></div><!----></div><!----></div><input data-v-155bc796="" type="file" class="hidden"></div><div data-v-1540c949="" data-v-0d823780="" class="comment-list comment-list"><div data-v-0a49d917="" data-v-1540c949="" class="image-viewer-box"><!----></div><div data-v-1540c949="" class="item"><div data-v-164d9344="" data-v-1540c949="" class="comment comment"><div data-v-b628736a="" data-v-164d9344="" st:block="userPopover" st:state="5ad0dcaa6fb9a028d93794b9" class="user-popover-box popover"><!----><a data-v-164d9344="" href="https://juejin.im/user/5ad0dcaa6fb9a028d93794b9" target="_blank" rel="" class="user-link" data-v-b628736a=""><div data-v-95ddf8f6="" data-v-39db9419="" data-v-164d9344="" data-src="https://mirror-gold-cdn.xitu.io/168e08ee59386eb3223?imageView2/1/w/100/h/100/q/85/format/webp/interlace/1" class="lazy avatar avatar loaded" style="background-image: url(&quot;https://mirror-gold-cdn.xitu.io/168e08ee59386eb3223?imageView2/1/w/100/h/100/q/85/format/webp/interlace/1&quot;);"></div></a></div><div data-v-164d9344="" class="content-box comment-divider-line"><div data-v-164d9344="" class="meta-box"><div data-v-b628736a="" data-v-164d9344="" st:block="userPopover" st:state="5ad0dcaa6fb9a028d93794b9" class="user-popover-box"><!----><a data-v-263f3a32="" data-v-164d9344="" href="https://juejin.im/user/5ad0dcaa6fb9a028d93794b9" target="_blank" rel="" class="username username ellipsis" data-v-b628736a="">余腾靖<a data-v-6d94a6ea="" data-v-263f3a32="" href="https://juejin.im/book/5c90640c5188252d7941f5bb/section/5c9065385188252da6320022" target="_blank" rel="" class="rank"><img data-v-6d94a6ea="" src="./8k字 _ Redux_react-redux_redux中间件设计实现剖析 - 掘金_files/lv-2.f597b88.svg" alt="lv-2"></a></a></div><div data-v-164d9344="" class="position">应届生 @ day day up</div></div><div data-v-164d9344="" class="content">棒!</div><div data-v-164d9344="" class="limit-ctl-box"><!----><!----></div><!----><div data-v-164d9344="" class="reply-stat"><time data-v-164d9344="" datetime="2020-05-13T09:53:48.558Z" title="Wed May 13 2020 17:53:48 GMT+0800 (中国标准时间)" class="time">9天前</time><div data-v-164d9344="" class="delete"> &nbsp;·&nbsp;删除</div><div data-v-164d9344="" class="action-box"><div data-v-164d9344="" class="like-action action"><svg data-v-164d9344="" aria-hidden="true" width="16" height="16" viewBox="0 0 20 20" class="icon like-icon"><g data-v-164d9344="" fill="none" fill-rule="evenodd"><path data-v-164d9344="" d="M0 0h20v20H0z"></path> <path data-v-164d9344="" stroke="#8A93A0" stroke-linejoin="round" d="M4.58 8.25V17h-1.4C2.53 17 2 16.382 2 15.624V9.735c0-.79.552-1.485 1.18-1.485h1.4zM11.322 2c1.011.019 1.614.833 1.823 1.235.382.735.392 1.946.13 2.724-.236.704-.785 1.629-.785 1.629h4.11c.434 0 .838.206 1.107.563.273.365.363.84.24 1.272l-1.86 6.513A1.425 1.425 0 0 1 14.724 17H6.645V7.898C8.502 7.51 9.643 4.59 9.852 3.249A1.47 1.47 0 0 1 11.322 2z"></path></g></svg><!----></div><div data-v-164d9344="" class="comment-action action"><svg data-v-164d9344="" aria-hidden="true" width="16" height="16" viewBox="0 0 20 20" class="icon comment-icon"><g data-v-164d9344="" fill="none" fill-rule="evenodd"><path data-v-164d9344="" d="M0 0h20v20H0z"></path> <path data-v-164d9344="" stroke="#8A93A0" stroke-linejoin="round" d="M10 17c-4.142 0-7.5-2.91-7.5-6.5S5.858 4 10 4c4.142 0 7.5 2.91 7.5 6.5 0 1.416-.522 2.726-1.41 3.794-.129.156.41 3.206.41 3.206l-3.265-1.134c-.998.369-2.077.634-3.235.634z"></path></g></svg> <span data-v-164d9344="" class="action-title">回复</span></div></div></div><!----><div data-v-0aa2f002="" data-v-164d9344="" class="sub-comment-list sub-comment-list"><!----></div></div><!----></div></div><div data-v-1540c949="" class="item"><div data-v-164d9344="" data-v-1540c949="" class="comment comment"><div data-v-b628736a="" data-v-164d9344="" st:block="userPopover" st:state="5c37505d6fb9a049e3084f01" class="user-popover-box popover"><!----><a data-v-164d9344="" href="https://juejin.im/user/5c37505d6fb9a049e3084f01" target="_blank" rel="" class="user-link" data-v-b628736a=""><div data-v-95ddf8f6="" data-v-39db9419="" data-v-164d9344="" data-src="https://user-gold-cdn.xitu.io/2020/3/17/170e7ba8e68f016f?imageView2/1/w/100/h/100/q/85/format/webp/interlace/1" class="lazy avatar avatar loaded" style="background-image: url(&quot;https://user-gold-cdn.xitu.io/2020/3/17/170e7ba8e68f016f?imageView2/1/w/100/h/100/q/85/format/webp/interlace/1&quot;);"></div></a></div><div data-v-164d9344="" class="content-box comment-divider-line"><div data-v-164d9344="" class="meta-box"><div data-v-b628736a="" data-v-164d9344="" st:block="userPopover" st:state="5c37505d6fb9a049e3084f01" class="user-popover-box"><!----><a data-v-263f3a32="" data-v-164d9344="" href="https://juejin.im/user/5c37505d6fb9a049e3084f01" target="_blank" rel="" class="username username ellipsis" data-v-b628736a="">KaKaKa<!----></a></div><div data-v-164d9344="" class="position"></div></div><div data-v-164d9344="" class="content">一定要给个赞！！！写得太清晰易懂了</div><div data-v-164d9344="" class="limit-ctl-box"><!----><!----></div><!----><div data-v-164d9344="" class="reply-stat"><time data-v-164d9344="" datetime="2020-05-12T06:55:36.465Z" title="Tue May 12 2020 14:55:36 GMT+0800 (中国标准时间)" class="time">10天前</time><div data-v-164d9344="" class="delete"> &nbsp;·&nbsp;删除</div><div data-v-164d9344="" class="action-box"><div data-v-164d9344="" class="like-action action"><svg data-v-164d9344="" aria-hidden="true" width="16" height="16" viewBox="0 0 20 20" class="icon like-icon"><g data-v-164d9344="" fill="none" fill-rule="evenodd"><path data-v-164d9344="" d="M0 0h20v20H0z"></path> <path data-v-164d9344="" stroke="#8A93A0" stroke-linejoin="round" d="M4.58 8.25V17h-1.4C2.53 17 2 16.382 2 15.624V9.735c0-.79.552-1.485 1.18-1.485h1.4zM11.322 2c1.011.019 1.614.833 1.823 1.235.382.735.392 1.946.13 2.724-.236.704-.785 1.629-.785 1.629h4.11c.434 0 .838.206 1.107.563.273.365.363.84.24 1.272l-1.86 6.513A1.425 1.425 0 0 1 14.724 17H6.645V7.898C8.502 7.51 9.643 4.59 9.852 3.249A1.47 1.47 0 0 1 11.322 2z"></path></g></svg><!----></div><div data-v-164d9344="" class="comment-action action"><svg data-v-164d9344="" aria-hidden="true" width="16" height="16" viewBox="0 0 20 20" class="icon comment-icon"><g data-v-164d9344="" fill="none" fill-rule="evenodd"><path data-v-164d9344="" d="M0 0h20v20H0z"></path> <path data-v-164d9344="" stroke="#8A93A0" stroke-linejoin="round" d="M10 17c-4.142 0-7.5-2.91-7.5-6.5S5.858 4 10 4c4.142 0 7.5 2.91 7.5 6.5 0 1.416-.522 2.726-1.41 3.794-.129.156.41 3.206.41 3.206l-3.265-1.134c-.998.369-2.077.634-3.235.634z"></path></g></svg> <span data-v-164d9344="" class="action-title">回复</span></div></div></div><!----><div data-v-0aa2f002="" data-v-164d9344="" class="sub-comment-list sub-comment-list"><!----></div></div><!----></div></div><div data-v-1540c949="" class="item"><div data-v-164d9344="" data-v-1540c949="" class="comment comment"><div data-v-b628736a="" data-v-164d9344="" st:block="userPopover" st:state="59211bd8570c350069aa5b94" class="user-popover-box popover"><!----><a data-v-164d9344="" href="https://juejin.im/user/59211bd8570c350069aa5b94" target="_blank" rel="" class="user-link" data-v-b628736a=""><div data-v-95ddf8f6="" data-v-39db9419="" data-v-164d9344="" data-src="https://user-gold-cdn.xitu.io/2019/8/18/16ca54f725090a43?imageView2/1/w/100/h/100/q/85/format/webp/interlace/1" class="lazy avatar avatar loaded" style="background-image: url(&quot;https://user-gold-cdn.xitu.io/2019/8/18/16ca54f725090a43?imageView2/1/w/100/h/100/q/85/format/webp/interlace/1&quot;);"></div></a></div><div data-v-164d9344="" class="content-box comment-divider-line"><div data-v-164d9344="" class="meta-box"><div data-v-b628736a="" data-v-164d9344="" st:block="userPopover" st:state="59211bd8570c350069aa5b94" class="user-popover-box"><!----><a data-v-263f3a32="" data-v-164d9344="" href="https://juejin.im/user/59211bd8570c350069aa5b94" target="_blank" rel="" class="username username ellipsis" data-v-b628736a="">angelayun<a data-v-6d94a6ea="" data-v-263f3a32="" href="https://juejin.im/book/5c90640c5188252d7941f5bb/section/5c9065385188252da6320022" target="_blank" rel="" class="rank"><img data-v-6d94a6ea="" src="./8k字 _ Redux_react-redux_redux中间件设计实现剖析 - 掘金_files/lv-1.636691c.svg" alt="lv-1"></a></a></div><div data-v-164d9344="" class="position">前端开发工程师</div></div><div data-v-164d9344="" class="content">赞赞</div><div data-v-164d9344="" class="limit-ctl-box"><!----><!----></div><!----><div data-v-164d9344="" class="reply-stat"><time data-v-164d9344="" datetime="2020-05-05T03:10:15.469Z" title="Tue May 05 2020 11:10:15 GMT+0800 (中国标准时间)" class="time">17天前</time><div data-v-164d9344="" class="delete"> &nbsp;·&nbsp;删除</div><div data-v-164d9344="" class="action-box"><div data-v-164d9344="" class="like-action action"><svg data-v-164d9344="" aria-hidden="true" width="16" height="16" viewBox="0 0 20 20" class="icon like-icon"><g data-v-164d9344="" fill="none" fill-rule="evenodd"><path data-v-164d9344="" d="M0 0h20v20H0z"></path> <path data-v-164d9344="" stroke="#8A93A0" stroke-linejoin="round" d="M4.58 8.25V17h-1.4C2.53 17 2 16.382 2 15.624V9.735c0-.79.552-1.485 1.18-1.485h1.4zM11.322 2c1.011.019 1.614.833 1.823 1.235.382.735.392 1.946.13 2.724-.236.704-.785 1.629-.785 1.629h4.11c.434 0 .838.206 1.107.563.273.365.363.84.24 1.272l-1.86 6.513A1.425 1.425 0 0 1 14.724 17H6.645V7.898C8.502 7.51 9.643 4.59 9.852 3.249A1.47 1.47 0 0 1 11.322 2z"></path></g></svg><!----></div><div data-v-164d9344="" class="comment-action action"><svg data-v-164d9344="" aria-hidden="true" width="16" height="16" viewBox="0 0 20 20" class="icon comment-icon"><g data-v-164d9344="" fill="none" fill-rule="evenodd"><path data-v-164d9344="" d="M0 0h20v20H0z"></path> <path data-v-164d9344="" stroke="#8A93A0" stroke-linejoin="round" d="M10 17c-4.142 0-7.5-2.91-7.5-6.5S5.858 4 10 4c4.142 0 7.5 2.91 7.5 6.5 0 1.416-.522 2.726-1.41 3.794-.129.156.41 3.206.41 3.206l-3.265-1.134c-.998.369-2.077.634-3.235.634z"></path></g></svg> <span data-v-164d9344="" class="action-title">回复</span></div></div></div><!----><div data-v-0aa2f002="" data-v-164d9344="" class="sub-comment-list sub-comment-list"><!----></div></div><!----></div></div><div data-v-1540c949="" class="item"><div data-v-164d9344="" data-v-1540c949="" class="comment comment"><div data-v-b628736a="" data-v-164d9344="" st:block="userPopover" st:state="59211bd8570c350069aa5b94" class="user-popover-box popover"><!----><a data-v-164d9344="" href="https://juejin.im/user/59211bd8570c350069aa5b94" target="_blank" rel="" class="user-link" data-v-b628736a=""><div data-v-95ddf8f6="" data-v-39db9419="" data-v-164d9344="" data-src="https://user-gold-cdn.xitu.io/2019/8/18/16ca54f725090a43?imageView2/1/w/100/h/100/q/85/format/webp/interlace/1" class="lazy avatar avatar loaded" style="background-image: url(&quot;https://user-gold-cdn.xitu.io/2019/8/18/16ca54f725090a43?imageView2/1/w/100/h/100/q/85/format/webp/interlace/1&quot;);"></div></a></div><div data-v-164d9344="" class="content-box comment-divider-line"><div data-v-164d9344="" class="meta-box"><div data-v-b628736a="" data-v-164d9344="" st:block="userPopover" st:state="59211bd8570c350069aa5b94" class="user-popover-box"><!----><a data-v-263f3a32="" data-v-164d9344="" href="https://juejin.im/user/59211bd8570c350069aa5b94" target="_blank" rel="" class="username username ellipsis" data-v-b628736a="">angelayun<a data-v-6d94a6ea="" data-v-263f3a32="" href="https://juejin.im/book/5c90640c5188252d7941f5bb/section/5c9065385188252da6320022" target="_blank" rel="" class="rank"><img data-v-6d94a6ea="" src="./8k字 _ Redux_react-redux_redux中间件设计实现剖析 - 掘金_files/lv-1.636691c.svg" alt="lv-1"></a></a></div><div data-v-164d9344="" class="position">前端开发工程师</div></div><div data-v-164d9344="" class="content">佩服三连</div><div data-v-164d9344="" class="limit-ctl-box"><!----><!----></div><!----><div data-v-164d9344="" class="reply-stat"><time data-v-164d9344="" datetime="2020-05-05T02:58:19.168Z" title="Tue May 05 2020 10:58:19 GMT+0800 (中国标准时间)" class="time">17天前</time><div data-v-164d9344="" class="delete"> &nbsp;·&nbsp;删除</div><div data-v-164d9344="" class="action-box"><div data-v-164d9344="" class="like-action action"><svg data-v-164d9344="" aria-hidden="true" width="16" height="16" viewBox="0 0 20 20" class="icon like-icon"><g data-v-164d9344="" fill="none" fill-rule="evenodd"><path data-v-164d9344="" d="M0 0h20v20H0z"></path> <path data-v-164d9344="" stroke="#8A93A0" stroke-linejoin="round" d="M4.58 8.25V17h-1.4C2.53 17 2 16.382 2 15.624V9.735c0-.79.552-1.485 1.18-1.485h1.4zM11.322 2c1.011.019 1.614.833 1.823 1.235.382.735.392 1.946.13 2.724-.236.704-.785 1.629-.785 1.629h4.11c.434 0 .838.206 1.107.563.273.365.363.84.24 1.272l-1.86 6.513A1.425 1.425 0 0 1 14.724 17H6.645V7.898C8.502 7.51 9.643 4.59 9.852 3.249A1.47 1.47 0 0 1 11.322 2z"></path></g></svg><!----></div><div data-v-164d9344="" class="comment-action action"><svg data-v-164d9344="" aria-hidden="true" width="16" height="16" viewBox="0 0 20 20" class="icon comment-icon"><g data-v-164d9344="" fill="none" fill-rule="evenodd"><path data-v-164d9344="" d="M0 0h20v20H0z"></path> <path data-v-164d9344="" stroke="#8A93A0" stroke-linejoin="round" d="M10 17c-4.142 0-7.5-2.91-7.5-6.5S5.858 4 10 4c4.142 0 7.5 2.91 7.5 6.5 0 1.416-.522 2.726-1.41 3.794-.129.156.41 3.206.41 3.206l-3.265-1.134c-.998.369-2.077.634-3.235.634z"></path></g></svg> <span data-v-164d9344="" class="action-title">回复</span></div></div></div><!----><div data-v-0aa2f002="" data-v-164d9344="" class="sub-comment-list sub-comment-list"><!----></div></div><!----></div></div><div data-v-1540c949="" class="item"><div data-v-164d9344="" data-v-1540c949="" class="comment comment"><div data-v-b628736a="" data-v-164d9344="" st:block="userPopover" st:state="5ce821d76fb9a07ecc445ffe" class="user-popover-box popover"><!----><a data-v-164d9344="" href="https://juejin.im/user/5ce821d76fb9a07ecc445ffe" target="_blank" rel="" class="user-link" data-v-b628736a=""><div data-v-95ddf8f6="" data-v-39db9419="" data-v-164d9344="" data-src="https://user-gold-cdn.xitu.io/2019/5/25/16aeac7af1f16d21?imageView2/1/w/100/h/100/q/85/format/webp/interlace/1" class="lazy avatar avatar loaded" style="background-image: url(&quot;https://user-gold-cdn.xitu.io/2019/5/25/16aeac7af1f16d21?imageView2/1/w/100/h/100/q/85/format/webp/interlace/1&quot;);"></div></a></div><div data-v-164d9344="" class="content-box comment-divider-line"><div data-v-164d9344="" class="meta-box"><div data-v-b628736a="" data-v-164d9344="" st:block="userPopover" st:state="5ce821d76fb9a07ecc445ffe" class="user-popover-box"><!----><a data-v-263f3a32="" data-v-164d9344="" href="https://juejin.im/user/5ce821d76fb9a07ecc445ffe" target="_blank" rel="" class="username username ellipsis" data-v-b628736a="">jerryPisces<!----></a></div><div data-v-164d9344="" class="position">徐坤_蔡前端</div></div><div data-v-164d9344="" class="content">很清晰啊～～，素质三连</div><div data-v-164d9344="" class="limit-ctl-box"><!----><!----></div><!----><div data-v-164d9344="" class="reply-stat"><time data-v-164d9344="" datetime="2020-04-30T08:55:08.281Z" title="Thu Apr 30 2020 16:55:08 GMT+0800 (中国标准时间)" class="time">22天前</time><div data-v-164d9344="" class="delete"> &nbsp;·&nbsp;删除</div><div data-v-164d9344="" class="action-box"><div data-v-164d9344="" class="like-action action"><svg data-v-164d9344="" aria-hidden="true" width="16" height="16" viewBox="0 0 20 20" class="icon like-icon"><g data-v-164d9344="" fill="none" fill-rule="evenodd"><path data-v-164d9344="" d="M0 0h20v20H0z"></path> <path data-v-164d9344="" stroke="#8A93A0" stroke-linejoin="round" d="M4.58 8.25V17h-1.4C2.53 17 2 16.382 2 15.624V9.735c0-.79.552-1.485 1.18-1.485h1.4zM11.322 2c1.011.019 1.614.833 1.823 1.235.382.735.392 1.946.13 2.724-.236.704-.785 1.629-.785 1.629h4.11c.434 0 .838.206 1.107.563.273.365.363.84.24 1.272l-1.86 6.513A1.425 1.425 0 0 1 14.724 17H6.645V7.898C8.502 7.51 9.643 4.59 9.852 3.249A1.47 1.47 0 0 1 11.322 2z"></path></g></svg><!----></div><div data-v-164d9344="" class="comment-action action"><svg data-v-164d9344="" aria-hidden="true" width="16" height="16" viewBox="0 0 20 20" class="icon comment-icon"><g data-v-164d9344="" fill="none" fill-rule="evenodd"><path data-v-164d9344="" d="M0 0h20v20H0z"></path> <path data-v-164d9344="" stroke="#8A93A0" stroke-linejoin="round" d="M10 17c-4.142 0-7.5-2.91-7.5-6.5S5.858 4 10 4c4.142 0 7.5 2.91 7.5 6.5 0 1.416-.522 2.726-1.41 3.794-.129.156.41 3.206.41 3.206l-3.265-1.134c-.998.369-2.077.634-3.235.634z"></path></g></svg> <span data-v-164d9344="" class="action-title">回复</span></div></div></div><!----><div data-v-0aa2f002="" data-v-164d9344="" class="sub-comment-list sub-comment-list"><!----></div></div><!----></div></div><div data-v-1540c949="" class="item"><div data-v-164d9344="" data-v-1540c949="" class="comment comment"><div data-v-b628736a="" data-v-164d9344="" st:block="userPopover" st:state="5be1c6ddf265da6112047cfc" class="user-popover-box popover"><!----><a data-v-164d9344="" href="https://juejin.im/user/5be1c6ddf265da6112047cfc" target="_blank" rel="" class="user-link" data-v-b628736a=""><div data-v-95ddf8f6="" data-v-39db9419="" data-v-164d9344="" data-src="https://b-gold-cdn.xitu.io/v3/static/img/default-avatar.e30559a.svg" class="lazy avatar avatar loaded" style="background-image: url(&quot;https://b-gold-cdn.xitu.io/v3/static/img/default-avatar.e30559a.svg&quot;);"></div></a></div><div data-v-164d9344="" class="content-box comment-divider-line"><div data-v-164d9344="" class="meta-box"><div data-v-b628736a="" data-v-164d9344="" st:block="userPopover" st:state="5be1c6ddf265da6112047cfc" class="user-popover-box"><!----><a data-v-263f3a32="" data-v-164d9344="" href="https://juejin.im/user/5be1c6ddf265da6112047cfc" target="_blank" rel="" class="username username ellipsis" data-v-b628736a="">j植树<!----></a></div><div data-v-164d9344="" class="position"></div></div><div data-v-164d9344="" class="content">大佬写的真好  学习的思路也很值得学习</div><div data-v-164d9344="" class="limit-ctl-box"><!----><!----></div><!----><div data-v-164d9344="" class="reply-stat"><time data-v-164d9344="" datetime="2020-04-23T01:17:15.074Z" title="Thu Apr 23 2020 09:17:15 GMT+0800 (中国标准时间)" class="time">29天前</time><div data-v-164d9344="" class="delete"> &nbsp;·&nbsp;删除</div><div data-v-164d9344="" class="action-box"><div data-v-164d9344="" class="like-action action"><svg data-v-164d9344="" aria-hidden="true" width="16" height="16" viewBox="0 0 20 20" class="icon like-icon"><g data-v-164d9344="" fill="none" fill-rule="evenodd"><path data-v-164d9344="" d="M0 0h20v20H0z"></path> <path data-v-164d9344="" stroke="#8A93A0" stroke-linejoin="round" d="M4.58 8.25V17h-1.4C2.53 17 2 16.382 2 15.624V9.735c0-.79.552-1.485 1.18-1.485h1.4zM11.322 2c1.011.019 1.614.833 1.823 1.235.382.735.392 1.946.13 2.724-.236.704-.785 1.629-.785 1.629h4.11c.434 0 .838.206 1.107.563.273.365.363.84.24 1.272l-1.86 6.513A1.425 1.425 0 0 1 14.724 17H6.645V7.898C8.502 7.51 9.643 4.59 9.852 3.249A1.47 1.47 0 0 1 11.322 2z"></path></g></svg><!----></div><div data-v-164d9344="" class="comment-action action"><svg data-v-164d9344="" aria-hidden="true" width="16" height="16" viewBox="0 0 20 20" class="icon comment-icon"><g data-v-164d9344="" fill="none" fill-rule="evenodd"><path data-v-164d9344="" d="M0 0h20v20H0z"></path> <path data-v-164d9344="" stroke="#8A93A0" stroke-linejoin="round" d="M10 17c-4.142 0-7.5-2.91-7.5-6.5S5.858 4 10 4c4.142 0 7.5 2.91 7.5 6.5 0 1.416-.522 2.726-1.41 3.794-.129.156.41 3.206.41 3.206l-3.265-1.134c-.998.369-2.077.634-3.235.634z"></path></g></svg> <span data-v-164d9344="" class="action-title">回复</span></div></div></div><!----><div data-v-0aa2f002="" data-v-164d9344="" class="sub-comment-list sub-comment-list"><!----></div></div><!----></div></div></div><div data-v-0d823780="" class="fetch-more-comment">查看更多 &gt;</div></div></div><!----><div data-v-fa2339b8="" data-v-6fdc8784="" st:block="recommended" class="main-area recommended-area shadow"><div data-v-fa2339b8="" data-v-6fdc8784="" class="recommended-entry-list-title">相关推荐</div><!----><ul data-v-0dfe6a32="" data-v-fa2339b8="" st:block="entryList" class="entry-list recommended-entry-list" data-v-6fdc8784=""><!----><li data-v-0dfe6a32="" data-growing-container="true" data-growing-title="entryList" class="item"><div data-v-18d129a6="" data-v-0dfe6a32="" class="entry-box"><div data-v-ecbf465a="" data-v-18d129a6="" st:block="entry" st:state="5ec73759e51d45786716849c|1" class="entry"><a data-v-ecbf465a="" href="https://juejin.im/post/5ec7372cf265da76de5cd0c9" target="_blank" rel="" st:name="link" class="entry-link"><div data-v-ecbf465a="" class="content-box"><div data-v-ecbf465a="" class="info-box"><div data-v-ecbf465a="" class="info-row meta-row"><ul data-v-ecbf465a="" class="meta-list"><!----><!----><li data-v-ecbf465a="" class="item post">专栏</li><li data-v-ecbf465a="" class="item username clickable"><div data-v-b628736a="" data-v-ecbf465a="" st:block="userPopover" st:state="5cd23730f265da03576edbf1" class="user-popover-box"><!----><a data-v-ecbf465a="" href="https://juejin.im/user/5cd23730f265da03576edbf1" target="_blank" rel="" st:name="user" st:state="5cd23730f265da03576edbf1" data-v-b628736a="">云音乐前端技术团队</a></div></li><li data-v-ecbf465a="" class="item">12小时前</li><li data-v-ecbf465a="" class="item tag"><a data-v-ecbf465a="" href="https://juejin.im/tag/React.js" target="_blank" rel="" st:name="tag" st:state="555e99ffe4b00c57d99556aa" class="tag">React.js</a></li><!----></ul></div><div data-v-ecbf465a="" class="info-row title-row"><!----><!----><a data-v-ecbf465a="" href="https://juejin.im/post/5ec7372cf265da76de5cd0c9" target="_blank" rel="" st:name="title" class="title">React Hooks 最佳实践</a></div><div data-v-ecbf465a="" class="info-row action-row"><ul data-v-ecbf465a="" class="action-list"><li data-v-ecbf465a="" st:name="likeBtn" class="item like clickable"><a data-v-ecbf465a="" class="title-box"><img data-v-ecbf465a="" src="./8k字 _ Redux_react-redux_redux中间件设计实现剖析 - 掘金_files/zan.e9d7698.svg" class="icon"><span data-v-ecbf465a="" class="count">115</span></a></li><li data-v-ecbf465a="" st:name="commentBtn" class="item comment clickable"><a data-v-ecbf465a="" href="https://juejin.im/post/5ec7372cf265da76de5cd0c9#comment" target="_blank" rel="" class="title-box"><img data-v-ecbf465a="" src="./8k字 _ Redux_react-redux_redux中间件设计实现剖析 - 掘金_files/comment.4d5744f.svg" class="icon"><span data-v-ecbf465a="" class="count">5</span></a></li><li data-v-ecbf465a="" st:name="shareBtn" title="分享" class="item share clickable hover"><img data-v-ecbf465a="" src="./8k字 _ Redux_react-redux_redux中间件设计实现剖析 - 掘金_files/share.1d55e69.svg" class="icon"><div data-v-ecbf465a="" class="share-panel"><div data-v-ecbf465a="" st:name="shareItem" st:state="weibo" class="share-item weibo"><img data-v-ecbf465a="" src="./8k字 _ Redux_react-redux_redux中间件设计实现剖析 - 掘金_files/weibo.8e2f5d6.svg" class="icon">微博</div><div data-v-ecbf465a="" st:name="shareItem" st:state="wechat" class="share-item wechat"><img data-v-ecbf465a="" src="./8k字 _ Redux_react-redux_redux中间件设计实现剖析 - 掘金_files/wechat.844402c.svg" class="icon">微信扫一扫<div data-v-ecbf465a="" class="qr-code-box"><img data-v-ecbf465a="" src="https://juejin.im/post/5def4831e51d45584b585000" class="qr-code"></div></div></div></li><li data-v-ecbf465a="" title="收藏" st:name="collectBtn" class="item collect clickable hover"><img data-v-ecbf465a="" src="./8k字 _ Redux_react-redux_redux中间件设计实现剖析 - 掘金_files/collect.02e2979.svg" class="icon"><!----></li><!----></ul></div></div><div data-v-95ddf8f6="" data-v-4802f2b2="" data-v-ecbf465a="" data-src="https://user-gold-cdn.xitu.io/2020/5/22/1723a2fabc28a57f?imageView2/1/w/120/h/120/q/85/format/webp/interlace/1" class="lazy thumb thumb loaded" style="background-image: url(&quot;https://user-gold-cdn.xitu.io/2020/5/22/1723a2fabc28a57f?imageView2/1/w/120/h/120/q/85/format/webp/interlace/1&quot;); background-size: cover;"></div></div></a></div></div></li><li data-v-0dfe6a32="" data-growing-container="true" data-growing-title="entryList" class="item"><div data-v-18d129a6="" data-v-0dfe6a32="" class="entry-box"><div data-v-ecbf465a="" data-v-18d129a6="" st:block="entry" st:state="5ec79fc2518825432d4c9809|2" class="entry"><a data-v-ecbf465a="" href="https://juejin.im/post/5ec79f1ae51d457858774dde" target="_blank" rel="" st:name="link" class="entry-link"><div data-v-ecbf465a="" class="content-box"><div data-v-ecbf465a="" class="info-box"><div data-v-ecbf465a="" class="info-row meta-row"><ul data-v-ecbf465a="" class="meta-list"><!----><!----><li data-v-ecbf465a="" class="item post">专栏</li><li data-v-ecbf465a="" class="item username clickable"><div data-v-b628736a="" data-v-ecbf465a="" st:block="userPopover" st:state="5c04d9a9e51d457d7939c38f" class="user-popover-box"><!----><a data-v-ecbf465a="" href="https://juejin.im/user/5c04d9a9e51d457d7939c38f" target="_blank" rel="" st:name="user" st:state="5c04d9a9e51d457d7939c38f" data-v-b628736a="">日明</a></div></li><li data-v-ecbf465a="" class="item">5小时前</li><li data-v-ecbf465a="" class="item tag"><a data-v-ecbf465a="" href="https://juejin.im/tag/React.js" target="_blank" rel="" st:name="tag" st:state="555e99ffe4b00c57d99556aa" class="tag">React.js</a></li><!----></ul></div><div data-v-ecbf465a="" class="info-row title-row"><!----><!----><a data-v-ecbf465a="" href="https://juejin.im/post/5ec79f1ae51d457858774dde" target="_blank" rel="" st:name="title" class="title"># 从零开始封装一个属于自己的UI框架（二）  --配置开发环境篇</a></div><div data-v-ecbf465a="" class="info-row action-row"><ul data-v-ecbf465a="" class="action-list"><li data-v-ecbf465a="" st:name="likeBtn" class="item like clickable"><a data-v-ecbf465a="" class="title-box"><img data-v-ecbf465a="" src="./8k字 _ Redux_react-redux_redux中间件设计实现剖析 - 掘金_files/zan.e9d7698.svg" class="icon"><span data-v-ecbf465a="" class="count">5</span></a></li><li data-v-ecbf465a="" st:name="commentBtn" class="item comment clickable"><a data-v-ecbf465a="" href="https://juejin.im/post/5ec79f1ae51d457858774dde#comment" target="_blank" rel="" class="title-box"><img data-v-ecbf465a="" src="./8k字 _ Redux_react-redux_redux中间件设计实现剖析 - 掘金_files/comment.4d5744f.svg" class="icon"><!----></a></li><li data-v-ecbf465a="" st:name="shareBtn" title="分享" class="item share clickable hover"><img data-v-ecbf465a="" src="./8k字 _ Redux_react-redux_redux中间件设计实现剖析 - 掘金_files/share.1d55e69.svg" class="icon"><div data-v-ecbf465a="" class="share-panel"><div data-v-ecbf465a="" st:name="shareItem" st:state="weibo" class="share-item weibo"><img data-v-ecbf465a="" src="./8k字 _ Redux_react-redux_redux中间件设计实现剖析 - 掘金_files/weibo.8e2f5d6.svg" class="icon">微博</div><div data-v-ecbf465a="" st:name="shareItem" st:state="wechat" class="share-item wechat"><img data-v-ecbf465a="" src="./8k字 _ Redux_react-redux_redux中间件设计实现剖析 - 掘金_files/wechat.844402c.svg" class="icon">微信扫一扫<div data-v-ecbf465a="" class="qr-code-box"><img data-v-ecbf465a="" src="https://juejin.im/post/5def4831e51d45584b585000" class="qr-code"></div></div></div></li><li data-v-ecbf465a="" title="收藏" st:name="collectBtn" class="item collect clickable hover"><img data-v-ecbf465a="" src="./8k字 _ Redux_react-redux_redux中间件设计实现剖析 - 掘金_files/collect.02e2979.svg" class="icon"><!----></li><!----></ul></div></div><!----></div></a></div></div></li><li data-v-0dfe6a32="" data-growing-container="true" data-growing-title="entryList" class="item"><div data-v-18d129a6="" data-v-0dfe6a32="" class="entry-box"><div data-v-ecbf465a="" data-v-18d129a6="" st:block="entry" st:state="5ec4bd7e6fb9a047f9371fee|3" class="entry"><a data-v-ecbf465a="" href="https://juejin.im/post/5ec4bb046fb9a047e25d5166" target="_blank" rel="" st:name="link" class="entry-link"><div data-v-ecbf465a="" class="content-box"><div data-v-ecbf465a="" class="info-box"><div data-v-ecbf465a="" class="info-row meta-row"><ul data-v-ecbf465a="" class="meta-list"><!----><!----><li data-v-ecbf465a="" class="item post">专栏</li><li data-v-ecbf465a="" class="item username clickable"><div data-v-b628736a="" data-v-ecbf465a="" st:block="userPopover" st:state="5b33414351882574b9694d28" class="user-popover-box"><!----><a data-v-ecbf465a="" href="https://juejin.im/user/5b33414351882574b9694d28" target="_blank" rel="" st:name="user" st:state="5b33414351882574b9694d28" data-v-b628736a="">图雀社区</a></div></li><li data-v-ecbf465a="" class="item">2天前</li><li data-v-ecbf465a="" class="item tag"><a data-v-ecbf465a="" href="https://juejin.im/tag/React.js" target="_blank" rel="" st:name="tag" st:state="555e99ffe4b00c57d99556aa" class="tag">React.js</a></li><!----></ul></div><div data-v-ecbf465a="" class="info-row title-row"><!----><!----><a data-v-ecbf465a="" href="https://juejin.im/post/5ec4bb046fb9a047e25d5166" target="_blank" rel="" st:name="title" class="title">18 个 React 最佳实践技巧，助你在 520 这一天过得舒心</a></div><div data-v-ecbf465a="" class="info-row action-row"><ul data-v-ecbf465a="" class="action-list"><li data-v-ecbf465a="" st:name="likeBtn" class="item like clickable"><a data-v-ecbf465a="" class="title-box"><img data-v-ecbf465a="" src="./8k字 _ Redux_react-redux_redux中间件设计实现剖析 - 掘金_files/zan.e9d7698.svg" class="icon"><span data-v-ecbf465a="" class="count">62</span></a></li><li data-v-ecbf465a="" st:name="commentBtn" class="item comment clickable"><a data-v-ecbf465a="" href="https://juejin.im/post/5ec4bb046fb9a047e25d5166#comment" target="_blank" rel="" class="title-box"><img data-v-ecbf465a="" src="./8k字 _ Redux_react-redux_redux中间件设计实现剖析 - 掘金_files/comment.4d5744f.svg" class="icon"><span data-v-ecbf465a="" class="count">10</span></a></li><li data-v-ecbf465a="" st:name="shareBtn" title="分享" class="item share clickable hover"><img data-v-ecbf465a="" src="./8k字 _ Redux_react-redux_redux中间件设计实现剖析 - 掘金_files/share.1d55e69.svg" class="icon"><div data-v-ecbf465a="" class="share-panel"><div data-v-ecbf465a="" st:name="shareItem" st:state="weibo" class="share-item weibo"><img data-v-ecbf465a="" src="./8k字 _ Redux_react-redux_redux中间件设计实现剖析 - 掘金_files/weibo.8e2f5d6.svg" class="icon">微博</div><div data-v-ecbf465a="" st:name="shareItem" st:state="wechat" class="share-item wechat"><img data-v-ecbf465a="" src="./8k字 _ Redux_react-redux_redux中间件设计实现剖析 - 掘金_files/wechat.844402c.svg" class="icon">微信扫一扫<div data-v-ecbf465a="" class="qr-code-box"><img data-v-ecbf465a="" src="https://juejin.im/post/5def4831e51d45584b585000" class="qr-code"></div></div></div></li><li data-v-ecbf465a="" title="收藏" st:name="collectBtn" class="item collect clickable hover"><img data-v-ecbf465a="" src="./8k字 _ Redux_react-redux_redux中间件设计实现剖析 - 掘金_files/collect.02e2979.svg" class="icon"><!----></li><!----></ul></div></div><div data-v-95ddf8f6="" data-v-4802f2b2="" data-v-ecbf465a="" data-src="https://user-gold-cdn.xitu.io/2020/5/20/1723081617ef7e9f?imageView2/1/w/120/h/120/q/85/format/webp/interlace/1" class="lazy thumb thumb" style="background-image: none; background-size: cover;"></div></div></a></div></div></li><!----><li data-v-0dfe6a32="" data-growing-container="true" data-growing-title="entryList" class="item"><div data-v-18d129a6="" data-v-0dfe6a32="" class="entry-box"><div data-v-ecbf465a="" data-v-18d129a6="" st:block="entry" st:state="5ebcf17c6fb9a043691d13b8|4" class="entry"><a data-v-ecbf465a="" href="https://juejin.im/post/5ebcf12df265da7bc55df460" target="_blank" rel="" st:name="link" class="entry-link"><div data-v-ecbf465a="" class="content-box"><div data-v-ecbf465a="" class="info-box"><div data-v-ecbf465a="" class="info-row meta-row"><ul data-v-ecbf465a="" class="meta-list"><!----><!----><li data-v-ecbf465a="" class="item post">专栏</li><li data-v-ecbf465a="" class="item username clickable"><div data-v-b628736a="" data-v-ecbf465a="" st:block="userPopover" st:state="58a26aeb0ce4630056498dd6" class="user-popover-box"><!----><a data-v-ecbf465a="" href="https://juejin.im/user/58a26aeb0ce4630056498dd6" target="_blank" rel="" st:name="user" st:state="58a26aeb0ce4630056498dd6" data-v-b628736a="">海秋</a></div></li><li data-v-ecbf465a="" class="item">7天前</li><li data-v-ecbf465a="" class="item tag"><a data-v-ecbf465a="" href="https://juejin.im/tag/React.js" target="_blank" rel="" st:name="tag" st:state="555e99ffe4b00c57d99556aa" class="tag">React.js</a><a data-v-ecbf465a="" href="https://juejin.im/tag/%E5%89%8D%E7%AB%AF" target="_blank" rel="" st:name="tag" st:state="5597a05ae4b08a686ce56f6f" class="tag">前端</a></li><!----></ul></div><div data-v-ecbf465a="" class="info-row title-row"><!----><!----><a data-v-ecbf465a="" href="https://juejin.im/post/5ebcf12df265da7bc55df460" target="_blank" rel="" st:name="title" class="title">可能是最详细的React组件库搭建总结</a></div><div data-v-ecbf465a="" class="info-row action-row"><ul data-v-ecbf465a="" class="action-list"><li data-v-ecbf465a="" st:name="likeBtn" class="item like clickable"><a data-v-ecbf465a="" class="title-box"><img data-v-ecbf465a="" src="./8k字 _ Redux_react-redux_redux中间件设计实现剖析 - 掘金_files/zan.e9d7698.svg" class="icon"><span data-v-ecbf465a="" class="count">467</span></a></li><li data-v-ecbf465a="" st:name="commentBtn" class="item comment clickable"><a data-v-ecbf465a="" href="https://juejin.im/post/5ebcf12df265da7bc55df460#comment" target="_blank" rel="" class="title-box"><img data-v-ecbf465a="" src="./8k字 _ Redux_react-redux_redux中间件设计实现剖析 - 掘金_files/comment.4d5744f.svg" class="icon"><span data-v-ecbf465a="" class="count">38</span></a></li><li data-v-ecbf465a="" st:name="shareBtn" title="分享" class="item share clickable hover"><img data-v-ecbf465a="" src="./8k字 _ Redux_react-redux_redux中间件设计实现剖析 - 掘金_files/share.1d55e69.svg" class="icon"><div data-v-ecbf465a="" class="share-panel"><div data-v-ecbf465a="" st:name="shareItem" st:state="weibo" class="share-item weibo"><img data-v-ecbf465a="" src="./8k字 _ Redux_react-redux_redux中间件设计实现剖析 - 掘金_files/weibo.8e2f5d6.svg" class="icon">微博</div><div data-v-ecbf465a="" st:name="shareItem" st:state="wechat" class="share-item wechat"><img data-v-ecbf465a="" src="./8k字 _ Redux_react-redux_redux中间件设计实现剖析 - 掘金_files/wechat.844402c.svg" class="icon">微信扫一扫<div data-v-ecbf465a="" class="qr-code-box"><img data-v-ecbf465a="" src="https://juejin.im/post/5def4831e51d45584b585000" class="qr-code"></div></div></div></li><li data-v-ecbf465a="" title="收藏" st:name="collectBtn" class="item collect clickable hover"><img data-v-ecbf465a="" src="./8k字 _ Redux_react-redux_redux中间件设计实现剖析 - 掘金_files/collect.02e2979.svg" class="icon"><!----></li><!----></ul></div></div><div data-v-95ddf8f6="" data-v-4802f2b2="" data-v-ecbf465a="" data-src="https://user-gold-cdn.xitu.io/2020/5/16/1721d18c531cd618?imageView2/1/w/120/h/120/q/85/format/webp/interlace/1" class="lazy thumb thumb" style="background-image: none; background-size: cover;"></div></div></a></div></div></li><li data-v-0dfe6a32="" data-growing-container="true" data-growing-title="entryList" class="item"><div data-v-18d129a6="" data-v-0dfe6a32="" class="entry-box"><div data-v-ecbf465a="" data-v-18d129a6="" st:block="entry" st:state="5ec32e486fb9a043710eba63|5" class="entry"><a data-v-ecbf465a="" href="https://juejin.im/post/5ec28e1c5188256d571ef2dc" target="_blank" rel="" st:name="link" class="entry-link"><div data-v-ecbf465a="" class="content-box"><div data-v-ecbf465a="" class="info-box"><div data-v-ecbf465a="" class="info-row meta-row"><ul data-v-ecbf465a="" class="meta-list"><!----><!----><li data-v-ecbf465a="" class="item post">专栏</li><li data-v-ecbf465a="" class="item username clickable"><div data-v-b628736a="" data-v-ecbf465a="" st:block="userPopover" st:state="5c6256596fb9a049bd42c770" class="user-popover-box"><!----><a data-v-ecbf465a="" href="https://juejin.im/user/5c6256596fb9a049bd42c770" target="_blank" rel="" st:name="user" st:state="5c6256596fb9a049bd42c770" data-v-b628736a="">刘小夕</a></div></li><li data-v-ecbf465a="" class="item">3天前</li><li data-v-ecbf465a="" class="item tag"><a data-v-ecbf465a="" href="https://juejin.im/tag/React.js" target="_blank" rel="" st:name="tag" st:state="555e99ffe4b00c57d99556aa" class="tag">React.js</a><a data-v-ecbf465a="" href="https://juejin.im/tag/JavaScript" target="_blank" rel="" st:name="tag" st:state="55964d83e4b08a686cc6b353" class="tag">JavaScript</a></li><!----></ul></div><div data-v-ecbf465a="" class="info-row title-row"><!----><!----><a data-v-ecbf465a="" href="https://juejin.im/post/5ec28e1c5188256d571ef2dc" target="_blank" rel="" st:name="title" class="title">React组件逻辑复用的那些事儿（Mixins -&gt; HOC+render props -&gt; Hooks）</a></div><div data-v-ecbf465a="" class="info-row action-row"><ul data-v-ecbf465a="" class="action-list"><li data-v-ecbf465a="" st:name="likeBtn" class="item like clickable"><a data-v-ecbf465a="" class="title-box"><img data-v-ecbf465a="" src="./8k字 _ Redux_react-redux_redux中间件设计实现剖析 - 掘金_files/zan.e9d7698.svg" class="icon"><span data-v-ecbf465a="" class="count">81</span></a></li><li data-v-ecbf465a="" st:name="commentBtn" class="item comment clickable"><a data-v-ecbf465a="" href="https://juejin.im/post/5ec28e1c5188256d571ef2dc#comment" target="_blank" rel="" class="title-box"><img data-v-ecbf465a="" src="./8k字 _ Redux_react-redux_redux中间件设计实现剖析 - 掘金_files/comment.4d5744f.svg" class="icon"><span data-v-ecbf465a="" class="count">13</span></a></li><li data-v-ecbf465a="" st:name="shareBtn" title="分享" class="item share clickable hover"><img data-v-ecbf465a="" src="./8k字 _ Redux_react-redux_redux中间件设计实现剖析 - 掘金_files/share.1d55e69.svg" class="icon"><div data-v-ecbf465a="" class="share-panel"><div data-v-ecbf465a="" st:name="shareItem" st:state="weibo" class="share-item weibo"><img data-v-ecbf465a="" src="./8k字 _ Redux_react-redux_redux中间件设计实现剖析 - 掘金_files/weibo.8e2f5d6.svg" class="icon">微博</div><div data-v-ecbf465a="" st:name="shareItem" st:state="wechat" class="share-item wechat"><img data-v-ecbf465a="" src="./8k字 _ Redux_react-redux_redux中间件设计实现剖析 - 掘金_files/wechat.844402c.svg" class="icon">微信扫一扫<div data-v-ecbf465a="" class="qr-code-box"><img data-v-ecbf465a="" src="https://juejin.im/post/5def4831e51d45584b585000" class="qr-code"></div></div></div></li><li data-v-ecbf465a="" title="收藏" st:name="collectBtn" class="item collect clickable hover"><img data-v-ecbf465a="" src="./8k字 _ Redux_react-redux_redux中间件设计实现剖析 - 掘金_files/collect.02e2979.svg" class="icon"><!----></li><!----></ul></div></div><div data-v-95ddf8f6="" data-v-4802f2b2="" data-v-ecbf465a="" data-src="https://user-gold-cdn.xitu.io/2020/5/18/1722800bd522f520?imageView2/1/w/120/h/120/q/85/format/webp/interlace/1" class="lazy thumb thumb" style="background-image: none; background-size: cover;"></div></div></a></div></div></li><!----><!----><li data-v-0dfe6a32="" data-growing-container="true" data-growing-title="entryList" class="item"><div data-v-18d129a6="" data-v-0dfe6a32="" class="entry-box"><div data-v-ecbf465a="" data-v-18d129a6="" st:block="entry" st:state="5ec7483c518825433a57a7e7|4" class="entry"><a data-v-ecbf465a="" href="https://juejin.im/post/5ec739ac6fb9a047d45b8e8c" target="_blank" rel="" st:name="link" class="entry-link"><div data-v-ecbf465a="" class="content-box"><div data-v-ecbf465a="" class="info-box"><div data-v-ecbf465a="" class="info-row meta-row"><ul data-v-ecbf465a="" class="meta-list"><!----><!----><li data-v-ecbf465a="" class="item post">专栏</li><li data-v-ecbf465a="" class="item username clickable"><div data-v-b628736a="" data-v-ecbf465a="" st:block="userPopover" st:state="58b4cbfd1b69e6005878a101" class="user-popover-box"><!----><a data-v-ecbf465a="" href="https://juejin.im/user/58b4cbfd1b69e6005878a101" target="_blank" rel="" st:name="user" st:state="58b4cbfd1b69e6005878a101" data-v-b628736a="">猴赛雷</a></div></li><li data-v-ecbf465a="" class="item">11小时前</li><li data-v-ecbf465a="" class="item tag"><a data-v-ecbf465a="" href="https://juejin.im/tag/React.js" target="_blank" rel="" st:name="tag" st:state="555e99ffe4b00c57d99556aa" class="tag">React.js</a></li><!----></ul></div><div data-v-ecbf465a="" class="info-row title-row"><!----><!----><a data-v-ecbf465a="" href="https://juejin.im/post/5ec739ac6fb9a047d45b8e8c" target="_blank" rel="" st:name="title" class="title">初探 nextjs 服务端渲染框架</a></div><div data-v-ecbf465a="" class="info-row action-row"><ul data-v-ecbf465a="" class="action-list"><li data-v-ecbf465a="" st:name="likeBtn" class="item like clickable"><a data-v-ecbf465a="" class="title-box"><img data-v-ecbf465a="" src="./8k字 _ Redux_react-redux_redux中间件设计实现剖析 - 掘金_files/zan.e9d7698.svg" class="icon"><span data-v-ecbf465a="" class="count">2</span></a></li><li data-v-ecbf465a="" st:name="commentBtn" class="item comment clickable"><a data-v-ecbf465a="" href="https://juejin.im/post/5ec739ac6fb9a047d45b8e8c#comment" target="_blank" rel="" class="title-box"><img data-v-ecbf465a="" src="./8k字 _ Redux_react-redux_redux中间件设计实现剖析 - 掘金_files/comment.4d5744f.svg" class="icon"><!----></a></li><li data-v-ecbf465a="" st:name="shareBtn" title="分享" class="item share clickable hover"><img data-v-ecbf465a="" src="./8k字 _ Redux_react-redux_redux中间件设计实现剖析 - 掘金_files/share.1d55e69.svg" class="icon"><div data-v-ecbf465a="" class="share-panel"><div data-v-ecbf465a="" st:name="shareItem" st:state="weibo" class="share-item weibo"><img data-v-ecbf465a="" src="./8k字 _ Redux_react-redux_redux中间件设计实现剖析 - 掘金_files/weibo.8e2f5d6.svg" class="icon">微博</div><div data-v-ecbf465a="" st:name="shareItem" st:state="wechat" class="share-item wechat"><img data-v-ecbf465a="" src="./8k字 _ Redux_react-redux_redux中间件设计实现剖析 - 掘金_files/wechat.844402c.svg" class="icon">微信扫一扫<div data-v-ecbf465a="" class="qr-code-box"><img data-v-ecbf465a="" src="https://juejin.im/post/5def4831e51d45584b585000" class="qr-code"></div></div></div></li><li data-v-ecbf465a="" title="收藏" st:name="collectBtn" class="item collect clickable hover"><img data-v-ecbf465a="" src="./8k字 _ Redux_react-redux_redux中间件设计实现剖析 - 掘金_files/collect.02e2979.svg" class="icon"><!----></li><!----></ul></div></div><!----></div></a></div></div></li><li data-v-0dfe6a32="" data-growing-container="true" data-growing-title="entryList" class="item"><div data-v-18d129a6="" data-v-0dfe6a32="" class="entry-box"><div data-v-ecbf465a="" data-v-18d129a6="" st:block="entry" st:state="5ec6332851882543194eba8a|5" class="entry"><a data-v-ecbf465a="" href="https://juejin.im/post/5eac3babf265da7bcd5c4d8b" target="_blank" rel="" st:name="link" class="entry-link"><div data-v-ecbf465a="" class="content-box"><div data-v-ecbf465a="" class="info-box"><div data-v-ecbf465a="" class="info-row meta-row"><ul data-v-ecbf465a="" class="meta-list"><!----><!----><li data-v-ecbf465a="" class="item post">专栏</li><li data-v-ecbf465a="" class="item username clickable"><div data-v-b628736a="" data-v-ecbf465a="" st:block="userPopover" st:state="5d38178cf265da1bb27773f4" class="user-popover-box"><!----><a data-v-ecbf465a="" href="https://juejin.im/user/5d38178cf265da1bb27773f4" target="_blank" rel="" st:name="user" st:state="5d38178cf265da1bb27773f4" data-v-b628736a="">小小晴_</a></div></li><li data-v-ecbf465a="" class="item">1天前</li><li data-v-ecbf465a="" class="item tag"><a data-v-ecbf465a="" href="https://juejin.im/tag/React.js" target="_blank" rel="" st:name="tag" st:state="555e99ffe4b00c57d99556aa" class="tag">React.js</a></li><!----></ul></div><div data-v-ecbf465a="" class="info-row title-row"><!----><!----><a data-v-ecbf465a="" href="https://juejin.im/post/5eac3babf265da7bcd5c4d8b" target="_blank" rel="" st:name="title" class="title">【React】深入理解虚拟dom和diff算法</a></div><div data-v-ecbf465a="" class="info-row action-row"><ul data-v-ecbf465a="" class="action-list"><li data-v-ecbf465a="" st:name="likeBtn" class="item like clickable"><a data-v-ecbf465a="" class="title-box"><img data-v-ecbf465a="" src="./8k字 _ Redux_react-redux_redux中间件设计实现剖析 - 掘金_files/zan.e9d7698.svg" class="icon"><span data-v-ecbf465a="" class="count">18</span></a></li><li data-v-ecbf465a="" st:name="commentBtn" class="item comment clickable"><a data-v-ecbf465a="" href="https://juejin.im/post/5eac3babf265da7bcd5c4d8b#comment" target="_blank" rel="" class="title-box"><img data-v-ecbf465a="" src="./8k字 _ Redux_react-redux_redux中间件设计实现剖析 - 掘金_files/comment.4d5744f.svg" class="icon"><span data-v-ecbf465a="" class="count">6</span></a></li><li data-v-ecbf465a="" st:name="shareBtn" title="分享" class="item share clickable hover"><img data-v-ecbf465a="" src="./8k字 _ Redux_react-redux_redux中间件设计实现剖析 - 掘金_files/share.1d55e69.svg" class="icon"><div data-v-ecbf465a="" class="share-panel"><div data-v-ecbf465a="" st:name="shareItem" st:state="weibo" class="share-item weibo"><img data-v-ecbf465a="" src="./8k字 _ Redux_react-redux_redux中间件设计实现剖析 - 掘金_files/weibo.8e2f5d6.svg" class="icon">微博</div><div data-v-ecbf465a="" st:name="shareItem" st:state="wechat" class="share-item wechat"><img data-v-ecbf465a="" src="./8k字 _ Redux_react-redux_redux中间件设计实现剖析 - 掘金_files/wechat.844402c.svg" class="icon">微信扫一扫<div data-v-ecbf465a="" class="qr-code-box"><img data-v-ecbf465a="" src="https://juejin.im/post/5def4831e51d45584b585000" class="qr-code"></div></div></div></li><li data-v-ecbf465a="" title="收藏" st:name="collectBtn" class="item collect clickable hover"><img data-v-ecbf465a="" src="./8k字 _ Redux_react-redux_redux中间件设计实现剖析 - 掘金_files/collect.02e2979.svg" class="icon"><!----></li><!----></ul></div></div><div data-v-95ddf8f6="" data-v-4802f2b2="" data-v-ecbf465a="" data-src="https://user-gold-cdn.xitu.io/2020/5/21/172364df18d1d05f?imageView2/1/w/120/h/120/q/85/format/webp/interlace/1" class="lazy thumb thumb" style="background-image: none; background-size: cover;"></div></div></a></div></div></li><li data-v-0dfe6a32="" data-growing-container="true" data-growing-title="entryList" class="item"><div data-v-18d129a6="" data-v-0dfe6a32="" class="entry-box"><div data-v-ecbf465a="" data-v-18d129a6="" st:block="entry" st:state="5ec00bece51d454dda7f5ac6|6" class="entry"><a data-v-ecbf465a="" href="https://juejin.im/post/5ec00abb6fb9a0438222986a" target="_blank" rel="" st:name="link" class="entry-link"><div data-v-ecbf465a="" class="content-box"><div data-v-ecbf465a="" class="info-box"><div data-v-ecbf465a="" class="info-row meta-row"><ul data-v-ecbf465a="" class="meta-list"><!----><!----><li data-v-ecbf465a="" class="item post">专栏</li><li data-v-ecbf465a="" class="item username clickable"><div data-v-b628736a="" data-v-ecbf465a="" st:block="userPopover" st:state="5bf0eac3518825604e0e4849" class="user-popover-box"><!----><a data-v-ecbf465a="" href="https://juejin.im/user/5bf0eac3518825604e0e4849" target="_blank" rel="" st:name="user" st:state="5bf0eac3518825604e0e4849" data-v-b628736a="">落落落洛克</a></div></li><li data-v-ecbf465a="" class="item">4天前</li><li data-v-ecbf465a="" class="item tag"><a data-v-ecbf465a="" href="https://juejin.im/tag/React.js" target="_blank" rel="" st:name="tag" st:state="555e99ffe4b00c57d99556aa" class="tag">React.js</a></li><!----></ul></div><div data-v-ecbf465a="" class="info-row title-row"><!----><!----><a data-v-ecbf465a="" href="https://juejin.im/post/5ec00abb6fb9a0438222986a" target="_blank" rel="" st:name="title" class="title">React系列-轻松学会Hooks(中)</a></div><div data-v-ecbf465a="" class="info-row action-row"><ul data-v-ecbf465a="" class="action-list"><li data-v-ecbf465a="" st:name="likeBtn" class="item like clickable"><a data-v-ecbf465a="" class="title-box"><img data-v-ecbf465a="" src="./8k字 _ Redux_react-redux_redux中间件设计实现剖析 - 掘金_files/zan.e9d7698.svg" class="icon"><span data-v-ecbf465a="" class="count">121</span></a></li><li data-v-ecbf465a="" st:name="commentBtn" class="item comment clickable"><a data-v-ecbf465a="" href="https://juejin.im/post/5ec00abb6fb9a0438222986a#comment" target="_blank" rel="" class="title-box"><img data-v-ecbf465a="" src="./8k字 _ Redux_react-redux_redux中间件设计实现剖析 - 掘金_files/comment.4d5744f.svg" class="icon"><span data-v-ecbf465a="" class="count">15</span></a></li><li data-v-ecbf465a="" st:name="shareBtn" title="分享" class="item share clickable hover"><img data-v-ecbf465a="" src="./8k字 _ Redux_react-redux_redux中间件设计实现剖析 - 掘金_files/share.1d55e69.svg" class="icon"><div data-v-ecbf465a="" class="share-panel"><div data-v-ecbf465a="" st:name="shareItem" st:state="weibo" class="share-item weibo"><img data-v-ecbf465a="" src="./8k字 _ Redux_react-redux_redux中间件设计实现剖析 - 掘金_files/weibo.8e2f5d6.svg" class="icon">微博</div><div data-v-ecbf465a="" st:name="shareItem" st:state="wechat" class="share-item wechat"><img data-v-ecbf465a="" src="./8k字 _ Redux_react-redux_redux中间件设计实现剖析 - 掘金_files/wechat.844402c.svg" class="icon">微信扫一扫<div data-v-ecbf465a="" class="qr-code-box"><img data-v-ecbf465a="" src="https://juejin.im/post/5def4831e51d45584b585000" class="qr-code"></div></div></div></li><li data-v-ecbf465a="" title="收藏" st:name="collectBtn" class="item collect clickable hover"><img data-v-ecbf465a="" src="./8k字 _ Redux_react-redux_redux中间件设计实现剖析 - 掘金_files/collect.02e2979.svg" class="icon"><!----></li><!----></ul></div></div><div data-v-95ddf8f6="" data-v-4802f2b2="" data-v-ecbf465a="" data-src="https://user-gold-cdn.xitu.io/2020/5/16/1721e2dc72eebd8c?imageView2/1/w/120/h/120/q/85/format/webp/interlace/1" class="lazy thumb thumb" style="background-image: none; background-size: cover;"></div></div></a></div></div></li><li data-v-0dfe6a32="" data-growing-container="true" data-growing-title="entryList" class="item"><div data-v-18d129a6="" data-v-0dfe6a32="" class="entry-box"><div data-v-ecbf465a="" data-v-18d129a6="" st:block="entry" st:state="5ec4a5736fb9a047b11b3d68|7" class="entry"><a data-v-ecbf465a="" href="https://juejin.im/post/5eb64ce9f265da7ba9112b68" target="_blank" rel="" st:name="link" class="entry-link"><div data-v-ecbf465a="" class="content-box"><div data-v-ecbf465a="" class="info-box"><div data-v-ecbf465a="" class="info-row meta-row"><ul data-v-ecbf465a="" class="meta-list"><!----><!----><li data-v-ecbf465a="" class="item post">专栏</li><li data-v-ecbf465a="" class="item username clickable"><div data-v-b628736a="" data-v-ecbf465a="" st:block="userPopover" st:state="5b60485451882508603d06cd" class="user-popover-box"><!----><a data-v-ecbf465a="" href="https://juejin.im/user/5b60485451882508603d06cd" target="_blank" rel="" st:name="user" st:state="5b60485451882508603d06cd" data-v-b628736a="">hh_phoebe</a></div></li><li data-v-ecbf465a="" class="item">2天前</li><li data-v-ecbf465a="" class="item tag"><a data-v-ecbf465a="" href="https://juejin.im/tag/React.js" target="_blank" rel="" st:name="tag" st:state="555e99ffe4b00c57d99556aa" class="tag">React.js</a></li><!----></ul></div><div data-v-ecbf465a="" class="info-row title-row"><!----><!----><a data-v-ecbf465a="" href="https://juejin.im/post/5eb64ce9f265da7ba9112b68" target="_blank" rel="" st:name="title" class="title">关于react结合redux使用，或许你还应该掌握这些（图文结合，悉心整理）</a></div><div data-v-ecbf465a="" class="info-row action-row"><ul data-v-ecbf465a="" class="action-list"><li data-v-ecbf465a="" st:name="likeBtn" class="item like clickable"><a data-v-ecbf465a="" class="title-box"><img data-v-ecbf465a="" src="./8k字 _ Redux_react-redux_redux中间件设计实现剖析 - 掘金_files/zan.e9d7698.svg" class="icon"><span data-v-ecbf465a="" class="count">47</span></a></li><li data-v-ecbf465a="" st:name="commentBtn" class="item comment clickable"><a data-v-ecbf465a="" href="https://juejin.im/post/5eb64ce9f265da7ba9112b68#comment" target="_blank" rel="" class="title-box"><img data-v-ecbf465a="" src="./8k字 _ Redux_react-redux_redux中间件设计实现剖析 - 掘金_files/comment.4d5744f.svg" class="icon"><span data-v-ecbf465a="" class="count">18</span></a></li><li data-v-ecbf465a="" st:name="shareBtn" title="分享" class="item share clickable hover"><img data-v-ecbf465a="" src="./8k字 _ Redux_react-redux_redux中间件设计实现剖析 - 掘金_files/share.1d55e69.svg" class="icon"><div data-v-ecbf465a="" class="share-panel"><div data-v-ecbf465a="" st:name="shareItem" st:state="weibo" class="share-item weibo"><img data-v-ecbf465a="" src="./8k字 _ Redux_react-redux_redux中间件设计实现剖析 - 掘金_files/weibo.8e2f5d6.svg" class="icon">微博</div><div data-v-ecbf465a="" st:name="shareItem" st:state="wechat" class="share-item wechat"><img data-v-ecbf465a="" src="./8k字 _ Redux_react-redux_redux中间件设计实现剖析 - 掘金_files/wechat.844402c.svg" class="icon">微信扫一扫<div data-v-ecbf465a="" class="qr-code-box"><img data-v-ecbf465a="" src="https://juejin.im/post/5def4831e51d45584b585000" class="qr-code"></div></div></div></li><li data-v-ecbf465a="" title="收藏" st:name="collectBtn" class="item collect clickable hover"><img data-v-ecbf465a="" src="./8k字 _ Redux_react-redux_redux中间件设计实现剖析 - 掘金_files/collect.02e2979.svg" class="icon"><!----></li><!----></ul></div></div><!----></div></a></div></div></li><li data-v-0dfe6a32="" data-growing-container="true" data-growing-title="entryList" class="item"><div data-v-18d129a6="" data-v-0dfe6a32="" class="entry-box"><div data-v-ecbf465a="" data-v-18d129a6="" st:block="entry" st:state="5e9f6baef265da47ef2f40a6|8" class="entry"><a data-v-ecbf465a="" href="https://juejin.im/post/5e9f6b3251882573a855cd52" target="_blank" rel="" st:name="link" class="entry-link"><div data-v-ecbf465a="" class="content-box"><div data-v-ecbf465a="" class="info-box"><div data-v-ecbf465a="" class="info-row meta-row"><ul data-v-ecbf465a="" class="meta-list"><!----><li data-v-ecbf465a="" class="item hot">热</li><li data-v-ecbf465a="" class="item post">专栏</li><li data-v-ecbf465a="" class="item username clickable"><div data-v-b628736a="" data-v-ecbf465a="" st:block="userPopover" st:state="57bd1bdfd342d3006bf76a52" class="user-popover-box"><!----><a data-v-ecbf465a="" href="https://juejin.im/user/57bd1bdfd342d3006bf76a52" target="_blank" rel="" st:name="user" st:state="57bd1bdfd342d3006bf76a52" data-v-b628736a="">前端劝退师</a></div></li><li data-v-ecbf465a="" class="item">1月前</li><li data-v-ecbf465a="" class="item tag"><a data-v-ecbf465a="" href="https://juejin.im/tag/%E5%89%8D%E7%AB%AF" target="_blank" rel="" st:name="tag" st:state="5597a05ae4b08a686ce56f6f" class="tag">前端</a></li><!----></ul></div><div data-v-ecbf465a="" class="info-row title-row"><!----><!----><a data-v-ecbf465a="" href="https://juejin.im/post/5e9f6b3251882573a855cd52" target="_blank" rel="" st:name="title" class="title">抄笔记：尤雨溪在Vue3.0 Beta直播里聊到了这些…</a></div><div data-v-ecbf465a="" class="info-row action-row"><ul data-v-ecbf465a="" class="action-list"><li data-v-ecbf465a="" st:name="likeBtn" class="item like clickable"><a data-v-ecbf465a="" class="title-box"><img data-v-ecbf465a="" src="./8k字 _ Redux_react-redux_redux中间件设计实现剖析 - 掘金_files/zan.e9d7698.svg" class="icon"><span data-v-ecbf465a="" class="count">1565</span></a></li><li data-v-ecbf465a="" st:name="commentBtn" class="item comment clickable"><a data-v-ecbf465a="" href="https://juejin.im/post/5e9f6b3251882573a855cd52#comment" target="_blank" rel="" class="title-box"><img data-v-ecbf465a="" src="./8k字 _ Redux_react-redux_redux中间件设计实现剖析 - 掘金_files/comment.4d5744f.svg" class="icon"><span data-v-ecbf465a="" class="count">188</span></a></li><li data-v-ecbf465a="" st:name="shareBtn" title="分享" class="item share clickable hover"><img data-v-ecbf465a="" src="./8k字 _ Redux_react-redux_redux中间件设计实现剖析 - 掘金_files/share.1d55e69.svg" class="icon"><div data-v-ecbf465a="" class="share-panel"><div data-v-ecbf465a="" st:name="shareItem" st:state="weibo" class="share-item weibo"><img data-v-ecbf465a="" src="./8k字 _ Redux_react-redux_redux中间件设计实现剖析 - 掘金_files/weibo.8e2f5d6.svg" class="icon">微博</div><div data-v-ecbf465a="" st:name="shareItem" st:state="wechat" class="share-item wechat"><img data-v-ecbf465a="" src="./8k字 _ Redux_react-redux_redux中间件设计实现剖析 - 掘金_files/wechat.844402c.svg" class="icon">微信扫一扫<div data-v-ecbf465a="" class="qr-code-box"><img data-v-ecbf465a="" src="https://juejin.im/post/5def4831e51d45584b585000" class="qr-code"></div></div></div></li><li data-v-ecbf465a="" title="收藏" st:name="collectBtn" class="item collect clickable hover"><img data-v-ecbf465a="" src="./8k字 _ Redux_react-redux_redux中间件设计实现剖析 - 掘金_files/collect.02e2979.svg" class="icon"><!----></li><!----></ul></div></div><div data-v-95ddf8f6="" data-v-4802f2b2="" data-v-ecbf465a="" data-src="https://user-gold-cdn.xitu.io/2020/4/22/1719ebbc83be39f0?imageView2/1/w/120/h/120/q/85/format/webp/interlace/1" class="lazy thumb thumb" style="background-image: none; background-size: cover;"></div></div></a></div></div></li><li data-v-0dfe6a32="" class="item"><!----></li><!----></ul></div><div data-v-7301278b="" data-v-fa2339b8="" st:block="sidebar" class="sidebar sidebar top sticky" data-v-6fdc8784=""><div data-v-16442876="" data-v-76358071="" data-v-7301278b="" class="sidebar-block author-block shadow"><div data-v-16442876="" class="block-title">关于作者</div><div data-v-16442876="" class="block-body"><a data-v-76358071="" href="https://juejin.im/user/5d194f8151882517de2ae188" target="_blank" rel="" class="user-item item" data-v-16442876=""><div data-v-95ddf8f6="" data-v-39db9419="" data-v-76358071="" data-src="https://user-gold-cdn.xitu.io/2020/5/12/1720611905f5dfef?imageView2/1/w/100/h/100/q/85/format/webp/interlace/1" class="lazy avatar avatar loaded" style="background-image: url(&quot;https://user-gold-cdn.xitu.io/2020/5/12/1720611905f5dfef?imageView2/1/w/100/h/100/q/85/format/webp/interlace/1&quot;);"></div><div data-v-76358071="" class="info-box"><a data-v-263f3a32="" data-v-76358071="" href="https://juejin.im/user/5d194f8151882517de2ae188" target="_blank" rel="" class="username">写代码像蔡徐抻<a data-v-6d94a6ea="" data-v-263f3a32="" href="https://juejin.im/book/5c90640c5188252d7941f5bb/section/5c9065385188252da6320022" target="_blank" rel="" class="rank"><img data-v-6d94a6ea="" src="./8k字 _ Redux_react-redux_redux中间件设计实现剖析 - 掘金_files/lv-3.e108c68.svg" alt="lv-3"></a></a><div data-v-76358071="" title="时长一年半的React练习生" class="position">时长一年半的React练习生</div></div></a><div data-v-76358071="" data-v-16442876="" class="stat-item item"><svg data-v-76358071="" data-v-16442876="" xmlns="http://www.w3.org/2000/svg" width="25" height="26" viewBox="0 0 25 26" class="zan"><g data-v-76358071="" data-v-16442876="" fill="none" fill-rule="evenodd" transform="translate(0 .57)"><ellipse data-v-76358071="" data-v-16442876="" cx="12.5" cy="12.57" fill="#E1EFFF" rx="12.5" ry="12.57"></ellipse> <path data-v-76358071="" data-v-16442876="" fill="#7BB9FF" d="M8.596 11.238V19H7.033C6.463 19 6 18.465 6 17.807v-5.282c0-.685.483-1.287 1.033-1.287h1.563zm4.275-4.156A1.284 1.284 0 0 1 14.156 6c.885.016 1.412.722 1.595 1.07.334.638.343 1.687.114 2.361-.207.61-.687 1.412-.687 1.412h3.596c.38 0 .733.178.969.488.239.317.318.728.21 1.102l-1.628 5.645a1.245 1.245 0 0 1-1.192.922h-7.068v-7.889c1.624-.336 2.623-2.866 2.806-4.029z"></path></g></svg> <span data-v-76358071="" data-v-16442876="" class="content">获得点赞<span data-v-76358071="" data-v-16442876="" class="count">3,330</span></span></div><div data-v-76358071="" data-v-16442876="" class="stat-item item"><svg data-v-76358071="" data-v-16442876="" width="25" height="25" viewBox="0 0 25 25" class="icon stat-view-icon"><g data-v-76358071="" data-v-16442876="" fill="none" fill-rule="evenodd"><circle data-v-76358071="" data-v-16442876="" cx="12.5" cy="12.5" r="12.5" fill="#E1EFFF"></circle> <path data-v-76358071="" data-v-16442876="" fill="#7BB9FF" d="M4 12.5S6.917 7 12.75 7s8.75 5.5 8.75 5.5-2.917 5.5-8.75 5.5S4 12.5 4 12.5zm8.75 2.292c1.208 0 2.188-1.026 2.188-2.292 0-1.266-.98-2.292-2.188-2.292-1.208 0-2.188 1.026-2.188 2.292 0 1.266.98 2.292 2.188 2.292z"></path></g></svg> <span data-v-76358071="" data-v-16442876="" class="content">文章被阅读<span data-v-76358071="" data-v-16442876="" class="count">141,669</span></span></div><!----></div></div><!----><div data-v-16442876="" data-v-f69ccc58="" data-v-518a2f8f="" data-v-7301278b="" class="sidebar-block recommend recommend-index shadow"><div data-v-16442876="" class="block-title">你可能感兴趣的小册</div><div data-v-16442876="" class="block-body"><div data-v-f69ccc58="" data-v-16442876="" class="book-list"><div data-v-f69ccc58="" data-v-16442876="" class="book"><div data-v-f69ccc58="" data-v-16442876="" class="poster"><div data-v-95ddf8f6="" data-v-4802f2b2="" data-v-f69ccc58="" data-src="https://user-gold-cdn.xitu.io/2019/2/25/16922a9c5a3527fa?imageView2/1/w/200/h/280/q/95/format/webp/interlace/1" class="lazy thumb poster-img loaded" data-v-16442876="" style="background-image: url(&quot;https://user-gold-cdn.xitu.io/2019/2/25/16922a9c5a3527fa?imageView2/1/w/200/h/280/q/95/format/webp/interlace/1&quot;); background-size: cover;"></div></div><div data-v-f69ccc58="" data-v-16442876="" class="info"><div data-v-f69ccc58="" data-v-16442876="" class="title">基于 ThreeJS 框架的魔方微信小游戏实践</div><div data-v-f69ccc58="" data-v-16442876="" class="bought"><span data-v-f69ccc58="" data-v-16442876="" class="num">930人已购买</span><span data-v-f69ccc58="" data-v-16442876="" class="try-read">试读</span></div></div></div><div data-v-f69ccc58="" data-v-16442876="" class="book"><div data-v-f69ccc58="" data-v-16442876="" class="poster"><div data-v-95ddf8f6="" data-v-4802f2b2="" data-v-f69ccc58="" data-src="https://user-gold-cdn.xitu.io/2018/12/18/167c119a41e444d5?imageView2/1/w/200/h/280/q/95/format/webp/interlace/1" class="lazy thumb poster-img loaded" data-v-16442876="" style="background-image: url(&quot;https://user-gold-cdn.xitu.io/2018/12/18/167c119a41e444d5?imageView2/1/w/200/h/280/q/95/format/webp/interlace/1&quot;); background-size: cover;"></div></div><div data-v-f69ccc58="" data-v-16442876="" class="info"><div data-v-f69ccc58="" data-v-16442876="" class="title">Vue.js 组件精讲</div><div data-v-f69ccc58="" data-v-16442876="" class="bought"><span data-v-f69ccc58="" data-v-16442876="" class="num">4958人已购买</span><span data-v-f69ccc58="" data-v-16442876="" class="try-read">试读</span></div></div></div></div></div></div><div data-v-16442876="" data-v-03315f79="" data-v-7301278b="" class="sidebar-block app-download-sidebar-block shadow"><!----><div data-v-16442876="" class="block-body"><a data-v-03315f79="" data-v-16442876="" class="app-link" href="https://juejin.im/app" target="_blank"><img data-v-03315f79="" data-v-16442876="" src="./8k字 _ Redux_react-redux_redux中间件设计实现剖析 - 掘金_files/post.7cb7332.png" class="qr-img"><div data-v-03315f79="" data-v-16442876="" class="content-box"><div data-v-03315f79="" data-v-16442876="" class="headline">下载掘金客户端</div><div data-v-03315f79="" data-v-16442876="" class="desc">一个帮助开发者成长的社区</div></div><div data-v-03315f79="" data-v-16442876="" title="关闭" class="close-btn ion-close-round"></div></a></div></div><div data-v-16442876="" data-v-3c6504c4="" data-v-7301278b="" class="sidebar-block wechat-sidebar-block pure"><div data-v-06f599f1="" data-v-3c6504c4="" class="wechat-banner" data-v-16442876=""><img data-v-06f599f1="" src="./8k字 _ Redux_react-redux_redux中间件设计实现剖析 - 掘金_files/frontend.1dae74a.png" class="wechat-img"></div><div data-v-3c6504c4="" data-v-16442876="" title="关闭" class="close-btn ion-close-round"></div></div><div data-v-16442876="" data-v-2998ad53="" data-v-7301278b="" class="sidebar-block related-entry-sidebar-block shadow" st:block="relatedEntrySidebarBlock"><div data-v-16442876="" class="block-title">相关文章</div><div data-v-16442876="" class="block-body"><div data-v-2998ad53="" data-v-16442876="" class="entry-list"><a data-v-2998ad53="" href="https://juejin.im/post/5ec7372cf265da76de5cd0c9" target="_blank" rel="" st:name="link" class="item" data-v-16442876=""><div data-v-2998ad53="" class="entry-title">React Hooks 最佳实践</div><div data-v-2998ad53="" class="entry-meta-box"><div data-v-2998ad53="" class="entry-meta"><img data-v-2998ad53="" src="./8k字 _ Redux_react-redux_redux中间件设计实现剖析 - 掘金_files/zan.e9d7698.svg" class="icon"><span data-v-2998ad53="" class="count">115</span></div><div data-v-2998ad53="" class="entry-meta"><img data-v-2998ad53="" src="./8k字 _ Redux_react-redux_redux中间件设计实现剖析 - 掘金_files/comment.a7c8341.svg" class="icon"><span data-v-2998ad53="" class="count">5</span></div></div></a><a data-v-2998ad53="" href="https://juejin.im/post/5ec79f1ae51d457858774dde" target="_blank" rel="" st:name="link" class="item" data-v-16442876=""><div data-v-2998ad53="" class="entry-title"># 从零开始封装一个属于自己的UI框架（二）  --配置开发环境篇</div><div data-v-2998ad53="" class="entry-meta-box"><div data-v-2998ad53="" class="entry-meta"><img data-v-2998ad53="" src="./8k字 _ Redux_react-redux_redux中间件设计实现剖析 - 掘金_files/zan.e9d7698.svg" class="icon"><span data-v-2998ad53="" class="count">5</span></div><div data-v-2998ad53="" class="entry-meta"><img data-v-2998ad53="" src="./8k字 _ Redux_react-redux_redux中间件设计实现剖析 - 掘金_files/comment.a7c8341.svg" class="icon"><span data-v-2998ad53="" class="count">0</span></div></div></a><a data-v-2998ad53="" href="https://juejin.im/post/5ec4bb046fb9a047e25d5166" target="_blank" rel="" st:name="link" class="item" data-v-16442876=""><div data-v-2998ad53="" class="entry-title">18 个 React 最佳实践技巧，助你在 520 这一天过得舒心</div><div data-v-2998ad53="" class="entry-meta-box"><div data-v-2998ad53="" class="entry-meta"><img data-v-2998ad53="" src="./8k字 _ Redux_react-redux_redux中间件设计实现剖析 - 掘金_files/zan.e9d7698.svg" class="icon"><span data-v-2998ad53="" class="count">62</span></div><div data-v-2998ad53="" class="entry-meta"><img data-v-2998ad53="" src="./8k字 _ Redux_react-redux_redux中间件设计实现剖析 - 掘金_files/comment.a7c8341.svg" class="icon"><span data-v-2998ad53="" class="count">10</span></div></div></a><a data-v-2998ad53="" href="https://juejin.im/post/5ebcf12df265da7bc55df460" target="_blank" rel="" st:name="link" class="item" data-v-16442876=""><div data-v-2998ad53="" class="entry-title">可能是最详细的React组件库搭建总结</div><div data-v-2998ad53="" class="entry-meta-box"><div data-v-2998ad53="" class="entry-meta"><img data-v-2998ad53="" src="./8k字 _ Redux_react-redux_redux中间件设计实现剖析 - 掘金_files/zan.e9d7698.svg" class="icon"><span data-v-2998ad53="" class="count">467</span></div><div data-v-2998ad53="" class="entry-meta"><img data-v-2998ad53="" src="./8k字 _ Redux_react-redux_redux中间件设计实现剖析 - 掘金_files/comment.a7c8341.svg" class="icon"><span data-v-2998ad53="" class="count">38</span></div></div></a><a data-v-2998ad53="" href="https://juejin.im/post/5ec28e1c5188256d571ef2dc" target="_blank" rel="" st:name="link" class="item" data-v-16442876=""><div data-v-2998ad53="" class="entry-title">React组件逻辑复用的那些事儿（Mixins -&gt; HOC+render props -&gt; Hooks）</div><div data-v-2998ad53="" class="entry-meta-box"><div data-v-2998ad53="" class="entry-meta"><img data-v-2998ad53="" src="./8k字 _ Redux_react-redux_redux中间件设计实现剖析 - 掘金_files/zan.e9d7698.svg" class="icon"><span data-v-2998ad53="" class="count">81</span></div><div data-v-2998ad53="" class="entry-meta"><img data-v-2998ad53="" src="./8k字 _ Redux_react-redux_redux中间件设计实现剖析 - 掘金_files/comment.a7c8341.svg" class="icon"><span data-v-2998ad53="" class="count">13</span></div></div></a></div></div></div><div data-v-7301278b="" class="sticky-block-box"><div data-v-16442876="" data-v-48b1e3e4="" data-v-7301278b="" class="sidebar-block catalog-block pure"><nav data-v-1a96e633="" data-v-48b1e3e4="" class="article-catalog" data-v-16442876="" style=""><div data-v-1a96e633="" class="catalog-title">目录</div><div data-v-1a96e633="" class="catalog-body"><ul data-v-1a96e633="" class="catalog-list" style="margin-top: 0px;"><li data-v-1a96e633="" class="item d1"><a href="https://juejin.im/post/5def4831e51d45584b585000#heading-0" title="一. redux的实现">一. redux的实现</a><ul class="sub-list"><li class="item d2"><a href="https://juejin.im/post/5def4831e51d45584b585000#heading-1" title="1. getState实现">1. getState实现</a><!----></li><li class="item d2"><a href="https://juejin.im/post/5def4831e51d45584b585000#heading-2" title="2.dispatch实现">2.dispatch实现</a><!----></li><li class="item d2"><a href="https://juejin.im/post/5def4831e51d45584b585000#heading-3" title="3.subscribe实现">3.subscribe实现</a><!----></li></ul></li><li data-v-1a96e633="" class="item d1"><a href="https://juejin.im/post/5def4831e51d45584b585000#heading-4" title="二. react-redux的实现">二. react-redux的实现</a><ul class="sub-list"><li class="item d2"><a href="https://juejin.im/post/5def4831e51d45584b585000#heading-5" title="1. Provider实现">1. Provider实现</a><!----></li><li class="item d2"><a href="https://juejin.im/post/5def4831e51d45584b585000#heading-6" title="2. connect实现">2. connect实现</a><!----></li></ul></li><li data-v-1a96e633="" class="item d1"><a href="https://juejin.im/post/5def4831e51d45584b585000#heading-7" title="三. redux Middleware实现">三. redux Middleware实现</a><ul class="sub-list"><li class="item d2"><a href="https://juejin.im/post/5def4831e51d45584b585000#heading-8" title="1. 在每次dispatch之后手动打印store的内容">1. 在每次dispatch之后手动打印store的内容</a><!----></li><li class="item d2"><a href="https://juejin.im/post/5def4831e51d45584b585000#heading-9" title="2. 封装dispatch">2. 封装dispatch</a><!----></li><li class="item d2"><a href="https://juejin.im/post/5def4831e51d45584b585000#heading-10" title="3. 替换dispatch">3. 替换dispatch</a><!----></li><li class="item d2"><a href="https://juejin.im/post/5def4831e51d45584b585000#heading-11" title="4. 模块化">4. 模块化</a><!----></li><li class="item d2"><a href="https://juejin.im/post/5def4831e51d45584b585000#heading-12" title="5. applyMiddleware">5.&nbsp;applyMiddleware</a><!----></li><li class="item d2"><a href="https://juejin.im/post/5def4831e51d45584b585000#heading-13" title="6. 纯函数">6. 纯函数</a><!----></li><li class="item d2"><a href="https://juejin.im/post/5def4831e51d45584b585000#heading-14" title="7.洋葱圈模型">7.洋葱圈模型</a><!----></li></ul></li><li data-v-1a96e633="" class="item d1 active"><a href="https://juejin.im/post/5def4831e51d45584b585000#heading-15" title="四. 总结 &amp; 致谢">四. 总结 &amp; 致谢</a><!----></li></ul></div></nav></div></div></div><div data-v-b753df20="" data-v-fa2339b8="" class="article-suspended-panel article-suspended-panel" data-v-6fdc8784=""><div data-v-b753df20="" class="like-btn panel-btn like-adjust with-badge" badge="479"></div><div data-v-b753df20="" class="comment-btn panel-btn comment-adjust with-badge" badge="30"></div><div data-v-b753df20="" class="collect-btn panel-btn"><!----></div><div data-v-b753df20="" class="share-title">分享</div><div data-v-b753df20="" class="weibo-btn share-btn panel-btn"></div><div data-v-b753df20="" class="qq-btn share-btn panel-btn"></div><div data-v-b753df20="" class="wechat-btn share-btn panel-btn"><img data-v-b753df20="" src="https://juejin.im/post/5def4831e51d45584b585000" class="wechat-qr-code-img shadow" style="display: none;"></div></div><div data-v-0a49d917="" data-v-fa2339b8="" class="image-viewer-box" data-v-6fdc8784=""><!----></div><!----></div></main></div><!----></div>
      
      
      
      <script type="text/javascript" src="./8k字 _ Redux_react-redux_redux中间件设计实现剖析 - 掘金_files/runtime.cc2b750c14e4e98c0e3a.js"></script><script type="text/javascript" src="./8k字 _ Redux_react-redux_redux中间件设计实现剖析 - 掘金_files/0.0b214b1cb6731ce0f8d8.js"></script><script type="text/javascript" src="./8k字 _ Redux_react-redux_redux中间件设计实现剖析 - 掘金_files/1.63ca4ab7fc5bd9c1cbc0.js"></script>
    </body></html>